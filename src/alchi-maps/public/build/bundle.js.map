{"version":3,"file":"bundle.js","sources":["../../node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/internal/index.mjs","../../node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/store/index.mjs","../../node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/easing/index.mjs","../../node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/motion/index.mjs","../../src/alchi.js","../../src/AlchiMaps.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { writable } from '../store/index.mjs';\nimport { now, loop, assign } from '../internal/index.mjs';\nimport { linear } from '../easing/index.mjs';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value) {\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        }\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled) {\n                    task = null;\n                }\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","\n// TITLE perfekte sitzordnung, vision vom paradies auf erden\n// TITLE seating-arrangements matchmaking compatibility\n\n// age sense move gen, origin 11\n// signs: 0 = same, 1 = diff\nexport const ac_bits_asmg_11 = [\n    0b1001, 0b0111, 0b1011, 0b0101,\n    0b1110, 0b0000, 0b1100, 0b0010,\n    0b1101, 0b0011, 0b1111, 0b0001,\n    0b1010, 0b0100, 0b1000, 0b0110,\n]\nexport const get_bit = function (num, idx) {\n    return (num & (1 << idx)) >> idx;\n    // TODO benchmark - just for fun\n    // parseInt(num.toString(2).padStart(4,0)[idx],10)\n}\nexport const decode_bitstring = function (asmg) {\n    return parseInt(asmg, 2);\n}\nexport const ac_xor = function(factor, list) {\n    return list.map(function (n) {\n        return factor ^ n\n    })\n}\n// letters of the four dimensions\nexport const letter_asmg = [\n    ['S', 'L'], // age   = Short  or Long\n    ['E', 'I'], // sense = Extra  or Intro\n    ['N', 'P'], // move  = Neuro  or Psycho\n    ['F', 'M'], // gen   = Female or Male\n]\n\n\n\n// element = sense + move\nexport const element = [\n    [\n      '3', // _00_ = EN = 3\n      '1', // _01_ = EP = 1\n    ], [\n      '2', // _10_ = IN = 2\n      '4', // _11_ = IP = 4\n    ],\n]\n\n\nexport const element_outside = [\n    [\n      'C', // 0__0 = SF = C\n      'A', // 0__1 = SM = A\n    ], [\n      'B', // 1__0 = LF = B\n      'D', // 1__1 = LM = D\n    ],\n]\n\n\n\n// moved to colorTable.js\n\n// TODO add front/back colors\n// light colors: yellow + green\n// dark  colors: blue + red\n// TODO auto-generate color table?\n\nexport const group_color = {\n  2: [\n    0x000000, // black\n    0xffffff, // white\n  ],\n  4: [\n    // quickfix element color\n    // \"problem\": no more rainbow color scale\n    //   = no mix-colors between red/green and blue/yellow\n    //   = opposite colors not easy to find for text vs back color\n              // color    E   SM   SM\n    0xffff00, // yellow   3   EN   00\n    0xff0000, // red      1   EP   01\n    0x00ff00, // green    2   IN   10\n    0x0000ff, // blue     4   IP   11\n/*\n    0xffff00, // yellow   3   EN   00\n    0xff0000, // red      1   EP   01\n    0x00ff00, // green    2   IN   10\n    0x0000ff, // blue     4   IP   11\n*/\n    /* rainbow color scale\n    0xff0000, // red\n    0xffff00, // yellow\n    0x00ff00, // green\n    0x0000ff, // blue\n    */\n  ],\n  8: [\n    // rainbow color scale\n    0xff0000, // red\n    0xff8000, //   orange\n    0xffff00, // yellow\n    0x80ff00, //   lime\n    0x00ff00, // green\n    0x00ffff, //   turc\n    0x0000ff, // blue\n    0xff00ff, //   purp\n  ],\n  16: [\n    // rainbow color scale\n    0xff0000, // red\n    0xff4000, //     red-orange\n    0xff8000, //   orange\n    0xffc000, //     orange-yellow\n    \n    0xffff00, // yellow\n    0xc0ff00, //     yellow-lime\n    0x80ff00, //   lime\n    0xc0ff00, //     lime-green\n    \n    0x00ff00, // green\n    0x00ff80, //     green-turc\n    0x00ffff, //   turc\n    0x0080ff, //     turc-blue\n    \n    0x0000ff, // blue\n    0x8000ff, //     blue-purp\n    0xff00ff, //   purp\n    0xff0080, //     purp-red\n  ],\n}\n\n\n\nexport const group_color_html = ( function(group_color) {\n  return Object.entries(group_color).reduce(\n    (acc, [numGroups, colors]) =>\n    {\n      acc[numGroups] = colors.map((col) => {\n        return '#'+col.toString(16).padStart(6, '0')\n      })\n      return acc\n    }, {})\n} )(group_color)\n\n\n\nexport const idxFromDim = {\n  'A': 0,\n  'S': 1,\n  'M': 2,\n  'G': 3,\n\n  'a': 0,\n  's': 1,\n  'm': 2,\n  'g': 3,}\n\n\nfunction getDimBit (asmg, dim) {\n  //global idxFromDim\n  return asmg[idxFromDim[dim]]\n}\n\nfunction nameFromGroup (g) {\n  // GxMSxA <-- GM+SA\n  // GxMxSxA <-- GMSA\n  // GMSA <-- G+M+S+A\n  return g.split('').join('x').replace('x+x', '')\n}\n\nfunction groupFromName (n) {\n  // GM+SA <-- GxMSxA\n  // G+M+S+A <-- GMSA\n  // GMSA <-- GxMxSxA\n  return n.split('').join('+').replace('+x+', '')\n}\n\nexport const letterFromASMG = function (dim, asmg) { //TODO change to (asmg, dim)\n  // ASMG\n  const i = idxFromDim[dim]\n  //console.log('dim '+dim+'   idx '+i)\n  if (i !== undefined) {\n    return letter_asmg[i][asmg[i]]\n  }\n  // element\n  if (dim == 'E' || dim == 'e') {\n    return element[asmg[1]][asmg[2]]\n  }\n  // outside element = Body = material = family role\n  if (dim == 'B' || dim == 'b') {\n    return element_outside[asmg[0]][asmg[3]]\n  }\n}\n\n\n\n// pathos: [same-move pathos, same-sense pathos]\n// pathos == the TWO next-plus-one types\n// one pathos type is horizontal next-plus-one\n// other pathos type is vertical next-plus-one\nexport const N_pathosFromN = [\n  [ 4,  2], [ 5,  3], [ 6,  0], [ 7,  1], // FNES, MNES, FPES, MPES,\n  [ 0,  6], [ 1,  7], [ 2,  4], [ 3,  5], // FNIS, MNIS, FPIS, MPIS,\n  [12, 10], [13, 11], [14,  8], [15,  9], // FNEL, MNEL, FPEL, MPEL,\n  [ 8, 14], [ 9, 15], [10, 12], [11, 13], // FNIL, MNIL, FPIL, MPIL\n]\n\n// zodiac\n// 12 zodiac signs = 4 elements x 3 modalities\n// modality \"mutable\" = 4 elements\n// modality \"fixed\" = 4 pathos with psychotic move\n// modality \"cardinal\" = 4 pathos with neurotic move\n// [how to diff the two pathos types? here: by move]\n// four elements = four \"mutable\" signs\n// idx 0 1 2 3 = elm 3 1 2 4\n\n/*\nexport const zodiacMutableFromSM = [\n  ['♊︎', 'Gemini = mutable air'],\n  ['♐︎', 'Sagittarius = mutable fire'],\n  ['♍︎', 'Virgo = mutable earth'],\n  ['♓︎', 'Pisces = mutable water'],\n]\nexport const zodiacCardinalFromSM = [\n  ['♎︎', 'Libra = cardinal air'],\n  ['♈︎', 'Aries = cardinal fire'],\n  ['♑︎', 'Capricorn = cardinal earth'],\n  ['♋︎', 'Cancer = cardinal water'],\n]\nexport const zodiacFixedFromSM = [\n  ['♒︎', 'Aquarius = fixed air'],\n  ['♌︎', 'Leo = fixed fire'],\n  ['♉︎', 'Taurus = fixed earth'],\n  ['♏︎', 'Scorpius = fixed water'],\n]\n*/\n\n\n\n\n/*\nhttps://www.cosmopolitan.com/uk/entertainment/horoscopes-monthly/a29383721/star-sign-dates/\n\n1 Aries dates: March 21 – April 19\n2 Taurus dates: April 20 – May 20\n3 Gemini dates: May 21 – June 20\n4 Cancer dates: June 21 – July 22\n\n1 Leo dates: July 23 – August 22\n2 Virgo dates: August 23 – September 22\n3 Libra dates: September 23 – October 22\n4 Scorpio dates: October 23 – November 21\n\n1 Sagittarius dates: November 22 – December 21\n2 Capricorn dates: December 22 – January 19\n3 Aquarius dates: January 20 – February 18\n4 Pisces dates:February 19 – March 20\n\nAnton Szandor LaVey\n  born 1930-04-11\n  calendar astrology:\n    aries = cardinal fire\n    but LaVey is water, and only is playing fire = 4p1\n\nGneedl\n  born 2017-03-13\n  calendar astrology:\n    Pisces = mutable water\n    but Gneedl is fire\n    also was forced to birth 5 weeks too early\n    birth was predicted around 2017-04-17 = aries\n    will be forced to \"play water\"\n\nmila\n  born 1989-08-23\n  calendar astrology:\n    virgo = mutable earth\n    but mila is fire\n    parents said Leo = fixed fire\n    earth is \"impossible to play\" for fire\n\n\n\n*/\n\nexport const zodiacMutableFromSM = [\n  ['gemini', 'Gemini = mutable air'],\n  ['sagittarius', 'Sagittarius = mutable fire'],\n  ['virgo', 'Virgo = mutable earth'],\n  ['pisces', 'Pisces = mutable water'],\n]\n\nexport const zodiacCardinalFromSM = [\n  ['libra', 'Libra = cardinal air'],\n  ['aries', 'Aries = cardinal fire'],\n  ['capricorn', 'Capricorn = cardinal earth'],\n  ['cancer', 'Cancer = cardinal water'],\n]\n\nexport const zodiacFixedFromSM = [\n  ['aquarius', 'Aquarius = fixed air'],\n  ['leo', 'Leo = fixed fire'],\n  ['taurus', 'Taurus = fixed earth'],\n  ['scorpius', 'Scorpius = fixed water'],\n]\n\n\n\n// names and translations\n// key path = locale, scope, key\n\n// names and translations\n// key path = locale, scope, key\nconst nameByLocaleData = {\n\n  en: {\n    asmg: {\n      \"A\": \"Son\",\n      \"B\": \"Mother\",\n      \"C\": \"Daughter\",\n      \"D\": \"Father\",\n\n      \"1\": \"Fire\", //  = son inside\n      \"2\": \"Earth\", //  = mother inside\n      \"3\": \"Air\", //  = daughter inside\n      \"4\": \"Water\", //  = father inside\n\n      \"M\": \"Male\",\n      \"F\": \"Female\",\n      \"S\": \"Small\", // TODO young\n      \"L\": \"Large\", // TODO old\n\n      \"P\": \"Psychotic\", //  = male inside\n      \"N\": \"Neurotic\", //  = female inside\n      \"E\": \"Extravert\", //  = young inside\n      \"I\": \"Introvert\", //  = old inside\n    },\n\n    // Robert Moore, Douglas Gillette: King, Warrior, Magician, Lover\n    // via Elliott Hulse, The-Four-Layers-of-Strength.pdf\n    moore_gillette: {\n      \"A\": \"Son\",\n      \"B\": \"Mother\",\n      \"C\": \"Daughter\",\n      \"D\": \"Father\",\n\n      \"1\": \"Warrior\",\n      \"2\": \"Lover\",\n      \"3\": \"Magician\",\n      \"4\": \"King\",\n    },\n\n    mbti: {\n      // first half = sense + move\n      \"N\": \"Ntuit\", //  = extravert sense = young inside\n      \"S\": \"Sense\", //  = introvert sense = old inside\n      \"E\": \"'Extravert'\", //  = neurotic move = female inside\n      \"I\": \"'Introvert'\", //  = psychotic move = male inside\n\n      // second half = (sense + move) of pathos\n      \"P\": \"Perceive\", //  = extravert sense = young inside\n      \"J\": \"Judge\", //  = introvert sense = old inside\n      \"F\": \"Feel\", //  = neurotic move = female inside\n      \"T\": \"Think\", //  = psychotic move = male inside\n      // note. four combinations are impossible:\n      // INFJ, ESTP, ENTJ, ISFP\n      // cos you never can play your opposite type\n      // fire can never play earth, and vice versa\n      // air can never play water, and vice versa\n      // these impossible results serve\n      // as control parameter for the MBTI test\n      // so yes, MBTI is \"only astrology with extra steps\" :P\n\n      // 16 names\n\n      // first/left half = body, center, \"nomos\", name, self\n      // second/right half = pathos\n\n      // IN = 1 = TP\n      // ES = 2 = FJ\n      // EN = 3 = FP\n      // IS = 4 = TJ\n\n      \"INTP\": \"Designer, Theorizer, Architect\", // 1p1\n      \"INFJ\": \"Foreseer, Developer, Counselor\", // 1p2 [forbidden in alchi]\n      \"INTJ\": \"Conceptualizer, Director, Mastermind\", // 1p4\n      \"INFP\": \"Harmonizer, Clarifier, Healer\", // 1p3\n\n      \"ESFJ\": \"Facilitator, Caretaker, Provider\", // 2p2\n      \"ESFP\": \"Motivator, Presenter, Performer\", // 2p3\n      \"ESTJ\": \"Implementor, Supervisor\", // 2p4\n      \"ESTP\": \"Promoter, Executor\", // 2p1 [forbidden in alchi]\n\n      \"ENFP\": \"Discoverer, Advocate, Champion\", // 3p3\n      \"ENFJ\": \"Envisioner, Mentor, Teacher\", // 3p2\n      \"ENTJ\": \"Strategist, Mobilizer, Fieldmarshal\", // 3p4 [forbidden in alchi]\n      \"ENTP\": \"Explorer, Inventor\", // 3p1\n\n      \"ISTJ\": \"Planner, Inspector\", // 4p4\n      \"ISTP\": \"Analyzer, Operator, Crafter\", // 4p1\n      \"ISFJ\": \"Protector, Supporter\", // 4p2\n      \"ISFP\": \"Composer, Producer\", // 4p3 [forbidden in alchi]\n\n    },\n\n    pol: {\n      \"1\": \"Communist\", //  = son inside\n      \"2\": \"Capitalist\", //  = mother inside\n      \"3\": \"Socialist\", //  = daughter inside\n      \"4\": \"Fascist\", //  = father inside\n    },\n\n    body: {\n      \"M\": \"Male\",\n      \"F\": \"Female\",\n      \"S\": \"Child\",\n      \"L\": \"Elder\",\n\n      \"P\": \"masculine\",\n      \"N\": \"feminine\",\n      \"E\": \"childish\",\n      \"I\": \"mature\",\n    },\n\n    hormones: {\n      \"1\": \"Testosterone, Adrenaline\",\n      \"2\": \"Estrogen, Oxytocin\",\n      \"3\": \"Dopamine\",\n      \"4\": \"Serotonine\",\n    },\n\n    // Elliot Abravanel - Endocrine Gland Types\n    glands: {\n      \"1\": \"adrenal\",\n      \"2\": \"gonad\",\n      \"3\": \"pituitary\",\n      \"4\": \"thyroid\",\n    },\n\n    sheldonMorph: {\n      \"1\": \"heartshape-meso\",\n      \"2\": \"pearshape-meso\",\n      \"3\": \"endo\",\n      \"4\": \"ecto\",\n    },\n\n    flowProfile: {\n      \"1\": \"hard charger\",\n      \"2\": \"flow goer\",\n      \"3\": \"crowd pleaser\",\n      \"4\": \"deep thinker\",\n    },\n\n    deloitteBC: {\n      \"1\": \"Guardian\",\n      \"2\": \"Driver\",\n      \"3\": \"Pioneer\",\n      \"4\": \"Integrator\",\n    },\n\n    sevenChakras: {\n      \"1\": \"solar plexus ?\",\n      \"2\": \"root chakra\",\n      \"3\": \"heart chakra ?\",\n      \"4\": \"third eye ?\",\n    },\n\n    simpsons: {\n      \"1\": \"Marge\",\n      \"2\": \"Homer\",\n      \"3\": \"Bart\",\n      \"4\": \"Lisa\",\n    },\n\n    southPark: {\n      \"1\": \"kenny\",\n      \"2\": \"stan\",\n      \"3\": \"eric\",\n      \"4\": \"kyle\",\n    },\n\n    americanDad: {\n      \"1\": \"steve\",\n      \"2\": \"stan\",\n      \"3\": \"francine\",\n      \"4\": \"hailey\",\n    },\n\n    // TODO plato?\n    keirseyTemperament: {\n      \"1\": \"Artisan\",\n      \"2\": \"Guardian\",\n      \"3\": \"Idealist\",\n      \"4\": \"Rational\",\n    },\n\n    // TODO hans eysenck\n    // TODO two factor personality models\n\n    keirseyTemperamentOld: {\n      \"1\": \"Dionysos (artist)\",\n      \"2\": \"Epimetheus (duty)\",\n      \"3\": \"Apollon (soul)\",\n      \"4\": \"Prometheus (technic)\",\n    },\n\n    jungianFunction: {\n      \"1\": \"N-tuition\",\n      \"2\": \"Sensing\",\n      \"3\": \"Feeling [or Thinking]\",\n      \"4\": \"Thinking [or Feeling]\",\n    },\n\n    ph360me: {\n      \"1\": \"Crusader\",\n      \"2\": \"Diplomat\",\n      \"3\": \"Connector\",\n      \"4\": \"Sensor\",\n    },\n\n    bodyWeight: {\n      \"1\": \"upper gainer\",\n      \"2\": \"lower gainer\",\n      \"3\": \"fast gainer\",\n      \"4\": \"hard gainer\",\n    },\n\n    ayurvedaDoshas: {\n      \"1\": \"pitta\",\n      \"2\": \"Prithvi\",\n      \"3\": \"kapha\",\n      \"4\": \"vata\",\n    },\n\n    eigenColor: {\n      \"1\": \"red\",\n      \"2\": \"green\",\n      \"3\": \"yellow\",\n      \"4\": \"blue\",\n    },\n\n    dressColor: {\n      \"1\": \"yellow/blue\",\n      \"2\": \"blue/yellow\",\n      \"3\": \"red/green\",\n      \"4\": \"green/red\",\n    },\n\n    harryPotter: {\n      \"1\": \"gryffindor\",\n      \"2\": \"hufflepuff\",\n      \"3\": \"ravenclaw\",\n      \"4\": \"slytherin\",\n    },\n\n    // TODO\n    // https://en.wikipedia.org/wiki/Rumi\n    // https://books.google.de/books?id=8DJ-CwAAQBAJ&pg=PT279&lpg=PT279&dq=islam+four+spirits&source=bl&ots=v7TFAG61iJ&sig=ACfU3U1NcMrssknJ_6yIg0o-tiolf-RFFg&hl=de&sa=X&ved=2ahUKEwiGi5Sc9ennAhXSoFwKHSn_BK0Q6AEwEXoECAkQAQ#v=onepage&q=islam%20four%20spirits&f=false\n    // Practical Mysticism in Islam and Christianity\n    // by Saeed Zarrabi-Zadeh\n    // A Comparative Study of Jalal al-Din Muhammad Rumi and Meister Eckhart\n    // four progressive degrees of spirit, i.e. the spirit of animals,\n    // the human spirit, the spirit of angels, and the height of the spirit of mystical adepts, that is also the spirit of adam and the object of the worship of the angel; [32]\n    // [32] \n    // https://en.wikipedia.org/wiki/Exorcism_in_Islam\n    // Jinn is an Arabic collective noun\n    // deriving from the Semitic root jnn\n    // (Arabic: جَنّ / جُنّ, jann),\n    // whose primary meaning is \"to hide\"\n    // Jinn exist invisibly amongst humans,\n    // only detectable with the sixth sense.\n    // The jinn are subtile creatures\n    // created from smokeless fire (fire and air)\n    // thought to be able to\n    // possess animate and inanimate objects.\n    // Unlike demons, they are not necessarily evil,\n    // but own a capacity of free-will.\n    islamSufiJalalAlDinMuhammadRumi: {\n      \"1\": \"Animal\",\n      \"2\": \"Human\",\n      \"3\": \"Angel\",\n      \"4\": \"Mystic\",\n    },\n\n    // https://en.wikipedia.org/wiki/Classification_of_demons#The_Satanic_Bible\n    // LaVey utilized the symbolism of the Four Crown Princes of Hell\n    satanicBibleByAntonSzandorLaVey: {\n\n      \"1\": \"Satan\",\n      // Satan (Hebrew)\n      // \"Lord of the Inferno\".\n      // The adversary, representing opposition,\n      // the element of fire,\n      // the direction of the south,\n      // and the Sigil of Baphomet during ritual.\n      // The Infernal Diatribe\n\n      // https://en.wikipedia.org/wiki/Dante%27s_Satan\n      // frozen mid-breast in ice\n      //   = hot top / cold bottom = yellow / blue\n      // the ultimate sinner\n      // \"Satan was formerly the Angel of Light [Lucifer]\n      //   and once tried to usurp/take the power of God.\"\n      //   = misunderstood as \"air plays fire\"\n      //     but \"playing fire\" is held privilege for water\n      //     = \"hetero ideal\" and homophobia\n      //     m4p1 + f3p2\n      //     f4p1 + m3p2\n      // he is slobbering [mouth full slime], wordless,\n      //   and receives the same punishments in Hell\n      //   as the rest of the sinners.\n\n      \"2\": \"Belial\",\n      // Belial (Hebrew)\n      // \"Without a Master\".\n      // The baseness of the earth,\n      // independence and self-sufficiency,\n      // the element of earth,\n      // the direction of the north,\n      // and the sword during ritual.\n      // Mastery of the Earth\n\n      \"3\": \"Lucifer\",\n      // Lucifer (Roman)\n      // \"The Morning Star\".\n      // The bringer of light,\n      // representing pride and enlightenment,\n      // the element of air,\n      // the direction of the east,\n      // and candles during ritual.\n      // The Enlightenment\n\n      \"4\": \"Leviathan\",\n      // Leviathan (Hebrew)\n      // \"Serpent of the Abyss\".\n      // The great dragon,\n      // representing primal secrecy,\n      // the element of water,\n      // the direction of the west,\n      // and the chalice during ritual.\n      // The Raging Sea\n\n    },\n\n    /*\n      Paracelsus and his subsequent followers,\n      there are four categories of elementals,\n      which are\n      gnomes, undines, sylphs, and salamanders.[1]\n      These correspond to the\n      four Empedoclean elements of antiquity:\n      earth, water, air, and fire, respectively.\n      https://en.wikipedia.org/wiki/Elemental\n      Nymphis, sylphis, pygmaeis et salamandris\n      \n      These ideas were adopted in Rosicrucianism\n      and were widely encountered\n      in subsequent hermetic literature.\n    */\n    paracelsus: {\n      \"1\": \"Salamander\",\n      \"2\": \"Gnome, Pygmae, dwarf, midget\",\n      \"3\": \"Sylph, forest nymph, silvia/silvio\",\n      \"4\": \"Undine, water nymph, mermaid\",\n    },\n\n    attachmentStyle: {\n      \"1\": \"\",\n      \"2\": \"anxious\",\n      \"3\": \"\",\n      \"4\": \"avoidant\",\n    },\n\n    // naf, nef = soul, self\n    // seven nafs = seven chakras?\n    // https://en.wikipedia.org/wiki/Nafs\n    /*\n      1 A inciting ʾammārah tamaara\n           = air? driven by instinct, hyper active\n           = neurotic pathos?\n           = extravert pathos?\n           = cardinal modality in zodiac\n          1.1 iblis = sub-animal,\n              lower than the animal state, \n              because the self seeks to replace God \n              in the love for itself\n              = fire\n          1.2 hayawan\n              Al nafs al-hayawaniyya (\"the animal state\") \n              describes the self, \n              which runs after material possessesion, \n              sensual desires and animalistic pleasures.\n              lust, desire, greed, EMOTION, hunger, need, libido\n              = air\n      2 B self-accusing luwwāmah // TODO names\n          = earth?\n          = balance of pathos = mutable modality in zodiac\n          the stage where \n          \"the conscience is awakened \n          and the self accuses one \n          for listening to one’s ego. \n          One repents and asks for forgiveness.\"[17] \n      3 inspired mulhamah \n      4 C peace muṭma-innah\n           = psychotic pathos?\n           = introvert pathos?\n           = fixed modality in zodiac\n          In Sura al-Fajr the Quran mentions \n          \"the nafs at peace\".[Quran 89:27] \n          This is the ideal stage of ego for Muslims. \n          On this level one is firm in one’s faith \n          and leaves bad manners behind.[17] \n          The soul becomes tranquil, at peace.[17] \n          At this stage, followers of Sufism \n          have relieved themselves \n          of all materialism and worldly problems \n          and are satisfied with the will of God.\n      5 pleased raḍīyyah radii-jach\n      6 pleasing marḍīyyah mardii-jach\n      7 pure ṣāfīyyah saafii-jach --> sufi? sofia, wisdom\n    */\n\n    /*\n      greater jihad\n      culture war\n      cold war\n      Jihad Akbar\n      the big struggle\n      The struggle against nafs\n       = anti air/daughter\n       = anti neurotic/feminine\n      \n      the worst enemy you have \n      is [the nafs] between your sides\n      \n      Rumi warns of the nafs in its guise of \n      religious hypocrisy, \n      saying \"the nafs has a rosary and a Koran \n      in its right hand, \n      and a scimitar and dagger in the sleeve.\"[15]\n\n      In classical Islamic law, \n      the term refers to \n      armed struggle against unbelievers,[2][3] \n      while modernist Islamic scholars \n      generally equate military jihad with \n      defensive warfare.[7][8] \n\n      In Sufi and pious circles, \n      spiritual and moral jihad \n      has been traditionally emphasized \n      under the name of greater jihad.[9][3] \n\n      The term has gained additional attention \n      in recent decades \n      through its use by terrorist groups.\n    */\n\n    /*\n      a specific part of our self and it is \n      that part of our self that has desires, appetite, \n      some people call it ego. \n\n      It has anger, it has passion, it has lust, desire, \n      it has all these things. \n      Some people may even call it the \n      carnal self or the carnal soul. \n\n      This nafs is not part of the Ruh, \n      its part of the physical human being. \n\n      So if we wanted to say that we have \n      some physical part of our creation, \n      that is our body and our nafs \n      and then Allah Almighty has also put \n\n      inside of ourselves an \n      inner or spiritual part of our creation, \n      that is our ruh.\n\n      naf = neurotic\n      ruh = psychotic ?\n\n    */\n\n    // animal, satan?, behima, cattle = drink eat breed sleep\n\n    islamNafs: {\n      \"1\": \"iblis\", // \n      \"2\": \"\",\n      \"3\": \"\",\n      \"4\": \"\",\n    },\n\n    // https://en.wikipedia.org/wiki/Classification_of_demons#Dictionnaire_Infernal\n    dictionnaireInfernal: {\n      \"1\": \"Pluton the prince of Fire, Hades the lord of Underworld\", // Princes and dignitaries: Belzebub, supreme chief of the empire of hell, founder of the order of the Fly. Satan, prince dethroned and chief of the opposition party. Eurynome,[23] prince of death, Grand Cross of the order of the Fly. Moloch, prince of the country of tears, Grand Cross of the order. Pluton, Prince of Fire, also Grand Cross of the order and governor of the regions in flames. Pan, prince of incubi and Lilith, princess of succubi. Leonard, the great lord of the Sabbath, Knight of the Fly. Balberith, great pontiff, lord of alliances. Proserpina, archdiablesse, princess of evil spirits.\n      \"2\": \"Belial\",\n      \"3\": \"Lucifer\",\n      \"4\": \"Leviathan\",\n    },\n\n    psychiatry: {\n      \"1\": \"manic bipolar, ADDD = depressed attention-seeking, obsessive?\",\n      \"2\": \"borderline bipolar.\",\n      \"3\": \"hysteric, affective, ADHD = active attention-seeking.\",\n      \"4\": \"schizoid\",\n    },\n\n    racesByLinnee: {\n      \"1\": \"Americanus. red choleric honest\",\n      \"2\": \"Asiaticus. yellow melancholic tense stiff\",\n      \"3\": \"Europaeus. white sanguinic muscular\",\n      \"4\": \"Afer. black phlegmatic slacky relaxed\",\n    },\n\n    // TODO verify Hippocrates, Galen, Kant: CMSP or SMCP\n    humorsByGalenCMSP: {\n      \"1\": \"Choleric\",\n      \"2\": \"Melancholic\",\n      \"3\": \"Sanguinic\",\n      \"4\": \"Phlegmatic\",\n    },\n\n    humorsByHippocratesAndKantSMCP: {\n      \"1\": \"Sanguinic\",\n      \"2\": \"Melancholic\",\n      \"3\": \"Choleric\",\n      \"4\": \"Phlegmatic\",\n    },\n\n    characterStylesByErnstKretschmer: {\n      \"1\": \"cyclothymic-athletic 1\",\n      \"2\": \"cyclothymic-athletic 2\",\n      \"3\": \"schizothymic Hyperesthetic\",\n      \"4\": \"schizothymic Anesthetic\",\n    },\n\n    EduardSprangerAndValueAttitudes: {\n      \"1\": \"artist\",\n      \"2\": \"econom\",\n      \"3\": \"religion\",\n      \"4\": \"theory\",\n    },\n\n    mistakenGoalsByAlfredAdler: {\n      \"1\": \"retaliation\",\n      \"2\": \"service\",\n      \"3\": \"recognition\",\n      \"4\": \"power\",\n    },\n\n    worldViewsByErichAdickes: {\n      \"1\": \"innovative\",\n      \"2\": \"traditional\",\n      \"3\": \"doctrinaire\",\n      \"4\": \"skeptical\",\n    },\n\n    characterByPlatoOfAthens: {\n      \"1\": \"artistic (iconic)\",\n      \"2\": \"sensible (pistic)\",\n      \"3\": \"intuitive (noetic)\",\n      \"4\": \"reasoning (dianoetic)\",\n    },\n\n    livingCreaturesByEzekielTheProphet: {\n      \"1\": \"lion (bold)\",\n      \"2\": \"ox (sturdy)\",\n      \"3\": \"man (spiritual)\",\n      \"4\": \"eagle (far-seeing)\",\n    },\n\n    PersonalityStyleByTonyAlessandra: {\n      \"1\": \"Director\",\n      \"2\": \"Thinker\",\n      \"3\": \"Socializer\",\n      \"4\": \"Relater\",\n    },\n\n    // aka Thomas-Kilmann, Conflict Modes\n    conflictManagementByJayHall: {\n      \"1\": \"Compete, control-win/lose\",\n      \"2\": \"Avoid, leave-lose/lose\",\n      \"3\": \"Collaborate, synergy-win/win\",\n      \"4\": \"Accommodate, yield-lose/win\",\n    },\n\n    interactionStylesByLindaVBerens: {\n      \"1\": \"In Charge\",\n      \"2\": \"Chart the Course\",\n      \"3\": \"Get Things Going\",\n      \"4\": \"Behind the Scenes\",\n    },\n\n    // == eigen colors\n    personalityProfileByHartman: {\n      \"1\": \"Red\",\n      \"2\": \"Green\",\n      \"3\": \"Yellow\",\n      \"4\": \"Blue\",\n    },\n\n    brainDominanceByHerrmann: {\n      \"1\": \"Imaginative\",\n      \"2\": \"Analytical\",\n      \"3\": \"Interpersonal\",\n      \"4\": \"Sequential\",\n    },\n\n    managerialGridByBlakeMouton: {\n      \"1\": \"Produce or Perish\",\n      \"2\": \"Impoverished\", // poor, victim\n      \"3\": \"Team Type\",\n      \"4\": \"Country Club\",\n    },\n\n    socialStyleByDavidMerrill: {\n      \"1\": \"Driving\",\n      \"2\": \"Analytical\",\n      \"3\": \"Expressive\",\n      \"4\": \"Amiable\",\n    },\n\n    orientationToLifeByStuartAtkinsLIFO: {\n      \"1\": \"Controlling-Taking\",\n      \"2\": \"Conserving-Holding\",\n      \"3\": \"Adapting-Dealing\",\n      \"4\": \"Supporting-Giving\",\n    },\n\n    /*\n    : {\n      \"1\": \"\",\n      \"2\": \"\",\n      \"3\": \"\",\n      \"4\": \"\",\n    },\n\n    : {\n      \"1\": \"\",\n      \"2\": \"\",\n      \"3\": \"\",\n      \"4\": \"\",\n    },\n    */\n\n    sourceOfHappinessByAristotelesOfStagira: {\n      \"1\": \"sensual (hedone)\",\n      \"2\": \"material (propraietari)\",\n      \"3\": \"ethical (ethikos)\",\n      \"4\": \"logical (dialogike)\",\n    },\n\n    temperamentByIrenaeusOfSmyrna: {\n      \"1\": \"spontaneous\",\n      \"2\": \"historical\",\n      \"3\": \"spiritual\",\n      \"4\": \"scholarly\",\n    },\n\n    totemSpiritsByParacelsusOfHohenheim: {\n      \"1\": \"changeable salamanders\",\n      \"2\": \"industrious gnomes\",\n      \"3\": \"inspired nymphs\",\n      \"4\": \"curious sylphs\",\n    },\n\n    bigFive: {\n      \"E\": \"extravert, open for experience\",\n      \"I\": \"conscientious, agreeable\",\n      \"N\": \"neurotic\",\n      \"P\": \"anti-neurotic\",\n    },\n\n    // \n    nexusLearningStylesByGordonBull: {\n      \"1\": \"Gamma\",\n      \"2\": \"Beta\",\n      \"3\": \"Delta\",\n      \"4\": \"Alpha\",\n    },\n\n    // TODO learning styles\n    alfredAdler: {\n      \"1\": \"Ruling or Dominant\",\n      \"2\": \"Avoiding\",\n      \"3\": \"Socially Useful\",\n      \"4\": \"Getting or Leaning\",\n    },\n\n    discByWilliamMarston: {\n      \"1\": \"Dominance\",\n      \"2\": \"Conscientiousness\",\n      \"3\": \"Influence\",\n      \"4\": \"Steadiness\",\n    },\n\n    erichFromm: {\n      \"1\": \"Exploitative\",\n      \"2\": \"Hoarding\",\n      \"3\": \"Marketing\", // market screamer, montebank\n      \"4\": \"Receptive\",\n    },\n\n    cpi260: {\n      \"1\": \"Leader\",\n      \"2\": \"Visualizer\",\n      \"3\": \"Innovator\",\n      \"4\": \"Supporter\",\n    },\n\n    interactionStylesByLindaBerens: {\n      \"1\": \"Improviser\",\n      \"2\": \"Stabilizer\",\n      \"3\": \"Catalyst\",\n      \"4\": \"Theorist\",\n    },\n\n    loveStylesByHelenFisher: {\n      \"1\": \"Director\", // Directors are dominant in testosterone.\n      \"2\": \"Negotiator\", // And negotiators are dominant in estrogen.\n      \"3\": \"Explorer\", // Explorers are dominant in dopamine.\n      \"4\": \"Builder\", // Builders are dominant in serotonin.\n    },\n\n    christianDemonology: {\n      \"1\": \"son of god, adversary demon\", // In the period immediately preceding the composition of the New Testament, some sects of Judaism, as well as many Christian Church Fathers, identified the \"sons of God\" of Genesis 6:1–4 as fallen angels.\n      \"2\": \"mother, god-mother, goddess\",\n      \"3\": \"guardian angel\",\n      \"4\": \"father, god-father\",\n    },\n\n  },\n\n  de: {\n    asmg: {\n      \"A\": \"Sohn\",\n      \"B\": \"Mutter\",\n      \"C\": \"Tochter\",\n      \"D\": \"Vater\",\n\n      \"1\": \"Feuer\", //  = Sohn innen\n      \"2\": \"Erde\", //  = Mutter innen\n      \"3\": \"Luft\", //  = Tochter innen\n      \"4\": \"Wasser\", //  = Vater innen\n\n      \"M\": \"Mann\",\n      \"F\": \"Frau\",\n      \"S\": \"Jung\",\n      \"L\": \"Alt\",\n\n      \"P\": \"Psychotiker\", //  = Mann innen\n      \"N\": \"Neurotiker\", //  = Frau innen\n      \"E\": \"Extravert\", //  = Jung innen\n      \"I\": \"Introvert\", //  = Alt innen\n    },\n    mbti: {\n      \"N\": \"Ntuition\", //  = Extravertierte Sensorik = Jung innen\n      \"S\": \"Spüren\", //  = Introvertierte Sensorik = Alt innen\n      \"E\": \"Extravert\", //  = Neurotische Motorik = Frau innen\n      \"I\": \"Introvert\", //  = Psychotische Motorik = Mann innen\n\n      \"P\": \"Empfinden\", //  = Extravertierte Sensorik = Jung innen\n      \"J\": \"Urteilen\", //  = Introvertierte Sensorik = Alt innen\n      \"F\": \"Fühlen\", //  = Neurotische Motorik = Frau innen\n      \"T\": \"Denken\", //  = Psychotische Motorik = Mann innen\n    },\n    pol: {\n      \"1\": \"Kommunist\", //  = son inside\n      \"2\": \"Kapitalist\", //  = mother inside\n      \"3\": \"Sozialist\", //  = daughter inside\n      \"4\": \"Faschist\", //  = father inside\n    },\n    body: {\n      \"M\": \"Mann\",\n      \"F\": \"Frau\",\n      \"S\": \"Kind\",\n      \"L\": \"Elter\",\n\n      \"P\": \"männlich\",\n      \"N\": \"weiblich\",\n      \"E\": \"kindisch\",\n      \"I\": \"altklug\",\n    },\n  },\n\n  nl: {\n    asmg: {\n      \"A\": \"zoon\",\n      \"B\": \"moeder\",\n      \"C\": \"dochter\",\n      \"D\": \"vader\",\n      \"1\": \"Vuur\", //  = zoon 'inside'\n      \"2\": \"Aarde\", //  = moeder 'inside'\n      \"3\": \"Wind\", //  = dochter 'inside'\n      \"4\": \"Water\", //  = vader 'inside'\n    },\n  },\n\n  el: {\n    asmg: {\n      \"A\": \"γιος\",\n      \"B\": \"μητέρα\",\n      \"C\": \"κόρη\",\n      \"D\": \"πατέρα\",\n      \"1\": \"Φωτιά\", //  = γιος 'inside'\n      \"2\": \"Γη\", //  = μητέρα 'inside'\n      \"3\": \"Αέρας\", //  = κόρη 'inside'\n      \"4\": \"Νερό\", //  = πατέρα 'inside'\n    },\n  },\n\n  el_r: {\n    asmg: {\n      \"A\": \"gios\",\n      \"B\": \"miteera\",\n      \"C\": \"koori\",\n      \"D\": \"pateera\",\n      \"1\": \"Fotiaa\", //  = gios 'inside'\n      \"2\": \"Ye\", //  = miteera 'inside'\n      \"3\": \"Aeeras\", //  = koori 'inside'\n      \"4\": \"Neroo\", //  = pateera 'inside'\n    },\n  },\n\n  da: {\n    asmg: {\n      \"A\": \"søn\",\n      \"B\": \"mor\",\n      \"C\": \"datter\",\n      \"D\": \"far\",\n      \"1\": \"Ild\", //  = søn 'inside'\n      \"2\": \"Jord\", //  = mor 'inside'\n      \"3\": \"Luft\", //  = datter 'inside'\n      \"4\": \"Vand\", //  = far 'inside'\n    },\n  },\n\n  ru: {\n    asmg: {\n      \"A\": \"сын\",\n      \"B\": \"мать\",\n      \"C\": \"дочь\",\n      \"D\": \"отец\",\n      \"1\": \"Огонь\", //  = сын 'inside'\n      \"2\": \"Земля\", //  = мать 'inside'\n      \"3\": \"Воздух\", //  = дочь 'inside'\n      \"4\": \"Вода\", //  = отец 'inside'\n    },\n  },\n\n  ru_r: {\n    asmg: {\n      \"A\": \"syn\",\n      \"B\": \"mat'\",\n      \"C\": \"doch'\",\n      \"D\": \"otets\",\n      \"1\": \"Ogonn\", //  = syn 'inside'\n      \"2\": \"Zemlja\", //  = mat' 'inside'\n      \"3\": \"Vozdukh\", //  = doch' 'inside'\n      \"4\": \"Voda\", //  = otets 'inside'\n    },\n  },\n\n  cz: {\n    asmg: {\n      \"A\": \"syn\",\n      \"B\": \"matka\",\n      \"C\": \"dcera\",\n      \"D\": \"otec\",\n      \"1\": \"Oheň\", //  = syn 'inside'\n      \"2\": \"Země\", //  = matka 'inside'\n      \"3\": \"Vzduch\", //  = dcera 'inside'\n      \"4\": \"Voda\", //  = otec 'inside'\n    },\n  },\n\n  tr: {\n    asmg: {\n      \"A\": \"oğlu\",\n      \"B\": \"anne\",\n      \"C\": \"kızı\",\n      \"D\": \"baba\",\n      \"1\": \"Ateş\", //  = oğlu 'inside'\n      \"2\": \"Toprak\", //  = anne 'inside'\n      \"3\": \"Hava\", //  = kızı 'inside'\n      \"4\": \"Su\", //  = baba 'inside'\n    },\n  },\n\n  ar: {\n    asmg: {\n      \"A\": \"որդի\",\n      \"B\": \"մայր\",\n      \"C\": \"դուստր\",\n      \"D\": \"հայր\",\n      \"1\": \"حريق\", //  = որդի 'inside'\n      \"2\": \"أرض\", //  = մայր 'inside'\n      \"3\": \"هواء\", //  = դուստր 'inside'\n      \"4\": \"ماء\", //  = հայր 'inside'\n    },\n  },\n\n  ar_r: {\n    asmg: {\n      \"A\": \"vordi\",\n      \"B\": \"mayr\",\n      \"C\": \"dustr\",\n      \"D\": \"hayr\",\n      \"1\": \"hariq\", //  = vordi 'inside'\n      \"2\": \"'ard\", //  = mayr 'inside'\n      \"3\": \"hawa'\", //  = dustr 'inside'\n      \"4\": \"ma'an\", //  = hayr 'inside'\n    },\n  },\n\n  cn: {\n    asmg: {\n      \"A\": \"儿子\",\n      \"B\": \"母亲\",\n      \"C\": \"女儿\",\n      \"D\": \"父亲\",\n      \"1\": \"火\", //  = 儿子 'inside'\n      \"2\": \"土\", //  = 母亲 'inside'\n      \"3\": \"金\", //  = 女儿 'inside'\n      \"4\": \"水\", //  = 父亲 'inside'\n    },\n  },\n\n  cn_r: {\n    asmg: {\n      \"A\": \"érzi\",\n      \"B\": \"mǔqīn\",\n      \"C\": \"nǚ'ér\",\n      \"D\": \"Fùqīn\",\n      \"1\": \"huǒ\", //  = érzi 'inside'\n      \"2\": \"tǔ\", //  = mǔqīn 'inside'\n      \"3\": \"jīn\", //  = nǚ'ér 'inside'\n      \"4\": \"shuǐ\", //  = Fùqīn 'inside'\n    },\n  },\n\n  // three ayurveda doshas + Prithivi as earth\n  ayur: {\n    asmg: {\n      \"1\": \"Pitta\",\n      \"2\": \"Prithivi\",\n      \"3\": \"Kapha\",\n      \"4\": \"Vata\",\n    },\n  },\n\n  hi: {\n    asmg: {\n      \"A\": \"बेटा\",\n      \"B\": \"मां\",\n      \"C\": \"बेटी\",\n      \"D\": \"पिता\",\n      \"1\": \"आग\", //  = बेटा 'inside'\n      \"2\": \"पृथ्वी\", //  = मां 'inside'\n      \"3\": \"वायु\", //  = बेटी 'inside'\n      \"4\": \"पानी\", //  = पिता 'inside'\n    },\n  },\n\n  hi_r: {\n    asmg: {\n      \"A\": \"beta\",\n      \"B\": \"maan\",\n      \"C\": \"betee\",\n      \"D\": \"pita\",\n      \"1\": \"aag\", //  = beta 'inside'\n      \"2\": \"prthvee\", //  = maan 'inside'\n      \"3\": \"vaayu\", //  = betee 'inside'\n      \"4\": \"paanee\", //  = pita 'inside'\n    },\n  },\n\n}\n\n\n\n// get translation for key\n// or fallback to english name\nfunction localName(key, fallback=false) {\n  // global: locale\n  let ka = Array.isArray(key) ? key : key.split('.')\n  \n  let parent = nameByLocaleData\n  const loc = fallback ? 'en' : locale\n  for (let key of [loc, ...ka.slice(0,-1)]) {\n    parent = parent[key]\n    if (!parent) {\n      break\n    }\n  }\n\n  const lastKey = ka.slice(-1)[0]\n\n  if (!parent || !(lastKey in parent)) {\n    console.log(`FIXME add translation for ${locale}.${key}`)\n    if (fallback) {\n      console.log(`ERROR missing fallback translation for ${key}`)\n      return ''\n    }\n    return localName(key, true)\n  }\n\n  const res = parent[ka.slice(-1)[0]]\n  //console.log(`localName(${key}) = ${res}`)\n\n  return parent[ka.slice(-1)[0]]\n}\n\n\n\n// usage of result:\n// pathosFromSM[sm_body][sm_pathos]\nexport function tablePathosFromSM (nameFormat) {\n\n  // sm 0 1 2 3 = elm 3 1 2 4\n\n  if (nameFormat === 'mbti') {\n    // MBTI \"pathos\" is independent of \"body\"\n    // so we have four identic arrays\n    return Array(4).fill(\n      // 3    1     2     4   : element of pathos\n      ['FP', 'TP', 'FJ', 'TJ'].map(\n        s => [[s, s.split('').map(s => localName(['mbti', s])).join(' ')]]\n      )\n    )\n  }\n\n  if (nameFormat === 'cg-jung') {\n    // MBTI \"pathos\" is independent of \"body\"\n    // so we have four identic arrays\n    return Array(4).fill(\n    //  3    1    2    4   : element of pathos\n      ['e', 'i', 'e', 'i'].map(\n        s => [[s, s.split('').map(s => localName(['mbti', s.toUpperCase()])).join(' ')]]\n      )\n    )\n  }\n\n  // pathos in zodiac terms is more complex\n  // cos the \"base element\" is included in the pathos type\n  // base elements = mutable signs = no pathos is played\n  // pathos types = cardinal signs + fixed signs\n  if (nameFormat === 'zodiac') {\n    return Array.from(Array(4).keys()).map(\n      (sm) => (\n        Array.from(Array(4).keys()).map(\n          (p_sm) => {\n\n            if (p_sm == sm) {\n              // \"false pathos\"\n              // where the pathos has \"same element\"\n              // as the body\n              // this is the \"mbti way\"\n              // to say \"no pathos\"\n              // in zodiac: \"mutable modality\"\n              return [zodiacMutableFromSM[sm]]\n            }\n\n            // sm 0 1 2 3 = elm 3 1 2 4\n            if (p_sm == 0 || p_sm == 2) {\n              // neurotic move pathos\n              return [zodiacCardinalFromSM[sm]]\n            }\n\n            // psychotic move pathos\n            return [zodiacFixedFromSM[sm]]\n\n            // quick + dirty\n            // also define \"false pathos\"\n            // when p_sm is the opposite element\n            // == diff sense and diff move\n            // this \"false pathos\"\n            // is used in MBTI\n            // as a \"test quality\" control parameter\n            // cos, for example, \"fire plays earth\" is not possible\n            // and indicates a misunderstood test / questionnaire\n\n        })\n    ))\n  }\n\n  //const p_pos = nameFormat.indexOf('p')\n  const x_pos = nameFormat.indexOf('x');\n  const p_pos = nameFormat.substring(0, (\n    x_pos === -1 ? nameFormat.length : x_pos\n    )).indexOf('p')\n\n  if (p_pos == -1) {\n    // fallback: no pathosFormat was found in nameFormat\n    return false\n  }\n\n  const pathosFormat = (\n    (p_pos == nameFormat.length-1) ? (\n      // \"p\" is suffix of pathosFormat\n      nameFormat.substring(0, p_pos)\n    ) : (\n      // \"p\" is prefix of pathosFormat\n      nameFormat.substring(p_pos + 1)\n    )\n  ).replace(/[ag]/g, '') // remove age + gender\n  // pathos always has \"same age\" and \"same gender\"\n\n  if (pathosFormat === '') {\n    // fallback: pathosFormat is empty\n    return false\n  }\n\n  console.log('pathosFormat = '+pathosFormat)\n\n  const nameFromN = tableNameFromN(pathosFormat)\n\n  if (nameFromN) {\n    // repeat array four times\n    // here, pathos is independent of the base element\n    return Array(4).fill([\n      nameFromN[0b0000],\n      nameFromN[0b0010],\n      nameFromN[0b0100],\n      nameFromN[0b0110],\n    ])\n  } else {\n    return false\n  }\n}\n\n// helper function\n// repeat array values\nconst makeRepeated = (arr, repeats) =>\n  [].concat(...Array.from({ length: repeats }, () => arr));\n\n// generate translation table\n// name format is \"additive\" by default\n// implicit concat\n//   GMSA --> G+M+S+A\n// explicit multiply\n//   GxMSxA --> (GxM)+(SxA)\n\nconst nameFormatSpecialChars = [\n  'x',\n  'X',\n  '/',\n  '|',\n  ',',\n  '.',\n  '-',\n  '(', ')', // group components to \"compound string\", like (GEA) = M1S, F3L, etc.\n]\n\n\n\nexport function tableNameFromN (nameFormat) {\n\n  // TODO replace if-branches with lookup-object (faster)\n\n  // TODO move special cases to separate function\n\n  // MBTI special case\n  // https://www.reddit.com/r/mbti/comments/ds3r3o/decoding_mbti_four_elements_alchemy_physiognomy/\n  // myers briggs vs. gender move sense age\n  // mbti Introvert = mbti Thinking   = Psychotic move  = fire  + water\n  // mbti Extravert = mbti Feeling    = Neurotic  move  = earth + air\n  // mbti Ntuiting  = mbti Perceiving = Extravert sense = fire  + air\n  // mbti Sensing   = mbti Judging    = Introvert sense = earth + water\n  // so, mbti describes only INNER values == move + sense + pathos\n  // so, THIS is a WRONG translation to MBTI:\n  // move + sense:   PE = IN   NI = ES   NE = EN   PI = IS\n  // gender + age:   MS = TP   FL = FJ   FS = FP   ML = TJ\n  // cos MBTI does NOT desribe gender or age\n  if (nameFormat === 'mbti') {\n    /*\n    return [                          // GMSA =\n      'ENFP', 'ENTP', 'INFP', 'INTP', // FNES, MNES, FPES, MPES,\n      'ESFP', 'ESTP', 'ISFP', 'ISTP', // FNIS, MNIS, FPIS, MPIS,\n      'ENFJ', 'ENTJ', 'INFJ', 'INTJ', // FNEL, MNEL, FPEL, MPEL,\n      'ESFJ', 'ESTJ', 'ISFJ', 'ISTJ', // FNIL, MNIL, FPIL, MPIL\n    ]\n    */\n\n    // letters 1+2 = element = inner values = sense + move\n    return [                  // GMSA =\n      'EN', 'EN', 'IN', 'IN', // FNES, MNES, FPES, MPES,\n      'ES', 'ES', 'IS', 'IS', // FNIS, MNIS, FPIS, MPIS,\n      'EN', 'EN', 'IN', 'IN', // FNEL, MNEL, FPEL, MPEL,\n      'ES', 'ES', 'IS', 'IS', // FNIL, MNIL, FPIL, MPIL\n    ].map(\n      s => [[s, s.split('').map(s => localName(['mbti', s])).join(' ')]]\n    )\n  }\n\n  // Robert Moore, Douglas Gillette: King, Warrior, Magician, Lover\n  // via Elliott Hulse, The-Four-Layers-of-Strength.pdf\n  // 1234 = warrior lover magician king\n  if (nameFormat == 'moore-gillette') {\n    return [                  // GMSA =\n      'C3', 'A3', 'C1', 'A1', // FNES, MNES, FPES, MPES,\n      'C2', 'A2', 'C4', 'A4', // FNIS, MNIS, FPIS, MPIS,\n      'B3', 'D3', 'B1', 'D1', // FNEL, MNEL, FPEL, MPEL,\n      'B2', 'D2', 'B4', 'D4', // FNIL, MNIL, FPIL, MPIL\n    ].map(\n      s => [\n        [s[1], localName(['moore_gillette', s[1]])],\n        [s[0], localName(['moore_gillette', s[0]])],\n      ]\n    );\n  }\n\n  if (nameFormat === 'a/s/m/gxbody') {\n    return tableNameFromN('[ab]/[sb]/[mb]/[gb]')\n    //return false // TODO implement\n  }\n\n  // zodiac special case\n  if (nameFormat == 'zodiac') {\n    \n    return Array.from(Array(16).keys()).map(\n      (asmg) => (\n        [\n          zodiacMutableFromSM[\n            (asmg & 0b0110) >> 1\n          ]\n        ]\n    ))\n  }\n\n  // CG Jung special case\n  if (nameFormat === 'cg-jung') {\n    return makeRepeated(\n      [\n        'F', 'F', 'N', 'N',\n        'S', 'S', 'T', 'T',\n      ].map(\n        s => [[s, s.split('').map(s => localName(['mbti', s])).join(' ')]]\n      ),\n      2 // repeat twice\n    )\n  }\n\n  // South Park special case\n  if (nameFormat === 'south-park') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['bebe|henrietta|heidi|tammy|honey', 'Bebe Stevens|Henrietta Biggle|Heidi Turner|Tammy Warner|Honey Boo Boo'],\n      /* MNES */ ['cartman|tweek', 'Eric Theodore Cartman|Tweek Tweak'],\n      /* FPES */ ['wendy|leslie|lizzy', 'Wendy Testaburger|Leslie Meyers?|Lizzy'],\n      /* MPES */ ['kenny|jimmy', 'Kenneth \"Mysterion\" McCormick|Jimmy Valmer'],\n\n      /* FNIS */ ['isla|esther', 'Isla?|Esther?'],\n      /* MNIS */ ['stan|butters', 'Stanley Randolph Marsh|Leopold \"Butters\" Stotch'],\n      /* FPIS */ ['red|sally', 'Red Girl|Sally'],\n      /* MPIS */ ['kyle', 'Kyle Broflovski'],\n\n      /* FNEL */ ['sheila|liane', 'Sheila \"S-Wow Tittybang\" Broflovski|Liane Cartman'],\n      /* MNEL */ ['chef|garrison', 'Jerome \"Chef\" McElroy|Herbert Garrison'],\n      /* FPEL */ ['carol', 'Carol McCormick?'],\n      /* MPEL */ ['stuart', 'Stuart McCormick'],\n\n      /* FNIL */ ['sharon', 'Sharon Marsh'],\n      /* MNIL */ ['pc-principal|towelie|slave', 'PC Principal|Towelie?|Mr. Slave'],\n      /* FPIL */ ['mayor', 'Mayor McDaniels'],\n      /* MPIL */ ['randy|gerald|mackey', 'Randall \"Randy\" Marsh|Gerald Broflovski|Mr. Mackey'],\n    ]\n  }\n\n  // Simpsons special case\n  if (nameFormat === 'simpsons') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['EN', ''],\n      /* MNES */ ['bart', ''],\n      /* FPES */ ['IN', ''],\n      /* MPES */ ['MPES', ''],\n\n      /* FNIS */ ['ES', ''],\n      /* MNIS */ ['MNIS', ''],\n      /* FPIS */ ['lisa', ''],\n      /* MPIS */ ['MPIS', ''],\n\n      /* FNEL */ ['patty|selma', 'Patty Bouvier|Selma Bouvier'],\n      /* MNEL */ ['snake', 'Chester \"Snake\" Turley?'],\n      /* FPEL */ ['marge', ''],\n      /* MPEL */ ['skinner|krusty', 'Seymour Skinner|Krusty the Clown?'],\n\n      /* FNIL */ ['ES', ''],\n      /* MNIL */ ['homer', ''],\n      /* FPIL */ ['sideshow-bob', 'Robert Underdunk Terwilliger Jr., PhD'],\n      /* MPIL */ ['burns', 'Burns|The Blue-Haired Lawyer'],\n    ]\n  }\n\n  // Futurama special case\n  if (nameFormat === 'futurama') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['EN', ''],\n      /* MNES */ ['MNES', ''],\n      /* FPES */ ['IN', ''],\n      /* MPES */ ['nibbler', 'Lord Nibbler?'],\n\n      /* FNIS */ ['ES', ''],\n      /* MNIS */ ['MNIS', ''],\n      /* FPIS */ ['IS', ''],\n      /* MPIS */ ['MPIS', ''],\n\n      /* FNEL */ ['amy', 'Amy Wong'],\n      /* MNEL */ ['fry|zapp', 'Philip J. Fry|Zapp Brannigan'],\n      /* FPEL */ ['leela', 'Turanga Leela'],\n      /* MPEL */ ['bender|scruffy', 'Bender Bending Rodriguez|Scruffy'],\n\n      /* FNIL */ ['ES', ''],\n      /* MNIL */ ['ES', ''],\n      /* FPIL */ ['mom', 'Carol \"Mom\"'],\n      /* MPIL */ ['professor|kif', 'Professor Hubert J. Farnsworth|Kif Kroker'],\n    ]\n  }\n\n  // American Dad special case\n  if (nameFormat === 'american-dad') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['EN', ''],\n      /* MNES */ ['MNES', ''],\n      /* FPES */ ['IN', ''],\n      /* MPES */ ['steve', ''],\n\n      /* FNIS */ ['ES', ''],\n      /* MNIS */ ['MNIS', ''],\n      /* FPIS */ ['hayley', ''],\n      /* MPIS */ ['MPIS', ''],\n\n      /* FNEL */ ['francine', ''],\n      /* MNEL */ ['roger', ''],\n      /* FPEL */ ['FPEL', ''],\n      /* MPEL */ ['klaus?', ''],\n\n      /* FNIL */ ['ES', ''],\n      /* MNIL */ ['stan', ''],\n      /* FPIL */ ['IS', ''],\n      /* MPIL */ ['MPIL', ''],\n    ]\n  }\n\n  // Family Guy special case\n  if (nameFormat === 'family-guy') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['', ''],\n      /* MNES */ ['', ''],\n      /* FPES */ ['', ''],\n      /* MPES */ ['', ''],\n\n      /* FNIS */ ['', ''],\n      /* MNIS */ ['', ''],\n      /* FPIS */ ['', ''],\n      /* MPIS */ ['', ''],\n\n      /* FNEL */ ['', ''],\n      /* MNEL */ ['peter', 'Peter Griffin'],\n      /* FPEL */ ['', ''],\n      /* MPEL */ ['', ''],\n\n      /* FNIL */ ['', ''],\n      /* MNIL */ ['', ''],\n      /* FPIL */ ['lois', 'Lois Griffin'],\n      /* MPIL */ ['', ''],\n    ]\n  }\n\n\n\n\n\n  // TODO special case\n  if (nameFormat === 'TODO') {\n    // letters 1+2 = element = inner values = sense + move\n    return [\n      /* FNES */ ['', ''],\n      /* MNES */ ['', ''],\n      /* FPES */ ['', ''],\n      /* MPES */ ['', ''],\n\n      /* FNIS */ ['', ''],\n      /* MNIS */ ['', ''],\n      /* FPIS */ ['', ''],\n      /* MPIS */ ['', ''],\n\n      /* FNEL */ ['', ''],\n      /* MNEL */ ['', ''],\n      /* FPEL */ ['', ''],\n      /* MPEL */ ['', ''],\n\n      /* FNIL */ ['', ''],\n      /* MNIL */ ['', ''],\n      /* FPIL */ ['', ''],\n      /* MPIL */ ['', ''],\n    ]\n  }\n\n\n\n  let la = nameFormat.split('') // letter array\n  let pa = []\n  let braceRoundLevel = 0\n  let braceSquareLevel = 0\n  let braceRoundStr = ''\n  let braceSquareStr = ''\n\n  // test format string\n  for (let li = 0; li < la.length; li++) {\n    const val = la[li]\n    //if (val == 'x' || val == '-') {\n\n    if (val === 'x') {\n      // end of format string\n      break;\n    }\n\n    if (val === '(') {\n      braceRoundLevel += 1\n      continue\n    }\n    else if (val === ')') {\n      braceRoundLevel -= 1\n    }\n    else if (val === '[') {\n      braceSquareLevel += 1\n      continue\n    }\n    else if (val === ']') {\n      braceSquareLevel -= 1\n    }\n    else if (nameFormatSpecialChars.includes(val)) {\n      // TODO why 'x' ?\n      // '-' is separator for nameParts\n      continue\n    }\n    if (val === 'p' && braceRoundLevel === 0 && braceSquareLevel === 0) { // marker for pathosFormat\n      la = la.slice(0, li)\n      console.log('reduced nameFormat to '+la.join(''))\n      break\n    }\n    //if (!(val in idxFromDim)){ // 'E' would fail\n    if (val !== ')' && val !== ']' && braceSquareLevel === 0 && undefined === letterFromASMG(val, ['0','0','0','0'])) {\n      console.log('bad letter '+val)\n      return undefined\n    }\n    if (braceRoundLevel > 0) {\n      braceRoundStr += val\n    }\n    else if (braceSquareLevel > 0) {\n      braceSquareStr += val\n    }\n    else if (braceRoundStr !== '') {\n      pa.push(braceRoundStr)\n      braceRoundStr = ''\n    }\n    else if (braceSquareStr !== '') {\n      pa.push({braceSquareStr})\n      braceSquareStr = ''\n    }\n    else {\n      pa.push(val)\n    }\n  }\n\n  if (braceRoundLevel !== 0 || braceSquareLevel !== 0) {\n    // brace not closed\n    return false\n  }\n\n  /*\n  //let pa = la.join('').split('-') // nameParts array\n  let pa = la.join('').split(/[-/|,.]/) // nameParts array\n  while (pa.slice(-1)[0] === '') {\n    pa = pa.slice(0, -1) // remove last empty part\n  }\n  console.log(`pa = ${pa}   pa.length ${pa.length}`)\n  */\n\n  return Array.from(Array(16).keys()).map(\n    num => {\n      return (\n        //pa.map(p => p.split('')).map(\n        pa.map(p => {\n          \n          //if ('braceSquareStr' in p) {\n          if ((typeof p) === 'object') {\n            // TODO handle [special_format]\n            return specialShortLong(p.braceSquareStr, num);\n          }\n\n          //if ((typeof p) === 'string') {\n          else {\n            return asmgShortLong(p, num);\n          }\n  }))})\n\n  /*.map(pa => pa.map(\n    s => [s, s.split('').map(\n      s => localName(['asmg', s])).join(' ')]\n  ))\n  */\n}\n\n\n\nif(Array.prototype.contains) {\n  console.warn(\"Overriding existing Array.prototype.contains. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n}\n\n/*\nArray.prototype.contains = needle => (\n  this.indexOf(needle) !== -1\n);\n*/\nArray.prototype.contains = function(needle) {\n  return this.indexOf(needle) !== -1\n};\n\n\n\nfunction specialShortLong(partFormat, num) {\n\n  // element as political attitude\n  if (partFormat === 'pol') {\n    const [short, long] = asmgShortLong('e', num);\n    return [short, localName(['pol', short])]\n  }\n\n  // asmg in terms of body\n  if (['ab', 'sb', 'mb', 'gb'].contains(partFormat)) {\n    const [short, long] = asmgShortLong(partFormat[0], num);\n    return [short, localName(['body', short])]\n  }\n}\n\n\n\nfunction asmgShortLong(partFormat, num) {\n  const asmg = num.toString(2).padStart(4, 0).split('')\n  return [partFormat.split('').reduce((acc, val, idx, arr) => {\n    // look ahead\n    if (arr[idx+1] == 'x' || val == 'x') {\n      // we are inside a multiply list\n      return acc\n    }\n    // look behind + ahead\n    if (arr[idx-1] == 'x' && arr[idx+1] != 'x') {\n      // last value of multiply list\n      let res = getDimBit(asmg, val) // dim=val\n\n      for (let i = idx-1; -1 < i; i--) {\n        if (arr[i] == 'x') {\n          i--\n          // \"multiply\" = binary XOR operation\n          res = res ^ getDimBit(asmg, arr[i])\n        }\n        else {\n          break\n        }\n      }\n\n      return acc + res // concat\n\n    }\n    return acc + letterFromASMG(val, asmg)\n  }, '')].map(\n    s => [\n      // short name:\n      s,\n      // long name:\n      s.split('').map(\n        s => localName(['asmg', s])\n      ).join(' ')\n    ]\n  )[0]\n}\n\n\n\nfunction isDict(v) {\n  return (typeof v)==='object' && v!==null && !(v instanceof Array) && !(v instanceof Date);\n}\n\n\n\nlet locale = 'de'\nexport const localePresets = ['en', 'de']\nexport function setLocale(l){\n  locale = l\n}\n\n\n\nfunction translate (obj) {\n  if (isDict(obj)) {\n    if (locale in obj) {\n      return obj[locale]\n    }\n    return obj['en']\n  }\n  return obj\n}\n\n\n\n// generate translation table\n// group format is multiplicative by default\n// = sum of products\n// GMSA --> GxMxSxA\n// GM+SA --> (GxM)+(SxA)\n\nexport const tableGroupFromN = function(groupFormat) {\n  if (groupFormat == 'E' || groupFormat == 'e') {\n    // quickfix\n    groupFormat = 'S+M'\n  }\n  const la = groupFormat.split('') // letter array\n  // test format string\n  for (let li = 0; li < la.length; li++) {\n    const val = la[li]\n    if (val == 'x') {\n      // end of format string\n      break\n    }\n\n    if (val == '+') {\n      // group name concat operator\n      continue\n    }\n\n    if (!(val in idxFromDim)){ // 'E' would fail\n    //if (undefined === letterFromASMG(val, ['0','0','0','0'])) {\n      console.log('bad letter '+val)\n      return undefined\n    }\n  }\n\n  const tmp = [...Array(16).keys()]\n  .map(function (num) {\n      const asmg = num.toString(2).padStart(4, 0).split('')\n\n      return parseInt(groupFormat.split('+')\n      .reduce(function(acc, val){\n        // TODO use bitmask? for ASMG format letters, but for letter E?\n        // sample val = 'GMA'\n        const la = val.split('') // letter array\n\n        // concat to bitstring\n        return acc + la.reduce(function(acc2, val2){\n\n          if (acc2 === undefined) {\n            // first bit\n            return asmg[idxFromDim[val2]]\n          }\n\n          // ^ = binary XOR function\n          return acc2 ^ asmg[idxFromDim[val2]]\n\n        }, undefined)\n        /*\n        return acc + la.reduce(function(a2, v2){\n          return acc + asmg[idxFromDim[v2]]\n        }, '')\n        */\n      }, ''),\n      2) // parseInt from bitstring\n\n      /*\n      return la.reduce(function(acc, val){\n        return acc + letterFromASMG(val, asmg)\n      }, '')\n      */\n  })\n\n\n\n  // unique values\n  // map from value to index\n  const idxFromVal = tmp.filter(function(val, idx, self){\n    return self.indexOf(val) === idx\n  }).reduce(function(acc, val, idx){\n\n    // TODO\n\n    acc[val] = idx\n\n    // 65 = 'A'.charCodeAt(0)\n    //acc[val] = String.fromCharCode(65 + idx)\n\n    return acc\n  }, {})\n\n  //console.log('idxFromVal = '+idxFromVal)\n  //console.log('idxFromVal.length = '+idxFromVal.length)\n\n/* old version\n  return [\n    tmp.map(function(val){\n      return idxFromVal[val]\n    }),\n    Object.values(idxFromVal).length\n    //idxFromVal.length\n  ]\n*/\n\n  return tmp.map(function(val){\n      return idxFromVal[val]\n    }).concat(\n      Object.values(idxFromVal).length)\n}\n\n// swap: keys <--> values\nexport const invertTable = function(table) {\n  return table.reduce(function(acc, cur, idx) {\n      acc[cur] = idx\n      return acc\n  }, {})\n}\n\n// modulo function, also for negative numbers\nNumber.prototype.mod = function(n) {\n    return ((this%n)+n)%n\n}\n\n\n\n\n// TODO remove. old code for pixi.js / phaser.js\nexport const ac_render = function (target, data) {\n  let {origin, flipH, flipV, wake} = data\n\n    let matrix = ac_xor(origin, ac_bits_asmg_11)\n\n    // transform\n    if (flipH) { matrix = flip_h(matrix) }\n    if (flipV) { matrix = flip_v(matrix) }\n    if (!wake) { matrix = move_d(matrix) }\n\n    // repeat the \"matrix\" array\n    // N=4 --> 4*16 = 64 points\n    // N=5 --> 5*16 = 80 points\n    // N=6 --> 5*16 = 96 points\n    // ....\n    // TODO make control-able\n    const N_repeat = app.data.repeat\n\n\n    app.data.contain.levelParent.position.x =\n    app.data.contain.levelParent.position.y =\n    app.data.contain.levelParent.pivot.x =\n    app.data.contain.levelParent.pivot.y = 50*(N_repeat*4 - 1)\n    // 150 for N=1. 150 = 300/2 = (4-1)*100/2\n\n    app.data.contain.groups.position.x =\n    app.data.contain.groups.position.y =\n    app.data.contain.groups.pivot.x =\n    app.data.contain.groups.pivot.y = 50*(N_repeat*4 - 1)\n\n  //app.data.contain.rotate.pivot.set(150, 150)\n    app.data.contain.rotate.position.x =\n    app.data.contain.rotate.position.y =\n    app.data.contain.rotate.pivot.x =\n    app.data.contain.rotate.pivot.y = 50*(N_repeat*4 - 1)\n    // 150 for N=1. 150 = 300/2 = (4-1)*100/2\n\n    /* TODO fix \"lines\" position, aka \"key of seven\"\n    app.data.contain.lines.position.x =\n    app.data.contain.lines.position.y =\n    app.data.contain.lines.pivot.x =\n    app.data.contain.lines.pivot.y = 50*(N_repeat*4 - 1)\n    */\n\n   //const N_repeat_2 = Math.pow(N_repeat, 2);\n    // multiply is faster than divide --> precompute\n    //const idx_factor = (1 / (N_repeat_2*8)); // works for N_repeat=2\n    const idx_factor = (1 / (N_repeat*16));\n\n    [...Array(N_repeat * N_repeat)]\n    .reduce(function(acc){\n    return acc.concat(matrix)\n  }, [])\n    //matrix.map(function (num, idx) {\n    .map(function (num, idx) {\n\n      /*\n      // right\n      const x0 = -400*Math.floor(idx / 32)\n      const y0 = -800*Math.floor(idx / 32)\n\n      // down\n      const y0 = -400*Math.floor(idx / 16)\n      const x0 = -400*Math.floor((idx % 32) / 16)\n             -400*Math.floor(idx / 32)\n      */\n\n      // up\n      //const tmp = Math.floor(idx / 32)\n      const tmp = Math.floor(idx * idx_factor)\n      const x0 = +400*tmp\n      const y0 = -400*tmp*N_repeat //-800*Math.floor(idx / 4)\n\n      //console.log(num+'   g: '+app.data.groupFromN[num])\n\n        let x = x0 + 100*(idx % 4)\n        let y = y0 + 100*Math.floor(idx / 4)\n\n        if (app.data.groupFromN) {\n          // background rectangle\n          const groupIdx = app.data.groupFromN[num]\n\n          // TODO in one command?\n          var rect = new PIXI.Sprite(PIXI.Texture.WHITE)\n      rect.tint = data.groupColor[groupIdx]\n      rect.width = 100\n      rect.height = 100\n      app.data.contain.groups.addChild(rect)\n      //rect.pivot.set(0.5)\n      rect.pivot.set(5)\n      rect.position.set(x, y)\n    }\n\n        let text = addBitmapText(\n          target,\n\n          // TODO revoke\n          app.data.nameFromN[num],\n          //app.data.groupFromN[num].toString(),\n\n          //name_gea[num], // TODO dynamic\n          x,\n          y,\n\n          0.75 * Math.PI\n          //1.75 * Math.PI\n        )\n\n    // Opt-in to interactivity\n    text.interactive = true;\n\n    // Shows hand cursor\n    text.buttonMode = true;\n\n    // pointer = mouse or touch\n    text.on('pointerdown', textOnPointerDown);\n    text.on('pointerup', textOnPointerUp);\n    //text.on('pointerupoutside', textOnPointerUp);\n\n    // Alternatively, use the mouse & touch events:\n    // text.on('click', onClick); // mouse-only\n    // text.on('tap', onClick); // touch-only\n\n    // TODO add object later?\n    //app.stage.addChild(text);\n\n    })\n}\n\n\n","<script preval=\"preval\">\n\n  // preval: see rollup.config.js\n\n  /*\n\n  TODO\n\n  fix initial position of map\n    should be\n    #A1_e/bxfoto_s+m_1100_6_en_np\n    -> center tensecross:\n    parents on top, children below.\n    girls left (leftism is feminism)\n    boys right (right is masculine)\n\n  SVG\n    replace\n      alignment-baseline=\"mathematical\"\n      (not working in firefox)\n    with\n      dominant-baseline=\"central\"\n    avoid <foreignObject> for text, use <text> and <tspan> when possible\n\n  optimize SVG export\n    make grid visible\n    remove comments, whitespace, unneeded class/id attributes,\n    remove unneeded SVG defs (symbols, patterns), except <pattern id=\"same_class_lines\"\n    remove empty attributes\n    define CSS variables\n      <style>\n        :root {\n          --fg: #000000;\n          --bg: #ffffff;\n        }\n      </style>\n    crop image. hide extra bg-pattern\n      quickfix: replace 'width=\"2400\" height=\"2400\"' with 'width=\"1600\" height=\"1600\"' (dont ask why)\n      remove: transform: translateX(800px) translateY(800px);\n      use: viewBox=\"0 0 800 800\"\n\n  format \"be\" (body element)\n    more overlap for color rectangles, to avoid gaps with distance \"zero\"\n    81px -> 85px, or so\n\n  optimize SVG code\n    use more classes and CSS styles\n    rename id=\"same_class_lines\" to id=\"bg_pattern_fill\"\n\n  remove?\n    <rect id=\"bg-pattern\" x=\"0\" y=\"0\" width=\"2400\" height=\"2400\" fill=\"url(#same_class_lines)\" style=\" \" transform-origin=\"center\"/>\n\n  fix fast multi moves\n    like right+right\n    without waiting for the first move to finish\n    allow to move fast\n    better separation of state and animation = static + dynamic\n\n  make compatible with firefox darkreader\n    darkreader in dynamic mode preserves colors (not perfect)\n    but drops background line color\n\n  dont capture ctrl+wheel events = browser zoom\n\n  move \"control\" divs to background\n    allow click access to visible elements\n    handle click and drag events on visible elements\n    avoid transparent control divs in foreground\n\n  complete \"click not move\" handling\n    on click, pass click event down to background layers\n\n  firefox is slow at counter-rotate.\n    add option to \"rotate faster\"\n    = counter-rotate without transition at the middle/end of rotation\n\n  fix svg export\n    include transforms, before export repaint svg with transformed matrix?\n\n  done:\n  generate standalone svg image from current map view\n    = svg screenshot\n    copy svg source to clipboard\n    or provide download link? size limit?\n\n  firefox. respect var(--fg) color for text\n\n  rename or alias?\n    from sympatonia/vagotonia [group, noun, integral]\n    to sympatone/vagotone [property, factor, part]\n\n  have a global state object like \"map\"\n    to set map parameters with click handlers aka links\n    <a href=\"javascript: map.format = 'mbti';\">set format to mbti</a>\n\n  make svg use the css variables --fg and --bg\n    use css variables to colorize all svg images\n    also those included/inlined from external svg files\n    or inline these files manually? or with sveltePreval?\n    use css variable for foreground + background color\n    var(--fg) and var(--bg)\n\n  moved to alchi-tables\n  add \"pallas sign\" in all eight rotations\n    each as separate svg file\n    with square size = 1:1 aspect ratio\n    or 16:10 ratio, like font glyph ratio of monospace char X\n\n  add prefix \"map_\" to fragment ID before map parameters\n    like \"map_A1_e/bxinout_etc_etc\"\n    allow to use other fragment IDs to navigate in description text\n    remember map parameters also without map_x fragment ID\n\n  cosmetic: make fragment ID parameters optional\n    and/or make parameters non-positional with key-value pairs\n    like query string #map&k1=v1&k2=v2&....\n    or single char prefixed values like #map_oA1_fe/b_a0\n    for origin, format, angle\n    or #map&o=A1&f=e/b&a=0\n    escape special chars (# & = .... and unicode) with %xx hex codes\n\n  also inline external svg image assets\n    not done by \"npm run inline\" command\n\n  moved to alchi-tables\n  done: test-hands-long-or-broad.svg [and others] is NOT inlined\n  verify inline of svg image + bitmap images (jpg png gif webp)\n    via <img src=\"image.svg\" /> tag\n    inline = pack all content into on html file\n    single file output\n\n  change light/dark mode more slowly\n    and on double press of \"L\",\n      change back from \"current state\"\n      and not from \"final state\"\n\n  done: listen on <div id=\"transform-mask\"\n    use `tabindex=\"-1\"` to allow keydown listener\n    handle key events only when grid is visible\n    allow to scroll page with arrow keys, without moving the grid\n    = unbind arrow keys?\n    = ignore arrow keys for (pageScroll > 0)?\n\n  allow to disable all animations = show next state now\n\n  done: not, use \"change position\" code\n    cos rotate3d is not counter-rotatable, no real 3D transform\n    do flipBodies() with translate-rotate layer and css: rotate3d(x,y,z,a)\n\n  moved to alchi-tables\n  \"fill this with some helpful text\"\n  probably the hardest part of all ....\n  cos human language is so imperfect and dirty\n\n  flip: also flip background pattern\n\n  cosmetic: make zooming smooth\n    use css transition on \"transform: scale(f)\"\n    and after transition, set svg viewport to render sharp\n\n  add touch gestures\n    two finger zoom\n    double tap to zoom in\n\n  allow to switch \"line mode\" between monlog and dialog\n    also animate diagonal monologs\n    show dialogs with double line? = double bond in chemistry\n\n  done: change with zoom level, better: do not change, cos internal sizes dont change\n    change moveStep with zoom level / \"odd angle\" view\n  \n  critical: fix \"zoom center\"\n    always zoom relative to center of map\n    define \"center of map\"? origin = (x = 1 && y = 1) ?\n    before rotation!\n    allow to \"center-and-zoom map\" with double click/tap?\n    allow to \"center map\" only? center = origin from url parameter\n\n  critical: fix \"flip center\"\n    always flip relative to center of map\n\n  allow to paint pathos-flows as arrows\n    so the flow direction is visible in a static screenshot\n\n  fit text to boxes? auto-scale font size\n\n  add shortcuts to switch nameFormat\n    avoid expanding the control menu\n\n  make more narrow the collapsed menu button\n    three dots, not three bars [hamburger icon]\n\n  cosmetic: animate zoom with css `transform: scale(1.5)` = blurred view\n    and set zoom-state with svg-viewbox = re-render to sharp view\n\n  zoom relative to visible center,\n    and/or relative to mouse position?\n\n  in rare cases, mousemove handler\n    is not activated after mousedown\n    only after mouseup\n\n  done: handle mouseleave only on document\n  keep moving after mouseleave\n\n  in progress:\n  add zoomBodies function\n\n  move control boxes to background\n    make foreground layers transparent for events\n    css: pointer-events: none;\n\n  critical: allow fast move\n    moves always must recover\n    cancel last animation?\n    better handle state diffs\n\n  code splitting? outsource components:\n    * render asmg-body by nameFormat + number\n    * transform logic: pan zoom rotate flip snap\n    * mouse event handlers\n    * control menu\n    * svg symbols\n    * translations = i18n\n\n  critical:\n  add mousemove listeners for rotate + zoom + flip\n\n  done:\n  critical: fix distant moves\n    like moveBodies(+2, +2); moveBodies(+2, +2)\n    or   moveBodies(+2, -2); moveBodies(+2, -2)\n    or   moveBodies(+2,  0); moveBodies(+2,  0)\n\n  cosmetic: animate snapping, avoid flicker\n\n  done: just remove \"promiseTimeout(1).then({ .... })\"\n  cosmetic: avoid flicker on back/forth transforms\n    use requestAnimationFrame ?\n    to set transforms in one frame\n\n  done?\n  critical:\n    really disable animation to reset translate [modulo]\n\n  fixme: in rare cases, mouseup is not handled\n    and mousemove gets a strange offset\n\n  handle mouseup on document\n\n  allow to set frame rate for mousemove throttling\n    advanced: do animations in javascript and throttle FPS\n\n  inject source.zip into inlined.html\n    total around 500 KByte\n    200 build + 300 source\n    bundle everything into html\n\n  use matrix3d transforms to solve the \"transformOrigin problem\"?\n    library candidates\n      rematrix - 4 KByte - 300 stars\n      snabbt.js - 16 KByte - 5k stars\n      svg-pan-zoom-rotate - 32 KByte - 1k stars for svg-pan-zoom\n    or use multiple transform layers?\n\n  add tour / intro / splash / welcome / first use tips / quickstart guide\n\n  done: use a separate layer for rotate transforms\n  fix rotate origin\n\n  fix \"click to move\"\n\n  done:\n  fix init angle / angle_id\n    read from URL fragment\n\n  svelte bug?\n    ignores whitespace between two template variables\n    workaround with <span style=\"margin-left: 0.33em\">\n    or {' '} {@html '&#x20;'}\n\n  fix rotate + move back\n\n  fix rotation center = transform-origin, set in moveBodies\n\n  fix \"move to rotate\"\n\n  done: calculate scale factors in setSize\n  \"remove this scale factor\" 2.666666 and 0.375\n    = 800/300 and 300/800\n    = width_in/width\n    performance should benefit from a 1:1 ratio\n    but then we want to zoom in/out\n    = recalculate all the sizes? naah, only few sizes\n    scale_in  = width_in / width    // = 800/300 = 2.66666\n    scale_out = width    / width_in // = 300/800 = 0.375\n\n  done:\n  put pattern + bodies in one <div> or <svg>\n    inside only one viewport\n    so we only must transform once\n    use \"real\" rotate3d transforms?\n    instead of manual flipBodies\n    bad idea cos:\n      flipping bodies is a different transform\n      and a simple rotate3d transform\n        would look less pretty\n        fix: counter-rotate bodies\n    good idea cos:\n      better performance??\n\n  refactor event listeners around mousemove + touchmove\n    use hammer.js?\n\n  use hammer.js for touch gestures?\n    or avoid dependency? bundle size vs tree shaking\n\n  add touchend, etc. event --> event.touches[0]\n\n  done:\n  allow to set \"flow direction\" = one of\n    N > P = from neuro to psycho\n    E > I = from extra to intro\n\n    // back flow\n    P > N\n    I > E\n\n  throttle mousemove events. compare performance:\n    1. remove + sleep + restore move listener\n    2. keep move listener, test boolean flag in every call\n         set boolean flag in timeout function\n    3. keep move listener, test deltaT in every call\n\n  done: zero cpu solution: one tic per second\n  flow animation with best performance\n    use webGL? gsap @ 25 fps still needs 20% cpu\n    which is better than 70% for svg+css\n    but still not optimal\n\n  done: removed from control menu\n  remove groupFormat\n    normally, we want to sync names+colors anyway\n    so we have no need for a separate \"color format\"\n    also, now we can show components direct/explicit\n\n  done:\n  propagate click event to lower layers\n\n  show \"same component\" lines\n    stripes for age + gender\n    hexagon-grid for sense + move\n\n  done:\n  also use touchstart, touchmove, touchend, touchleave, touchcancel\n\n  in progress:\n  make interface more map-like\n    like openstreetmap, openlayers, etc.\n    doubletap to zoom in\n    (+) and (-) buttons to zoom in/out\n    [|||] hamburger menu in other corner\n    zoom in to show more detail\n      = expand short-names\n    drag to pan = move, translate map\n    internal zoom control\n\n  fixme. control menu: scroll is broken after expand\n\n  done: fixed \"wrong direction\", but still not smooth\n  rotation repeated is not smooth\n    sometimes rotates back = wrong direction\n      --> bad modulo calculation\n\n  scroll/expand of \"select input\"s is broken in some cases\n\n  proper expand/collapse for navigation buttons\n\n  handle mouseScroll on \"select input\"s\n    to scroll/loop/rotate values\n\n  done:\n  critical:\n  animation of same-class-circle flows\n    needs too much CPU power [+30% cpu], optimize?\n    GPU accelerated variant?\n    off by default?\n\n  done:\n  exact box sizes for nameParts == 2\n    exact positions for color + text\n\n  generalize \"flex\" layout generation\n    for nameFormat values like\n\n      long format:                        short:\n      e|b   e/b   s/m|a/g   s/e/m|a/b/g   123/456   asmg\n\n      short form + minus as split sign:\n      e-b    eb    sm-ag      sem-abg     123-456   asmg\n\n      result layout:\n      e b    e      s a         s a         1 4     a\n             b      m g         e b         2 5     s\n                                m g         3 6     m\n                                                    g\n\n      here:\n      left: element, sense, move, emotion, left hand path\n      right: body, gender, age, reason, right hand path\n\n      auto-detect splitting?\n      so we can write sem|abg or sa/eb/mg\n      instead of s/e/m|a/b/g\n      in doubt, use vertical split\n      asmg = a/s/m/g = asmg/ [implicit slash suffix]\n      use \"pipe suffix\" to default to horizontal split\n      so asmg| = a|s|m|g\n\n      use \"minus sign\" as split sign?\n\n      use splitting by default [implicit splitting]\n      allow to \"merge\" components like\n      s+m/a+g = \"extravert psychotic / young male\"\n      with s+m in one color, and a+g in other color\n      but \"merged\" components (s+m) have same color\n\n  remove sveltePreval?\n    is `npm run build` already doing a \"preval\" optimization?\n\n  done:\n  detect locale from browser\n\n  read/write flip state from/to querystring\n    relative to angle_id == 0\n\n  hide animation on initial rotate + flip\n\n  toggle padding, default off --> save space\n    or auto-detect padding from angle?\n    slowly increase padding for odd angles\n    slowly = only when odd angle is wanted / stable / kept\n\n  done:\n  read paramaters from changed URL fragment\n    allow to navigate back/forth in web browser\n    --> solve the problem of \"cyclic dependency\"\n    maybe use .... ?\n    https://github.com/ItalyPaleAle/svelte-spa-router#querystring-parameters\n\n  done:\n  allow to collapse/expand the navigation buttons\n    to get more space for other menu items\n\n  in progress:\n  i18n = add translations. use `svelte-i18n` = readable store\n\n  done:\n  squares not circles = more space for text\n    show two halfs: body + mind = son/mother/daughter/father + fire/earth/air/water\n\n  problem with double click: text focus\n    use \"double click to move\" only on touchscreens?\n      = \"double tap\"\n    --> no, keep interface consistent across devices\n      use double tap/click to zoom in\n\n  in progress:\n  add \"drag to move bodies\"\n    on touchscreens, this is more intuitive than \"click to move\"\n    maybe add gestures to rotate + mirror?\n\n  fixme: pattern moves wrong in some rare cases\n    probably when moving too fast\n\n  cosmetic: android chrome: \"selected\" body has no stroke\n\n  scrollbars, horizontal scrollbar almost invisible\n    vertical scrollbar too large\n\n  done:\n  android bug: zodiac signs are orange\n    and do not use color from style\n    --> use custom svg symbols, with custom stroke color\n\n  cosmetic: provide a horizontal menu\n    for \"portrait orientation\" screens\n\n  move grid to the side\n    opposite of the menu\n    to better use \"landscape orientation\" screens\n\n  allow to set nameFormat / groupFormat\n    when menu is hidden?\n    via hotkeys shift+N and shift+G\n    + enter to finish\n\n  add buttons to zoom in/out\n    keep menu size\n    allow \"click to pan\" like a 2dim map?\n    or use scrollbars\n    always show zoom buttons?\n      like in osmAnd = openstreetmap for android app\n\n  done:\n  cosmetic: show \"background circle\" only on rotation\n\n  cosmetic:\n    use lowercase text for special nameFormat\n    like cg-jung, shape, zodiac\n    --> add boolean value \"isSpecialFormat\" to nameFormatPresets\n\n  done: format character \"b\" for \"body\"\n  add nameFormat \"outside element\"\n    A = MS = son\n    B = FL = mother\n    C = FS = daughter\n    D = ML = father\n    other dims: A S M G E [C = Class]\n    outside element = material = body = family role\n\n  done:\n  allow to disable \"flow\" animation\n    for better perormance on old devices\n    with play/stop button\n\n  allow to make animations slower\n    tweenDurShort = 500      // JS\n    animation-duration: 0.5s // CSS\n    --> set CSS with JS, use CSS variable for a-duration\n\n  done:\n  build \"single file app\". with sapper?\n    no, sapper is overkill.\n    use `inliner` from https://github.com/remy/inliner\n    alternative: https://github.com/posthtml/posthtml\n      https://github.com/jonathantneal/posthtml-inline-assets\n    move <script defer> behind <body>\n    on android, inlined.html must be stored on internal memory\n      otherwise browser fails with \"access denied\"\n    build inline html:\n      npm run build && npm run start &\n      sleep 10 && npm run inline\n      # sleep to wait for build + start\n\n  done:\n  add flipD and flipA functions\n\n  allow to set groupFormat for pathos\n    sample = S+MPM = colorize body by element, pathos by move\n    like for nameFormat\n\n  critical:\n  tooltips for tap devices\n    add click-mode \"info\"\n    https://stackoverflow.com/questions/37551869\n    also \"fancy tooltips\" = better to read\n    or: use zoom-in to show more detail\n\n  done: set flow dir\n  allow to configure the flow animation\n    direction of flow? now: N >> P\n    animate at all? or show solid lines\n\n  FIXME when doing \"click to move bodies\"\n    after some time, rotate silently stops working\n\n  FIXME when i \"save file\" the app\n    then moveBodies does not move the pattern\n    should be fixed by \"build + inline\", todo verify\n\n  add tooltips/titles to bodies\n    to explain abbreviations like \"F3L\"\n    and show \"full names\" for zodiac signs\n    good for learning, to play \"memory\"\n    add clickmode \"title\" for tap devices [touchscreen]\n\n  FIXME groupFormat \"+\" dont set text color\n\n  FIXME click-to-center does not always finish\n    probable cause: FIXME k_angleFromPos[3][2] is undefined\n\n  flipBodies. keep `patternTransform` short\n\n  use less space [top margin/padding] at even angles\n    add padding/margin only on odd angles\n      slowly, with a timeout, after rotate is done\n\n  add long name to every short name\n    sample: names of zodiac signs, M = Male, S = Short, etc\n    show single names on hover/click\n    show all names via menu button, like a \"map legend\"\n    --> zoom in to show more detail\n\n  done:\n  make menu smaller by about 30%\n\n  done:\n  flip the pathos circles, currently are wrong after flip\n\n  done:\n  pathos circles: make optional, also allow MBTI labels\n\n  performance: use CSS transitions where possible\n    todo: javascript with 30FPS should be faster\n    problem with CSS: runs at much higher frame rates\n    imitate gsap.js as ideal solution\n\n  done:\n  cosmetic: use sine-in-out for all transition + tweened\n    $ease-in-out-sine:  cubic-bezier( 0.445,  0.050,  0.550,  0.950 );\n    https://gist.github.com/terkel/4377409\n    source: penner equations\n\n  pattern: set clipPath concentric to center body\n    add option to switch on/off the clipPath\n    either show \"key of seven\" or whole pattern\n\n  done:\n  move pattern: compensate flip state\n\n  in progress:\n  manage \"app state\" more systematic --> refactor\n    have global state for move + rotate + flip + ....\n    keep \"translate\" functions\n    to directly translate from \"visible\" to \"internal\" coordinates\n    [ outward vs invert translations ]\n    without middle steps like out --> unflip --> unrotate --> unmove\n\n  done:\n  flip pattern along diagonal for odd angles\n\n  temporary deactivate CSS transition\n    to set angle to angle.mod(360)\n\n  done:\n  add \"mirror\" operation aka flipX flipY\n    not possible with rotate + translate\n    --> need separate operation\n\n  cosmetic: avoid transitions on zoom?\n    in browser zoom, bodies \"transit\" to their new position\n    which is not perfect\n    --> enable transitions only when needed, default off\n\n  cosmetic: in \"move back clipped bodies\"\n    set z-index to topmost layer\n    so the back-moved bodies are in front of the grid\n\n  add debounce/throttle function\n    to limit fire rate of move commands?\n    or keep the fun of \"lets move it fast!\"\n\n  combine bodyPath and text label?\n    bodyPath instead of photo\n\n  click modes: center, label, photo, hide?\n\n  fit caption text in circle? = scale font-size\n    https://stackoverflow.com/questions/15430189/\n\n  allow to add captions to bodies --> custom names\n    easier than photos\n\n  auto mode: shuffle settings by random, \"party mode\", \"demo mode\"\n\n  hover effect for bodies / groups-of-four\n\n  even size view: center by group-of-four\n    odd size view: center by single body\n\n  done: blame \"dark reader\" addon in \"static plus\" mode\n  fix colors in firefox\n\n  done:\n  switch body shape: circle vs bodyPath [body components]\n    done via pseudo nameFormat \"shape\"\n\n  do color transition (black/white)\n    more with CSS\n      div {\n        transition: background-color 0.5s ease;\n        background-color: red;\n      }\n      div:hover {\n        background-color: green;\n      }\n\n  add option to \"sync names and goups\"\n\n  add \"print\" button to\n    hide menu, print page, restore menu\n\n  allow custom body count?\n    next to presets of 7, 11, 25, 16, 36, 64\n    zoom-out to show more bodies\n\n  done:\n  fix the \"move\" operation\n    fix move direction after rotate\n      translate relative to gravity\n      after rotate, change \"move\" handlers\n    keep bodies on screen, dont clip\n      add padding to SVG\n      keep bodies visible in \"move\" operation\n\n  scroll on input-list to change value\n\n  done:\n  more padding for buttons\n\n  cosmetic:\n  proper clipping for \"same class lines\"\n    relative to view mode / body count: 7, 11, 16, 25, etc\n\n  done:\n  critical:\n  read/write config from/to URL fragment\n    = allow to bookmark the current state\n    url format: app.html#of.ngea.gs+m.a0\n    o = origin, n = nameFormat, g = groupFormat\n    a = angle, h = h-flip, v = v-flip, l = light\n\n  add solid color background to text labels\n    to overlay a background photo\n\n  done:\n  move \"same class lines\" to be visible\n\n  done:\n  bundle to single file\n    deploy to mobile - working :D\n    --> use \"build + inline\"\n\n  done: smaller menu, scale svg with width/width_in\n  make everything smaller, by factor 2\n    quickfixed by svg.width and div.scale\n      con: main scrollbar too large\n    make \"body grid\" zoomable?\n\n  done:\n  support \"no groups\" color mode, groupFormat = \"+\"\n\n  mobile: allow to zoom out? can only zoom in\n    --> use custom zoom logic, disable browser zoom\n\n  mobile firefox: scrollbars are transparent, should be solid\n\n  done: not\n  button for fullscreen? why? on desktop, F11 key is nuff\n\n  mobile chrome + firefox: lines color dont change in light mode\n    --> change manually in javascript, like scrollbar color\n\n\n\n  allow to add photos\n    crop, resize\n    convert to black/white\n    apply custom clipPath to photo\n    adjust brightness/contrast\n    move text label\n    label color, opposite of image colors?\n      css background mix blend mode\n      solid background for text label?\n\n  persistence\n    PWA = progressive web app?\n    browser extension?\n      browse all sites, add photos / screenshots\n    save zip file\n      https://davidwalsh.name/javascript-zip\n    save state in browser aka localStorage\n      https://higsch.me/2019/06/22/2019-06-21-svelte-local-storage/\n      allow to download zip file\n      not possible in browser? --> move to android app\n    node.js progressive web app\n      https://www.twilio.com/blog/2018/06/installable-web-apps-practical-introduction-progressive-web-apps.html\n      install / native\n      --> direct acces to filesystem\n    svelte native?\n\n  done: \"control\" menu - add expand/collapse\n    expand/collapse the whole menu\n\n  detect dark mode\n    also from hour-of-day?\n    in night time, always assume dark mode\n    in day time, follow browser's \"media\" config\n\n  set all colors with css variables?\n    --fg21 = foreground x4=2 y4=1\n    con: not working for same_class_lines pattern\n      in mobile browsers = browser bug?\n\n  done: avoid tween\n  add option \"fast rotate or sync rotate\"\n    to only tween the large rotation\n    and the small rotates without tween\n    done by not doing. dont use \"svelte/tweened\"\n    instead use CSS transition with CSS transform rotate\n\n  svelte bug? sveltePreval bug? [svelte preprocessor]\n    when <script> is not in first line\n    then line numbers are relative to script tag\n    not relative to file start\n\n  */\n\n\n\n  import { tweened } from 'svelte/motion';\n  import { sineInOut } from 'svelte/easing';\n  \n  // TODO FIXME CRITICAL\n  import { readable, writable } from 'svelte/store';\n\n  import * as alchi from './alchi.js';\n\n  // body + element = asmg\n  const C3 = 0b0000;\n  const A3 = 0b0001;\n  const C1 = 0b0010;\n  const A1 = 0b0011;\n  const C2 = 0b0100;\n  const A2 = 0b0101;\n  const C4 = 0b0110;\n  const A4 = 0b0111;\n  const B3 = 0b1000;\n  const D3 = 0b1001;\n  const B1 = 0b1010;\n  const D1 = 0b1011;\n  const B2 = 0b1100;\n  const D2 = 0b1101;\n  const B4 = 0b1110;\n  const D4 = 0b1111;\n\n  // TODO better. explicitly make svelte commit diffs\n  //   wait for svelte to commit diffs\n  const svelteCommitTime = 50; // milli seconds\n  const svelteCommitTime2 = 1; // milli seconds\n\n  // app state. default values\n  let origin = 0b0011\n  let nameFormat = 'e/bxinout'\n  let groupFormat = 's+m'\n\n  let isMenuHidden = true\n  let isDark = true\n  let doAnimateDash = true\n  let showOddAngles = false\n\n  let angle_id = 0 // range 0 to 7\n  let angle_id_in = 0 // will exceed range [0 to 7] for short times\n\n  const localeName = {\n    en: 'English',\n    de: 'Deutsch',\n    ar: 'العربية',\n    ar_r: 'Arabia',\n    ru: 'Pусский',\n    ru_r: 'Russkiy',\n    cz: 'český',\n    cn: '中国',\n    cn_r: 'Zhōngguó',\n    es: 'Español',\n    it: 'Italiano',\n    nl: 'Nederlands',\n    el: 'ελληνικά',\n    el_r: 'Elleniká',\n    da: 'Dansk',\n    tr: 'Türk',\n    ar: 'հայերեն',\n    ar_r: 'hayeren',\n    hi: 'हिंदी',\n    hi_r: 'Hindi',\n    ayur: 'Ayurveda',\n  }\n\n  // TODO is the key order preserved or changed?\n  //   preserved --> use Object.keys() directly\n  //   changed --> store [key, val] in sorted array\n  const localePresets = Object.keys(localeName)\n\n  let locale = (\n    navigator.language ||\n    navigator.userLanguage ||\n    'en-US'\n  ).split('-')[0]\n  console.log(`browser locale is ${locale}`)\n  if (!(locale in localePresets)) {\n    console.log(`FIXME locale ${locale} is not supported`)\n    locale = 'en'\n  }\n  alchi.setLocale(locale)\n\n\n\n  let nameFromN = [];\n  let nameParts = 1;\n  let nameFromSM = [];\n  let nameFromAG = [];\n  let pathosFromSM = [];\n  let showPathos = true;\n\n\n\n  // get url fragment ID and parse arguments\n  const arg_sep = '_'\n\n  // nameFormat in URL\n  const nameFromN_url = alchi.tableNameFromN('(be)').map(\n  //const nameFromN_url = alchi.tableNameFromN('(asmg)').map(\n    (x) => x[0][0])\n\n  const nameFromN_url_back = nameFromN_url.reduce(\n    (acc, val, idx) => {\n      acc[val] = idx\n      return acc\n    }, {})\n\n\n\n  function parseHash(init=false) {\n\n    const argv = window.location.hash.substr(1).split(arg_sep)\n\n    if (!argv) { return }\n\n    console.log('got args from url: '+argv)\n\n    if (argv[0]) {\n      const origin_new = nameFromN_url_back[argv[0]]\n      if (origin_new !== origin) {\n\n        console.log(`origin: ${origin} --> ${origin_new}`)\n\n        origin = origin_new\n\n        if (init === false) {\n          // TODO verify\n          const num = origin\n          const idx = matrix.indexOf(origin)\n          const x = idx % 4\n          const y = (idx / 4)|0\n\n          // move bodies\n          handleClickBody (null, x, y, num, idx)\n        }\n      }\n    }\n\n    if (argv[1] && argv[1] !== nameFormat) {\n      nameFormat = argv[1]\n      if (init === false) {\n        change_nameFormat() // TODO use store + subscribe\n      }\n    }\n\n    if (argv[2] && argv[2] !== groupFormat) {\n      groupFormat = argv[2]\n      if (init === false) {\n        change_groupFormat() // TODO use store + subscribe\n      }\n    }\n\n    if (argv[3]) {\n      [\n        isMenuHidden,\n        isDark,\n        doAnimateDash,\n        showOddAngles\n      ] = argv[3].split('').map(s => s === '1')\n      console.log('argv[3] = '+argv[3].split(''))\n      console.log('isMenuHidden, isDark, doAnimateDash = '+[isMenuHidden, isDark, doAnimateDash])\n    }\n\n    if (argv[4]) {\n      const angle_id_new = parseInt(argv[4])\n      if (angle_id_new !== angle_id) {\n        \n        angle_id_in = angle_id_new\n        angle_id = angle_id_in.mod(8)\n      }\n    }\n\n    // TODO parse flip state = flip- x y d a\n\n    if (argv[5] && argv[5] !== locale) {\n      locale = argv[5];\n      alchi.setLocale(locale);\n      if (init === false) {\n        change_nameFormat(); // TODO use store + subscribe\n      }\n    }\n  }\n\n  parseHash(true); // init\n\n\n\n\n\n\n  let centerBody = [-1, -1]; // TODO derive from origin\n\n  let width, height, gridPadding;\n  width = height = 300;\n\n  //width = height = '80%'\n\n  //let gridPadding = 200 // show clipped bodies for even angles\n  //let gridPadding = 110\n  //$: gridPadding = showOddAngles ? 168 : 80\n  //$: gridPadding = showOddAngles ? 168 : 0\n  $: gridPadding = showOddAngles ? 400 : 0;\n\n  const tweenFunc = sineInOut;\n  //const tweenFunc = quadInOut\n  //const tweenFunc = cubicInOut\n\n  const tweenDurShort = 500;\n  const tweenDurLong = 2000;\n\n\n  const rotateStep = 45;\n  let rotate = [0, 0]; // positive, negative // TODO remove?\n  //let angle = [0, 0] // positive, negative\n\n  // reactive declare\n  //$: angle = [angle_id * rotateStep, angle_id * rotateStep * -1]\n  $: angle = [\n    angle_id_in * rotateStep,\n    angle_id_in * rotateStep * -1,\n  ];\n\n  // flip state\n  // chenged in flipBodies\n  let flipOut = [1, 1];\n\n  // state of rotate vectors\n  // chenged in flipBodies\n  let rotVecFromAngle = ['0,1', '1,1', '1,0', '1,-1']\n\n  let doingRotate = false\n  let rotateEndTimer = null\n\n  function rotateLeft() { rotateBodies(+1) }\n  function rotateRight(){ rotateBodies(-1) }\n\n  function rotateBodies(k) {\n    // positive k = rotate left = counter clockwise\n    // negative k = rotate right = clockwise\n    \n    doAnimateMoves = true\n\n    if (k === 0 || k === -8 || k === 8) {\n      return\n    }\n\n\n    const k2 = k\n    const k3 = angle_id - k2\n    console.log(`rotateBodies from ${angle_id} to ${k3} via ${k} = ${k2}`)\n    angle = [angle[0] - k2*rotateStep, angle[1] + k2*rotateStep]\n    angle_id_in = ((angle[0]/rotateStep)|0)\n    angle_id = angle_id_in.mod(8)\n\n\n\n    if (0) {\n      const scale_odd = (angle_id % 2 == 1) ? Math.sqrt(2) : 1\n\n      // compute new matrix\n      transform_matrix = [\n        transform_matrix,\n        Rematrix.rotateZ(\n          -1*k*rotateStep,\n        )\n      ].reduce(\n        Rematrix.multiply\n      );\n\n      // apply new matrix\n      move_container.style.transform = Rematrix.toString(transform_matrix);\n    }\n\n    if (0) {\n      doAnimateMoves = false\n      gsap.to(move_container, {\n        // TODO use absolute values\n        rotation: '+='+(-1*k*rotateStep),\n        //rotation: angle,\n        //transformOrigin: transformOriginStr,\n        duration: tweenDurShort/1000,\n        ease: 'none',\n      })\n    }\n\n\n    return\n\n    /*\n\n    console.log(`rotateBodies(${k})`)\n\n    if (rotateEndTimer) {\n      clearTimeout(rotateEndTimer)\n    }\n\n    doingRotate = true\n\n    rotateEndTimer = setTimeout(\n      function(){\n        doingRotate = false\n      },\n      tweenDurShort\n    )\n\n    //const k2 = (k+4).mod(8)-4 // TODO?\n    const k2 = k\n    const k3 = angle_id - k2\n    console.log(`rotateBodies from ${angle_id} to ${k3} via ${k} = ${k2}`)\n    angle = [angle[0] - k2*rotateStep, angle[1] + k2*rotateStep]\n    angle_id_in = ((angle[0]/rotateStep)|0)\n    angle_id = angle_id_in.mod(8)\n    //.mod(8) // TODO?\n    //console.log('angle = '+angle)\n  \n    // wait for animation, disable CSS transition\n    promiseTimeout(tweenDurShort)\n    .then(() => {\n      doAnimateMoves = false\n      angle_id_in = angle_id_in.mod(8)\n    })\n\n  */\n\n  }\n\n\n\n  /* TODO remove\n    function focusName(){\n      promiseTimeout(100).then(()=>(\n        document.getElementById('inf').focus()))\n    }\n\n    function focusGroup(){\n      document.getElementById('igf').focus()\n    }\n  */\n\n\n\n  // FIXME when moving too fast\n  //   `posInFromOut[xOut]` is undefined\n  //   set earlier? use `try{} catch{}`?\n  //   this is NOT critical, movement does recover + continue\n  //   also `posInFromOut[xOut][yOut]` can be undefined\n\n  // TODO improve?\n  function isCenter(xOut, yOut) {\n\n    console.log(`isCenter: xOut = ${xOut}   yOut = ${yOut}`)\n    \n    try {\n      return posInFromOut[xOut][yOut].equals([2, 2])\n    }\n    catch (e) {\n      console.error(`FIXME posInFromOut[${xOut}][${yOut}] is undefined`)\n      throw (e)\n      return false\n    }\n\n    const [x, y] = posInFromOut[xOut][yOut]\n\n\n    //const [x, y] = [xOut, yOut]\n    // note: xMin == 0, xMax == xSize-1\n    for (let [a, aSize] of [[x, xSize], [y, ySize]]) {\n      if (aSize%2===1) {\n        // odd size\n        if (2*a+1 !== aSize) {\n          return false\n        }\n      } else {\n        // even size\n        if (2*a !== aSize && 2*(a+1) !== aSize) {\n          return false\n        }      \n      }\n    }\n    return true\n  }\n\n\n\n  // grid size\n  // TODO rename vars\n  // TODO dynamic size - infinite scroll ?\n  let ySize = 0;\n  let xSize = 0; // init later\n\n\n\n  // bodies mask\n  // TODO re-implement\n  const bodiesMaskPresetsKeys = [7, 11, 25, 16, 18]\n  const bodiesMaskPresets = {\n    7: [ // origin is (2, 2)\n      [0, 0, 0, 0, 0],\n      [0, 1, 1, 0, 0],\n      [0, 1, 1, 1, 0],\n      [0, 0, 1, 1, 0],\n      [0, 0, 0, 0, 0],\n    ],\n    11: [ // origin is (2, 2)\n      [0, 0, 1, 0, 0],\n      [0, 1, 1, 0, 0],\n      [1, 1, 1, 1, 1],\n      [0, 0, 1, 1, 0],\n      [0, 0, 1, 0, 0],\n    ],\n    25: 1, // show all bodies\n\n    // even numbers = center is group-of-four\n    16: 1, // show all bodies\n    18: 1, // show all bodies\n  }\n\n  let bodiesMask = bodiesMaskPresets[11]\n  \n  function setBodiesMask(n){\n    //console.log(btn.innerHTML)\n    //const n = parseInt(btn.innerHTML)\n    if (n in bodiesMaskPresets) {\n      bodiesMask = bodiesMaskPresets[n]\n    }\n  }\n\n\n\n  let xRange, yRange, bodyPosStatic\n  let width_in, height_in\n  let scale_in, scale_out\n\n  // 200 = internal grid step\n\n  $: scale_in  = (width_in + 2*gridPadding) / width\n  $: scale_out = 1/scale_in\n\n  function setSize(xSizeNew, ySizeNew) {\n\n    if (xSizeNew !== xSize) { // new xSize\n      width_in = 200 * xSizeNew\n      xRange = Array.from(Array(xSizeNew).keys())\n    }\n\n    if (ySizeNew !== ySize) { // new ySize\n      height_in = 200 * ySizeNew\n      yRange = Array.from(Array(ySizeNew).keys())\n    }\n\n    // set scale factor\n    scale_in  = width_in / width    // = 800/300\n    scale_out = width    / width_in // = 300/800\n\n    // 200 = grid step\n    console.log('bodyPosStatic 1067:')\n    bodyPosStatic = Array.from(Array(xSizeNew).keys())\n      .map((x) => Array.from(Array(ySizeNew).keys())\n      .map((y) => [x*200, y*200]))\n    console.dir(bodyPosStatic)\n\n    if (xSizeNew === 5 && ySizeNew === 5) {\n      bodiesMask = bodiesMaskPresets[11]\n    } else {\n      bodiesMask = 1\n    }\n\n    xSize = xSizeNew\n    ySize = ySizeNew\n  }\n\n  // init\n  setSize(4, 4)\n\n\n\n  // animate translate, rotate, zoom\n  // only activated on demand\n  // to avoid animation on browser zoom\n  let doAnimateMoves = false\n\n  function handleDoubleClickBody (event, x, y, num, idx) {\n    // TODO show tooltips for body + pathos\n    //   or use double-click to zoom-in\n\n    console.dir(event);\n  }\n\n  \n\n  // TODO split this function\n  //   extract a \"focusBody(num)\" function\n  function handleClickBody (event, x, y, num, idx) {\n\n    // event.target is ambiguous\n\n    origin = num\n\n    centerBody = centerBody.equals([x, y]) ? (\n      [-1, -1] // unselect\n    ) : (\n      [x, y]\n    )\n\n    const n = nameFromN[num][0]\n    const isc = isCenter(x, y)\n    const [xPos, yPos] = bodyPosStatic[x][y]\n    const [xOut, yOut] = [(xPos/200)|0, (yPos/200)|0]\n\n    // find same-element body in same-class four\n    // one of the four diagonal next-ones\n\n    const _element = num & 0b0110\n    const element = _element >> 1 // 0 1 2 3 = 3 1 2 4\n\n    let d_diag = [0, 0] // invalid\n    let [dx_diag, dy_diag] = [0, 0] // invalid\n\n    for ([dx_diag, dy_diag] of [\n      [+1, +1], [+1, -1], [-1, -1], [-1, +1]\n    ]) {\n\n      const num_diag = matrix[idxFromPos(x+dx_diag, y+dy_diag)]\n      const _element_diag = num_diag & 0b0110\n\n      if (_element == _element_diag) {\n        d_diag = [dx_diag, dy_diag]\n        break\n      }\n    }\n\n    console.log({ ddg0: d_diag[0], ddg1: d_diag[1],\n      dx_diag, dy_diag })\n\n    // compensate flip\n    const d_out = bodyPosStatic[(x+dx_diag).mod(4)][(y+dy_diag).mod(4)].map(\n      a => (a/200)|0 )\n    d_diag = [d_out[0]-xOut, d_out[1]-yOut]\n\n    console.log({ ddg0f: d_diag[0], ddg1f: d_diag[1] })\n\n    // first move step\n    const x_new = (1.5 + 0.5*d_diag[0])|0\n    const y_new = (1.5 + 0.5*d_diag[1])|0\n\n    const x_move = x_new-xOut\n    const y_move = y_new-yOut\n\n    //console.log({ dgx: d_diag[0], dgy: d_diag[1], x_move, y_move })\n    console.log({ x_move, y_move, x_new, y_new,\n      x_dd: d_diag[0], y_dd: d_diag[1] })\n\n    moveBodies(x_move, y_move, false) // false = dont rotate (x, y)\n\n    const sleep1 = (x_move == 0 && y_move == 0) ? (\n      0) : (2*tweenDurShort)\n\n    // wait for move end\n    promiseTimeout(sleep1).then(() => {\n\n      const k_angleFromElement = [1, 3, 7, 5] // 3 1 2 4\n\n      const k_angleFromPos = [ 0,\n        [0, 2, 0],\n        [0, 4, 6],\n      ]\n\n      const k_angleOld = (angle[0]/45)|0\n\n      let k_new = k_angleOld\n      try {\n        k_new = (\n          - k_angleFromElement[element]\n          + k_angleFromPos[x_new][y_new]\n          // FIXME when moving fast\n          //   `k_angleFromPos[x_new]` is undefined\n          //   this is NOT critical, movement does recover + continue\n          //   also `k_angleFromPos[x_new][y_new]` can be undefined\n          + k_angleOld\n\n          + 1 // TODO make this toggle-able\n          // +1 = even angle, fire=topleft, water=topright, etc.\n          // +0 = odd angle, fire=top, water=right, etc.\n\n        )\n      }\n      catch (e) {\n        console.error(`FIXME k_angleFromPos[${x_new}][${y_new}] is undefined`)\n        throw (e)\n      }\n\n      rotateBodies(k_new)\n\n      const sleep2 = (k_new == 0) ? (0) : (tweenDurShort)\n\n\n\n      // TODO move to function\n      // invert array to object = swap keys / values\n\n      posInFromOut = bodyPosStatic.reduce(\n      (acc, col, x) => (\n        //col.forEach( ([xp, yp], y, arr) => {\n        col.reduce(\n        (acc, [xp, yp], y) => {\n\n          // TODO generalize \"200\"\n          // or use \"raw\" index 0,1,2,3 as SVG coordinate\n          const [xi, yi] = [xp/200, yp/200]\n\n          if (!(xi in acc)) { acc[xi] = {} }\n          acc[xi][yi] = [x, y]\n          return acc\n        }, acc) // pass first acc to second reduce\n      ), {})\n\n\n\n      const k_angle = angle_id // TODO rename k_angle to angle_id\n\n      // wait for rotate end\n      promiseTimeout(sleep2).then(() => {\n\n        // flip\n\n        // TODO rename \"element\" to sm or sense_move\n        // element: 1 fire, 2 earth, 3 air, 4 water\n        // sense_move: 0 air, 1 fire, 2 earth, 3 water\n\n        if (element === 0 || element === 3) {\n          // center is water or air\n\n          // TODO make this shorter\n          // use lookup table\n          // from k_angle to (x, y) position\n\n          // 00 01 10 11 = 3 1 2 4\n          // 0b0010 == fire\n          try {\n            \n            if (k_angle == 0 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[3][3])])) {\n                flipA()\n            }\n            else if (k_angle == 1 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[3][3])])) {\n                flipY()\n            }\n\n            //\n\n            else if (k_angle == 2 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[3][0])])) {\n                flipA()\n            }\n            else if (k_angle == 3 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[3][0])])) {\n                flipY()\n            }\n\n            //\n\n            else if (k_angle == 4 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[0][0])])) {\n                flipA()\n            }\n            else if (k_angle == 5 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[0][0])])) {\n                flipY()\n            }\n\n            //\n\n            else if (k_angle == 6 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[0][3])])) {\n                flipA()\n            }\n            else if (k_angle == 7 && 0b0010 == (\n              0b0110 & matrix[idxFromPos(posInFromOut[0][3])])) {\n                flipY()\n            }\n\n          }\n          catch (e) {\n            // FIXME when moving too fast\n            //   posInFromOut[3][3] is undefined\n            console.error(`FIXME posInFromOut is undefined`)\n            throw (e)\n          }\n\n        }\n\n        else {\n          // center is fire or earth\n\n          // TODO\n          // 00 01 10 11 = 3 1 2 4\n          // 0b0000 == air\n\n          // TODO make this shorter\n          // save \"reference positions\" in array\n          // here, the reference element is air --> se == 00\n\n\n          switch (k_angle) {\n\n            case 0:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[3][0])])\n              ) { flipD() }\n              break\n\n            case 1:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[3][0])])\n              ) { flipX() }\n              break\n\n            //\n\n            case 2:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[0][0])])\n              ) { flipD() }\n              break\n\n            case 3:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[0][0])])\n              ) { flipX() }\n              break\n\n            //\n\n            case 4:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[0][3])])\n              ) { flipD() }\n              break\n\n            case 5:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[0][3])])\n              ) { flipX() }\n              break\n\n            //\n\n            case 6:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[3][3])])\n              ) { flipD() }\n              break\n\n            case 7:\n              if (0b0000 == (0b0110 & matrix[\n                idxFromPos(posInFromOut[3][3])])\n              ) { flipX() }\n              break\n\n          }\n  }})})}\n\n\n\n  function idxFromPos(_x, _y) {\n\n    const [x, y] = Array.isArray(_x) ? _x : [_x, _y]\n\n    const yIdx = (y%4)*4\n    const x4 = x%4\n    const idx = yIdx+x4\n\n    return idx\n  }\n\n\n\n  // map between \"visible\" and \"internal\" positions\n  // opposite of bodyPosStatic array\n  let posInFromOut = preval(() => Array.from(Array(4).keys())\n    .map((x) => Array.from(Array(4).keys())\n      .map((y) => [x, y])));\n\n\n\n  let moveStep = 200 // = grid step, TODO rename\n\n  // TODO remove this scale factor?\n  //   synchronize all coordinate systems?\n  //   should be good for performance\n  let moveStep_pat = scale_out*moveStep\n\n  /* javascript modulo function also for negative numbers */\n  Number.prototype.mod = function(n) {\n    return ((this%n)+n)%n\n  }\n\n\n\n  let scaleFactor = [1, 1]\n  let gridRotate3D = [0, 0, 0, 0]\n  let gridRotate3DBodies = [0, 0, 0, 0]\n\n\n\n  const promiseTimeout = time => new Promise(resolve => setTimeout(resolve, time))\n\n\n\n  let flipIn = [1, 0, 0, 1] // identic = no flip\n  \n  let anim_dash_offset = 0; // set in animateDashStep()\n\n  let anim_dash_factor_key = 'np';\n\n  const anim_dash_factor_presets = {\n    // top-left, top-right, bottom-left, bottom-right\n    np: [ -1, +1, -1, +1 ],\n    pn: [ +1, -1, +1, -1 ],\n    ei: [ -1, -1, +1, +1 ],\n    ie: [ +1, +1, -1, -1 ],\n  }\n\n  $: anim_dash_factor = anim_dash_factor_presets[anim_dash_factor_key]\n\n  let pathosPos = [\n    [ 45, 100],\n    [155, 100],\n    [100,  45],\n    [100, 155],\n  ]\n\n  function productMatrixVector(m, v){\n    // assert dimensions: dim(m) = 2x2, dim(v) = 2\n    return [\n      v[0] * m[0] + v[1] * m[2],\n      v[0] * m[1] + v[1] * m[3],\n    ]\n  }\n\n\n\n  const moveMatrixFromAngle = [\n  // dx  dx  dy  dy\n    [ 1,  0,  0, +1], // identity matrix\n    [ 1, -1, +1, +1],\n    [ 0, -1, +1,  0],\n    [-1, -1, +1, -1],\n    [-1,  0,  0, -1],\n    [-1, +1, -1, -1],\n    [ 0, +1, -1,  0],\n    [+1, +1, -1, +1],\n  ]\n\n  const rotate3DVectorFromAngle_flipX = moveMatrixFromAngle.map(\n    ([a, b, c, d]) => [c, a])\n\n  const rotate3DVectorFromAngle_flipY = moveMatrixFromAngle.map(\n    ([a, b, c, d]) => [d, b])\n\n\n\n  let move_container = null // init later\n\n  let translate_x = 0\n  let translate_y = 0\n\n  let translate_origin_x = 0\n  let translate_origin_y = 0\n\n  let dxSum = 0\n  let dySum = 0\n\n  // move state of clipped bodies\n  let idxClipped = Array.from(Array(4).keys()).map(\n    (x) => Array.from(Array(4).keys()).map(\n      (y) => ([x, y])\n    )\n  )\n\n  let moveEndTimer = null\n\n  // TODO init\n  let transformOrigin = [1.5*width, 1.5*height]\n  let transformOriginStr = `${transformOrigin[0]}px ${transformOrigin[1]}px`;\n\n  /**/\n  function moveLeft()  { moveBodies(-1,  0) }\n  function moveRight() { moveBodies(+1,  0) }\n  function moveUp()    { moveBodies( 0, -1) }\n  function moveDown()  { moveBodies( 0, +1) }\n  /**/\n\n  /* DEBUG * /\n    function moveLeft()  { moveBodies(-2,  0) }\n    function moveRight() { moveBodies(+2,  0) }\n    function moveUp()    { moveBodies( 0, -2) }\n    function moveDown()  { moveBodies( 0, +2) }\n  /**/\n\n  /* DEBUG * /\n    function moveLeft()  { moveBodies(-3,  0) }\n    function moveRight() { moveBodies(+3,  0) }\n    function moveUp()    { moveBodies( 0, -3) }\n    function moveDown()  { moveBodies( 0, +3) }\n  /**/\n\n\n  const moveStepByZoom = {\n    \"-4\": 200 - 100,\n    \"-3\": 200 - 85,\n    \"-2\": 200 - 66.6666666,\n    \"-1\": 200 - 40,\n    0: 200,\n    1: 200 + 66.666666,\n    2: 200 + 200,\n    3: 200 + 200 + 400,\n  };\n\n\n  // change moveStep with zoomLevel\n  //$: moveStep = 200 + zoomLevel*(zoomLevel % 2 === 0 ? 100 : 66.6666666);\n  let moveStepIntern = 200;\n\n  $: {\n    moveStep = (zoomLevel in moveStepByZoom) ? (moveStepByZoom[zoomLevel]) : 200;\n    //moveStepIntern = 400 - moveStep;\n  }\n\n  // zoom state\n  let zoomLevel = 0;\n  let svg_viewbox = [0, 0, 0, 0];\n  let move_odd = 0;\n  $: {\n\n    /*\n    // force center for every zoom step\n    move_odd = (zoomLevel % 2 === 0) ? 0 : (\n      100\n    );\n    */\n\n    /*\n    move_odd = 0; // disable \"force center\"\n\n    svg_viewbox = [\n      -gridPadding + zoomLevel*300 + move_odd,\n      -gridPadding + zoomLevel*300 + move_odd,\n      3*width_in +2*gridPadding - 2*zoomLevel*300,\n      3*height_in+2*gridPadding - 2*zoomLevel*300,\n    ];\n    */\n\n    /*\n    svg_viewbox = [\n      -gridPadding + zoomLevel*300, // TODO use zoomEvent?\n      -gridPadding + zoomLevel*300,\n      3*width_in +2*gridPadding - 2*zoomLevel*300,\n      3*height_in+2*gridPadding - 2*zoomLevel*300,\n    ];\n    */\n\n    svg_viewbox = [\n      -gridPadding + zoomLevel*300, // TODO use zoomEvent?\n      -gridPadding + zoomLevel*300,\n      3*width_in +2*gridPadding - 2*zoomLevel*300,\n      3*height_in+2*gridPadding - 2*zoomLevel*300,\n    ];\n\n    console.log(`svg_viewbox = ${svg_viewbox.join(' ')}`);\n  }\n\n  //dxSum, dySum\n\n  const max_zoomLevel = 3;\n\n  // TODO\n  function zoomBodies(zoomStep=+1) {\n    // TODO use <svg viewBox=\"a b c d\"> to zoom\n    //   viewBox or viewPort ?\n    if (zoomStep < 0 || zoomLevel < max_zoomLevel ) {\n      zoomLevel += zoomStep;\n    }\n    console.log(`zoomLevel = ${zoomLevel}`)\n  }\n  window.zoomBodies = zoomBodies; // make global\n\n\n\n  // rename: \"skipMove\" to \"animateMove\" [positive name]\n  // remove hideMove ?\n  function moveBodies(dxOut=0, dyOut=0, rotate=true, skipMove=false, hideMove=false) {\n\n    if (dxOut == 0 && dyOut == 0) {\n      // no change\n      return;\n    }\n\n    //angle_id = ((angle[0]/rotateStep)|0).mod(8)\n\n    let [dx, dy] = rotate ? (\n      productMatrixVector(\n        moveMatrixFromAngle[angle_id],\n        [dxOut, dyOut]\n      )\n    ) : (\n      [dxOut, dyOut]\n    );\n\n    if (0) {\n      if (angle_id % 2 == 1) {\n        // odd angle\n        dx *= Math.sqrt(2);\n        dy *= Math.sqrt(2);\n      }\n    }\n\n    dxSum += dx;\n    dySum += dy;\n\n    //dxSum += dxOut;\n    //dySum += dyOut;\n\n    //const scale_odd = (angle_id % 2 == 1) ? Math.sqrt(2) : 1;\n    const scale_odd = (angle_id % 2 == 1) ? 1 : 1;\n    let waitForModulo = false;\n\n    if (1) {\n      // modulo = reset to center\n      \n      doAnimateMoves = false;\n      //doAnimateDash = false;\n      // TODO really disable animation\n      //   wait for svelte to commit diffs?\n\n      const moveModX = (Math.abs(dxSum) < 4) ? 0 : (\n        Math.sign(dxSum) * +4\n      );\n\n      const moveModY = (Math.abs(dySum) < 4) ? 0 : (\n        Math.sign(dySum) * +4\n      );\n\n      // TODO\n      //if (moveModX) { dxSum = dxSum.mod(4) }\n      //if (moveModY) { dySum = dySum.mod(4) }\n      //if (moveModX) { dxSum = (dxSum+2).mod(4)-2; }\n      //if (moveModY) { dySum = (dySum+2).mod(4)-2; }\n\n      /**/\n      if (moveModX !== 0) { dxSum -= moveModX }\n      if (moveModY !== 0) { dySum -= moveModY }\n      /**/\n\n      console.log(`moveMod ${moveModX} ${moveModY}`);\n      console.log(`d_Sum ${dxSum} ${dySum}`);\n\n      if (1) {\n        if (moveModX !== 0 || moveModY !== 0) {\n\n          // wait for svelte to commit diffs\n          waitForModulo = true;\n          //promiseTimeout(svelteCommitTime2).then(() => {\n\n          if (1) {\n            bodyPosStatic = bodyPosStatic.map(\n              (col, x) => col.map(\n                ([xPos, yPos], y) => {\n                  console.log(`bps ${x} ${y} = ${xPos} ${yPos} --> ${xPos + moveModX*moveStep} ${yPos + moveModY*moveStep} . ${moveModX} * ${moveStep} = ${moveModX * moveStep}`)\n                  return [\n                    //0, 0, // DEBUG\n                    (xPos + moveModX*moveStep),\n                    (yPos + moveModY*moveStep),\n                  ]\n                }\n              )\n            );\n          }\n\n          if (1) {\n            //transform_translate.style.transform += `translate(${moveX*75}px,${moveY*75}px) `;\n            //transform_translate.style.transform += `translate(${-1*moveModX}px,${-1*moveModY}px) `;\n            //transform_translate.style.transform += `translate(${moveModX}px,${moveModY}px) `;\n            //transform_translate.style.transform += `translate(${-1*dx*scale_out*moveStep*scale_odd}px,${-1*dy*scale_out*moveStep*scale_odd}px) `;\n            //console.log('modulo:')\n            //console.dir({scale_odd,tlx: (-4*dx*scale_out*moveStep*scale_odd), tly: (-4*dy*scale_out*moveStep*scale_odd), dx, dy, scale_out, moveStep})\n            //transform_translate.style.transform += `translate(${-1*dx*scale_out*moveStep*scale_odd}px,${-1*dy*scale_out*moveStep*scale_odd}px) `;\n            //transform_translate.style.transform += `translate(${-4*dx*scale_out*moveStep*scale_odd}px,${-4*dy*scale_out*moveStep*scale_odd}px) `;\n            /*\n              ${-1*moveModX*scale_out*moveStepIntern*scale_odd}px,\n              ${-1*moveModY*scale_out*moveStepIntern*scale_odd}px\n            */\n            transform_translate.style.transform += `translate(\n              ${-1*moveModX*scale_out*moveStep*scale_odd}px,\n              ${-1*moveModY*scale_out*moveStep*scale_odd}px\n            ) `;\n\n            /*\n            moveModX;\n            translate_y = translate_y - moveModY*/\n          }\n          //})\n        }\n      }\n\n\n      //translate_x = translate_x.mod(4*moveStep_pat)\n      //translate_y = translate_y.mod(4*moveStep_pat)\n\n\n      // TODO FIXME\n\n\n\n      if (0) {\n        \n        const scale_odd = (angle_id % 2 == 1) ? Math.sqrt(2) : 1;\n\n        // compute new matrix\n        transform_matrix = [\n          transform_matrix,\n          Rematrix.translate(\n            -1*moveModX*scale_out*moveStep,\n            -1*moveModY*scale_out*moveStep,\n          )\n        ].reduce(\n          Rematrix.multiply\n        );\n\n        // apply new matrix\n        move_container.style.transform = Rematrix.toString(transform_matrix);\n\n      }\n\n      if (0) {\n        translate_x = translate_x - moveModX;\n        translate_y = translate_y - moveModY;\n      }\n\n      if (0) {\n        doAnimateMoves = false;\n        gsap.set(move_container, {\n          //x: dx * moveStep,\n          //y: dy * moveStep,\n          // TODO use absolute values\n          x: '+='+(-moveModX*scale_out*moveStep),\n          y: '+='+(-moveModY*scale_out*moveStep),\n          //duration: 0,\n          //repeat: -1,\n          //ease: 'none',\n        });\n        transformOrigin = [\n          transformOrigin[0]-1*(-moveModX*scale_out*moveStep),\n          transformOrigin[1]-1*(-moveModY*scale_out*moveStep),\n        ];\n      }\n\n    }\n\n    // wait for svelte to commit diffs\n    // TODO move to svelte.afterUpdate function?\n    //promiseTimeout(waitForModulo ? 2*svelteCommitTime2 : 0).then(() => {\n    promiseTimeout(waitForModulo ? svelteCommitTime2 : 0).then(() => {\n\n      console.log(`dx = ${dx}   dy = ${dy}`);\n\n      //dx = (dx+2).mod(4)-2\n      //dy = (dy+2).mod(4)-2\n\n      if (skipMove === false) {\n        doAnimateMoves = true;\n      }\n\n      // sleep\n      // wait for svelte to set translate_x, translate_y\n      // so later, we can set doAnimateMoves\n      // TODO how to flush state in svelte? [force render, stop batching diffs]\n\n      // TODO restore?\n      //promiseTimeout(1).then(() => {\n\n        /*\n          if (skipMove === false) {\n            doAnimateMoves = true;\n          }\n          else {\n            doAnimateMoves = false;\n          }\n        */\n\n        //const moveBackTimeout = skipMove ? 0 : tweenDurShort;\n        // 1 ms pseudo timeout\n        //const moveBackTimeout = skipMove ? 10 : tweenDurShort;\n\n        // move bodies\n        /* old stuff\n        bodyPosStatic = bodyPosStatic.map(\n          (row, x) => row.map(\n          ([xPos, yPos], y) => {\n            return [\n              xPos + dx * moveStep,\n              yPos + dy * moveStep,\n            ]\n        }))\n        */\n\n\n\n        // new stuff\n\n        if (1) {\n          //transform_translate.style.transform += `translate(${moveX*75}px,${moveY*75}px) `;\n          //console.log(`translate(${dx*scale_out*moveStep*scale_odd}px,${dy*scale_out*moveStep*scale_odd}px) `)\n          transform_translate.style.transform += `translate(${dx*scale_out*moveStep*scale_odd}px,${dy*scale_out*moveStep*scale_odd}px) `;\n\n          // DEBUG\n          //return\n\n          //transform_translate.style.transform += `translate(${-1*moveModX}px,${-1*moveModY}px) `;\n\n          //translate_x += dx * moveStep_pat\n          //translate_y += dy * moveStep_pat\n\n        }\n\n        if (0) {\n\n          const scale_odd = (angle_id % 2 == 1) ? Math.sqrt(2) : 1\n\n          // compute new matrix\n          transform_matrix = [\n            transform_matrix,\n            Rematrix.translate(\n              dx*scale_out*moveStep*scale_odd,\n              dy*scale_out*moveStep*scale_odd,\n            )\n          ].reduce(\n            Rematrix.multiply\n          );\n\n          // apply new matrix\n          move_container.style.transform = Rematrix.toString(transform_matrix);\n\n        }\n\n\n\n        // TODO FIXME rotate+move\n\n        if (0) {\n          //gsap.ticker.fps(30); // TODO move to global\n          doAnimateMoves = false;\n          const scale_odd = (angle_id % 2 == 1) ? Math.sqrt(2) : 1\n          gsap.to(move_container, {\n            //x: dx * moveStep,\n            //y: dy * moveStep,\n            //x: -300+dxSum*scale_out*moveStep,\n            //y: -300+dySum*scale_out*moveStep,\n            // TODO use absolute values\n            //x: '+='+(dx*scale_out*moveStep),\n            //y: '+='+(dy*scale_out*moveStep),\n            x: '+='+(dxOut*scale_out*moveStep*scale_odd),\n            y: '+='+(dyOut*scale_out*moveStep*scale_odd),\n            duration: tweenDurShort/1000,\n            //repeat: -1,\n            ease: 'none',\n          });\n          transformOrigin = [\n            transformOrigin[0]-1*(dxOut*scale_out*moveStep*scale_odd),\n            transformOrigin[1]-1*(dyOut*scale_out*moveStep*scale_odd),\n          ];\n          transformOriginStr = `${transformOrigin[0]}px ${transformOrigin[1]}px`;\n        }\n\n\n        if (0) {\n          //translate_x += dx * moveStep_pat\n          //translate_y += dy * moveStep_pat\n          \n          translate_x -= dx * moveStep_pat\n          translate_y -= dy * moveStep_pat\n        }\n\n        console.log(`d_Out = ${dxOut} ${dyOut}   d_ = ${dx} ${dy}   flip = ${flipIn[0]} ${flipIn[1]} ${flipIn[2]} ${flipIn[3]}`);\n\n        if (1) {\n          // move back clipped bodies\n          // wait for svelte to commit diffs, delta T = 10 ms\n          //promiseTimeout(moveBackTimeout)\n          promiseTimeout(skipMove ? svelteCommitTime : tweenDurShort)\n          .then(() => {\n\n            if (doAnimateMoves == false) {\n              doAnimateMoves = true\n            }\n\n            /* old stuff\n            bodyPosStatic = bodyPosStatic.map(\n              (row, x) => row.map(\n              ([xPos, yPos], y) => {\n                return [\n                  xPos.mod(4*moveStep),\n                  yPos.mod(4*moveStep),\n                ]\n            }))\n            */\n\n\n\n            // new stuff\n            // find clipped bodies + move back\n\n            // dx = -3 --> move lines 0,1,2 to 4,5,6\n            // dx = -2 --> move lines 0,1 to 4,5\n            // dx = -1 --> move line  0 to  4\n            // dx = +1 --> move line  3 to -1\n            // dx = +2 --> move lines 3,2 to -1,-2\n            // dx = +3 --> move lines 3,2,1 to -1,-2,-3\n            //\n            // always add/sub 4\n\n\n            /*\n            idxClipped = idxClipped.map(\n              (row, x) => row.map(\n                ([xPos, yPos], y) => ([\n                  (xPos + dx).mod(4),\n                  (yPos + dy).mod(4),\n                ])\n            ))\n            */\n\n\n            console.log(`move back. moveStep = ${moveStep}`)\n\n            // TODO use dx or dxOut ?\n\n            if (dx !== 0) {\n            //if (dxOut !== 0) {\n\n              const sdx = Math.sign(dx)\n\n              Array.from(Array(Math.abs(dx)).keys())\n              .forEach((ix) => {\n\n                const ix2 = (dx < 0)\n                  ? ((3-ix)-dxSum).mod(4)\n                  : (ix-dxSum).mod(4);\n\n                bodyPosStatic[ix2] = bodyPosStatic[ix2].map(\n                  ([xPos, yPos], y) => ([\n                    xPos - sdx*4*moveStepIntern,\n                    yPos,\n                  ])\n                );\n              });\n\n            }\n\n            if (dy !== 0) {\n\n              const sdy = Math.sign(dy)\n\n              Array.from(Array(Math.abs(dy)).keys()).forEach(\n                (iy) => {\n\n                  const iy2 = (dy < 0)\n                    ? ((3-iy)-dySum).mod(4)\n                    : (iy-dySum).mod(4);\n\n                  //const iy2 = (+1.5-1.5*sdy+iy-dySum).mod(4)\n                  console.dir({iy,iy2,sdy,dySum,dy,dyOut})\n                  //console.log(`iy = ${iy}   iy2 = ${iy2}`)\n                  console.log('bodyPosStatic 2086:')\n                  bodyPosStatic = bodyPosStatic.map(\n                    (col, x) => col.map(\n                      ([xPos, yPos], y) => ([\n                        xPos,\n                        //yPos - ((y === iy2) ? (sdy*4*moveStep) : (0)),\n                        yPos - ((y === iy2) ? (sdy*4*moveStepIntern) : (0)),\n                        //yPos,\n                      ])\n                  ))\n                  console.dir(bodyPosStatic)\n                })\n\n            }\n\n            // TODO add code for dy !== 0\n\n\n\n            /*\n              if (dy > 0) {\n                Array.from(Array(Math.abs(dy)).keys()).forEach(\n                  (iy) => {\n                    //\n                })\n              }\n            */\n\n            /*\n            bodyPosStatic = bodyPosStatic.map(\n              (row, x) => row.map(\n              ([xPos, yPos], y) => {\n                return [\n                  xPos.mod(4*moveStep),\n                  yPos.mod(4*moveStep),\n                ]\n            }))\n            */\n\n          })\n        }\n\n\n        // wait for animation, disable CSS transition\n\n        // TODO dynamic, wait only as short as needed\n        //   also, cancel old timeout when moving fast\n        \n        if (moveEndTimer) {\n          clearTimeout(moveEndTimer)\n        }\n\n        moveEndTimer = setTimeout(() => {\n          doAnimateMoves = false\n\nconsole.log(`doAnimateMoves is`, doAnimateMoves);\n\n          // snap background pattern\n          moveEndTimer = null\n        }, 3*tweenDurShort)\n\n        /*\n        promiseTimeout(3*tweenDurShort)\n        .then(() => {\n          //\n        })\n        */\n\n      //})\n    })\n  } // end function moveBodies\n\n\n\n\n\n  function flipX() { flipBodies(1, 0); }\n\n  function flipY() { flipBodies(0, 1); }\n\n  function flipD() { flipBodies(1, 0, 1); }\n  /* flip diagonal */\n  // quickfix via (angle - 1) + flipX ?\n\n  function flipA() { flipBodies(0, 1, 1); }\n  /*TODO flip anti-diagonal */\n\n  let transform_rotate = null; // set later in handleWindowLoad\n\n\n  function flipBodies(dxOut, dyOut, angleBias=0) {\n\n    doAnimateMoves = true;\n\nconsole.log(`flipBodies: doAnimateMoves is`, doAnimateMoves);\n\n    // set new flip state\n    flipOut = [\n      flipOut[0] * (dxOut ? -1 : 1),\n      flipOut[1] * (dyOut ? -1 : 1),\n    ];\n\n    //console.log(`flipBodies(${dxOut}, ${dyOut})`)\n\n    // compensate rotation\n    //angle_id = ((angle[0]/rotateStep)|0).mod(8)\n\n    const angle_id_b = angle_id + angleBias;\n\n    const m = moveMatrixFromAngle[angle_id_b];\n    const [dx, dy] = productMatrixVector(m, [dxOut, dyOut]);\n\n\n\n    console.log(`flipBodies   d ${dx} ${dy}   dOut ${dxOut} ${dyOut}   angle ${angle_id_b}`);\n    console.log(`flipBodies old flipIn ${flipIn[0]} ${flipIn[1]} ${flipIn[2]} ${flipIn[3]}`);\n\n\n\n    if (1) {\n\n      let get_xPos = null;\n      let get_yPos = null;\n\n      if (angle_id_b % 2 == 0) {\n        // even angle\n        // flip along row or column\n        get_xPos = (dx !== 0) ? (\n\n          // FIXME change 3 to dynamic value\n          //(xPos, yPos) => 3*moveStep - xPos // flipX\n          (xPos, yPos) => (3-2*dxSum)*moveStep - xPos // flipX\n        \n        ) : (\n          (xPos, yPos) => xPos // no change\n        );\n        \n        get_yPos = (dy !== 0) ? (\n\n          // FIXME change 3 to dynamic value\n          (xPos, yPos) => (3-2*dySum)*moveStep - yPos // flipY\n\n        ) : (\n          (xPos, yPos) => yPos // no change\n        );\n\n\n\n        // set flip state\n        // to flip pattern [etc?]\n\n        // TODO remove?\n\n        flipIn = [\n          flipIn[0] * (dx ? -1 : 1),\n          flipIn[1] * (dx ? -1 : 1),\n          flipIn[2] * (dy ? -1 : 1),\n          flipIn[3] * (dy ? -1 : 1),\n        ];\n      }\n\n      else {\n        // odd angle\n        // flip along diagonal\n\n        // FIXME\n        // wrong at angle == 1\n\n        get_xPos = (dx === dy) ? (\n\n          // FIXME change 3 to dynamic value\n          (xPos, yPos) => (3-2*dxSum)*moveStep - yPos // anti diagonal\n\n        ) : (\n          (xPos, yPos) => yPos // diagonal\n        );\n        \n        get_yPos = (dx === dy) ? (\n\n          // FIXME change 3 to dynamic value\n          (xPos, yPos) => (3-2*dySum)*moveStep - xPos // anti diagonal\n\n        ) : (\n          (xPos, yPos) => xPos // diagonal\n        );\n\n        /*\n        if (angle_id_b == 1) {\n          flipIn = [\n            flipIn[0] * (dx ? -1 : 1),\n            flipIn[1] * (dx ? -1 : 1),\n            flipIn[2] * (dy ? -1 : 1),\n            flipIn[3] * (dy ? -1 : 1),\n          ]\n        }\n        else {\n        */\n        \n        // FIXME?\n        flipIn = [\n          flipIn[1] * ((dx === dy) ? -1 : 1),\n          flipIn[0] * ((dx === dy) ? -1 : 1),\n          flipIn[3] * ((dx === dy) ? -1 : 1),\n          flipIn[2] * ((dx === dy) ? -1 : 1),\n        ];\n\n        /*\n        pathosPos = [\n          pathosPos[2],\n          pathosPos[3],\n          pathosPos[0],\n          pathosPos[1],\n        ]\n        */\n        \n        promiseTimeout(0.5*tweenDurShort).then(() => {\n          pathosPos = pathosPos.reverse();\n        });\n\n      }\n\n      // flip bodies .... finally\n\n      // set all body positions. slow cos many small moves\n      console.log('bodyPosStatic 2294:')\n      bodyPosStatic = bodyPosStatic.map(\n        (row, x) => row.map(\n        ([xPos, yPos], y) => {\n          return [\n            get_xPos(xPos, yPos),\n            get_yPos(xPos, yPos),\n          ];\n      }));\n      console.dir(bodyPosStatic);\n\n    } // end function flipBodies\n\n\n\n\n\n\n    // FIXME wrong flip vector on the first flip, after other flip\n    //   other flip = different flip direction\n    //   sample: flip.... x x y x y x y\n    //   sample: flip.... y y x y x y x\n    //   problem is:\n    //     patternRotate3D = 1,0,0,0\n    //     patternRotate3D = 0,1,0,180\n    //                       ^^^^^ ^^^\n    //                      vector angle\n    //   this \"double change\" of vector and angle\n    //   will produce a bad flip\n    //   simple solution:\n    //     overlay four flip containers:\n    //     horizontal vertical diagonal antidiagonal\n    //   risky solution:\n    //     in CSS, chain four transforms\n    //     or only two? scale + rotate3D\n\n\n    let angle_id_b_m4 = (dxOut) ? (\n      angle_id_b % 4) : (\n      (angle_id_b + 2) % 4);\n\n\n    const v = rotVecFromAngle[angle_id_b_m4];\n    //console.log(`v ${v}   angle ${angle_id_b_m4}`)\n\n\n    // flip via rotate3d\n    /*\n    transform_rotate.style.transform += 'rotate3d('+v+',0,180deg)';\n    */\n\n\n    // TODO better\n    /*\n    Array.from(document.getElementsByClassName('body_wrapper')).forEach(e => {\n      e.style.transform += 'rotate3d('+v+',0,-180deg)';\n    })\n    */\n\n\n    if (angle_id_b % 2 == 0) {\n      rotVecFromAngle = [\n        rotVecFromAngle[0],\n        rotVecFromAngle[3],\n        rotVecFromAngle[2],\n        rotVecFromAngle[1],\n      ];\n    }\n    else {\n      rotVecFromAngle = [\n        rotVecFromAngle[2],\n        rotVecFromAngle[1],\n        rotVecFromAngle[0],\n        rotVecFromAngle[3],\n      ];\n    }\n\n    // wait for animation, disable CSS transition\n    // TODO allow to cancel promise / clear timeout\n    promiseTimeout(tweenDurShort)\n    .then(() => {\n      doAnimateMoves = false;\n    });\n\n  }\n\n\n\n  var fotoOverlayHide = true;\n\n  function editFoto (num) {\n    // TODO show overlay to edit foto\n    //fotoOverlayHide = false\n    alert(`edit foto for num = ${num}`);\n  }\n\n\n\n  // TODO use `event.key` instead of `event.keyCode`\n  //   = avoid magic numbers\n  const keyHandler = {\n\n    /*\n      38: moveUp, // arrow up\n      40: moveDown, // arrow down\n      37: moveLeft, // arrow left\n      39: moveRight, // arrow right    \n\n      69: moveUp, // e\n      68: moveDown, // d\n      83: moveLeft, // s\n      70: moveRight, // f\n    */\n\n    38: (e=>e.shiftKey?rotateRight():moveUp()), // arrow up\n    40: (e=>e.shiftKey?flipY():moveDown()), // arrow down\n    37: (e=>e.shiftKey?rotateLeft():moveLeft()), // arrow left\n    39: (e=>e.shiftKey?flipX():moveRight()), // arrow right    \n\n    69: (e=>e.shiftKey?flipY():moveUp()), // e\n    68: (e=>e.shiftKey?flipY():moveDown()), // d\n    83: (e=>e.shiftKey?flipX():moveLeft()), // s\n    70: (e=>e.shiftKey?flipX():moveRight()), // f\n\n\n\n    87: rotateLeft, // w\n    82: rotateRight, // r\n\n    65: flipX, // a\n    71: flipY, // g\n\n    76: changeDark, // l\n    77: changeMenu, // m\n\n    78: (e=>e.shiftKey?focusName():null), // shift + n\n    //71: (e=>e.shiftKey?focusGroup():null), // shift + g\n\n    //TODO let focus name/group format with shift+N or shift+G\n    // --> select whole text\n\n    187: (e=>zoomBodies(+1)), // +\n    189: (e=>zoomBodies(-1)), // -\n  };\n\n\n\n  // handle keyboard input\n  function handleKeydown(event) {\n    if (\n         event.target.nodeName === 'INPUT'\n      || event.ctrlKey\n      || event.altKey\n      || event.metaKey\n      || event.isComposing // TODO verify - src https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event\n    ) {\n      return;\n    }\n    console.log('handleKeydown');\n    console.dir(event);\n    /*\n    event.ctrlKey\n    event.altKey\n    event.metaKey\n    event.shiftKey\n    */\n\n    try {\n      console.log(`event key ${event.key} keyCode ${event.keyCode}`);\n      keyHandler[event.keyCode](event);\n      event.preventDefault();\n    }\n    catch (e) {\n      console.log(`ignore event key ${event.key}`);\n      throw(e);\n    }\n\n  }\n\n\n\n  //let yRange = preval(() => Array.from(Array(5).keys()))\n  //let xRange = preval(() => Array.from(Array(5).keys()))\n\n  /* todo make preval accept variables = aware of \"init environment\"\n    let matrix = preval(() => {\n        const alchi = require('./src/alchi.cjs')\n        const origin = 0b0000\n        return alchi.ac_xor(origin, alchi.ac_bits_asmg_11)\n    })\n  */\n\n  let matrix = alchi.ac_xor(origin, alchi.ac_bits_asmg_11);\n  // now origin is at position (1, 1) = index 5\n  // rotate + flip matrix to the \"normal view\"\n  //   fire  water  =     top-left     top-right\n  //   air   earth  =  bottom-left  bottom-right\n  \n  const matrixIdxRotateRight = [\n    12,  8,  4,  0,\n    13,  9,  5,  1,\n    14, 10,  6,  2,\n    15, 11,  7,  3,\n  ];\n\n  const matrixIdxRotateLeft = [\n     3,  7, 11, 15,\n     2,  6, 10, 14,\n     1,  5,  9, 13,\n     0,  4,  8, 12,\n  ];\n\n  const matrixIdxFlipD = [\n     0,  4,  8, 12,\n     1,  5,  9, 13,\n     2,  6, 10, 14,\n     3,  7, 11, 15,\n  ];\n\n  const matrixIdxFlipA = [\n    15, 11,  7,  3,\n    14, 10,  6,  2,\n    13,  9,  5,  1,\n    12,  8,  4,  0\n  ];\n\n  const matrixIdxFlipX = [\n     3,  2,  1,  0,\n     7,  6,  5,  4,\n    11, 10,  9,  8,\n    15, 14, 13, 12,\n  ];\n\n  const matrixIdxFlipY = [\n    12, 13, 14 ,15,\n     8,  9, 10, 11,\n     4,  5,  6,  7,\n     0,  1,  2,  3,\n  ];\n\n  const origin_sm = (origin & 0b0110) >> 1;\n  switch(origin_sm) {\n    case 0:\n      // air --> rotate 90deg ccw\n      matrix = matrix.map(\n        (val, idx, matrix) => matrix[\n          matrixIdxRotateLeft[idx]\n      ]);\n      break;\n    case 1:\n      // fire --> no change\n      break;\n    case 2:\n      // earth --> rotate 180deg\n      matrix = matrix.reverse();\n      break;\n    case 3:\n      // water --> rotate 90deg cw\n      matrix = matrix.map(\n        (val, idx, matrix) => matrix[\n          matrixIdxRotateRight[idx]\n      ]);\n      break;\n  }\n\n  if (origin_sm == 0 || origin_sm == 3) {\n    // air or water\n    if ((matrix[0] & 0b0110) >> 1 == 2) { // 2 == earth\n      matrix = matrix.map(\n        (val, idx, matrix) => matrix[\n          matrixIdxFlipA[idx]\n        ]);\n    }\n  } else {\n    // fire or earth\n    if ((matrix[3] & 0b0110) >> 1 == 0) { // 0 == air\n      matrix = matrix.map(\n        (val, idx, matrix) => matrix[\n          matrixIdxFlipD[idx]\n        ]);\n    }\n  }\n\n  //let groupFormat = 'A+S+M+G'\n  //let groupFormat = 'G+M+S'\n  // TODO use descriptins as tooltip / title / status bar text\n  let groupFormatPresets = {\n    'M+S': 'same ( Move + Sense ) = same \"element\" [4 groups]',\n    'GA': 'same ( Gend x Age ) = same \"body\" [2 groups]',\n    'G+A': 'same ( Gend + Age )',\n    'GMA+GSA': 'same ( Gend x Move x Age + Gend x Sense x Age ) = same \"sleep\" [4 groups]',\n    'GM+SA': 'same ( Gend x Move + Sense x Age ) = same \"wake\" [4 groups]',\n    'MS': 'same ( Move x Sense ) = same \"class\" [2 groups]',\n    'GMSA': 'same ( Gend x Move x Sense x Age ) = same \"wake\" [2 groups]',\n    'M': 'same Move [2 groups]',\n    'S': 'same Sense [2 groups]',\n    'GM': 'same ( Gend x Move ) = same \"gender congruence\" [2 groups]',\n    'SA': 'same ( Sense x Age ) = same \"age congruence\" [2 groups]',\n    'G+M+S+A': 'TODO 16 groups',\n    '+': 'no groups',\n  };\n\n  let groupFromN;\n  let numGroups;\n  let temp_groupFromN;\n\n  const colorTable = preval(({baseDir}) => {\n    const colorTable = require(baseDir+'/src/colorTable.cjs')\n    return colorTable.colors\n  });\n\n  let groupColor = []; //  = colorTable[numGroups]\n  let groupColorNode = [];\n  \n  //let numSmOfAg = []\n\n\n\n  // map between \"sense + move\" and \"age + gender\"\n  const sagm_of_asmg = Array.from(Array(16).keys()).map(\n    (asmg) => (\n      ((asmg & 0b0100) << 1) |\n      ((asmg & 0b1000) >> 1) |\n      ((asmg & 0b0001) << 1) |\n      ((asmg & 0b0010) >> 1)\n    )\n  );\n\n      /*\n      const mgas = (\n        ((asmg & 0b0010) << 2) |\n        ((asmg & 0b0001) << 2) |\n        ((asmg & 0b1000) >> 2) |\n        ((asmg & 0b0100) >> 2)\n      )\n      return mgas\n\n      const mags = (\n        ((asmg & 0b0010) << 2) |\n        ((asmg & 0b1000) >> 1) |\n        ((asmg & 0b0001) << 1) |\n        ((asmg & 0b0100) >> 2)\n      )\n      return mags\n      */\n\n\n  function setLocale(l) {\n    locale = l;\n    alchi.setLocale(l);\n\n    change_nameFormat();\n  }\n\n\n  const valColor = {\n\n    // light-orange, dark-turc\n    a: [['#ff8409', '#000000'], ['#008080', '#ffffff']],\n    s: [['#ff8409', '#000000'], ['#008080', '#ffffff']],\n\n    // light-lime, dark-purple\n    m: [['#a8e000', '#000000'], ['#800080', '#ffffff']],\n    g: [['#a8e000', '#000000'], ['#800080', '#ffffff']],\n\n    // light-yellow, red, green, dark-blue\n    ag: [['#ffff00', '#000000'], ['#c00000', '#ffffff'], ['#00c000', '#000000'], ['#000080', '#ffffff']],\n    sm: [['#ffff00', '#000000'], ['#c00000', '#ffffff'], ['#00c000', '#000000'], ['#000080', '#ffffff']],\n    \n    // from colorTable.cjs\n    //ag: ['#ffff55', '#aa0000', '#55ff55', '#0000aa'],\n    //sm: ['#ffff55', '#aa0000', '#55ff55', '#0000aa'],\n\n    // default colors\n    //ag: ['#ffff00', '#ff0000', '#00c000', '#0000ff'],\n    //sm: ['#ffff00', '#ff0000', '#00c000', '#0000ff'],\n  };\n\n  groupColor = colorTable[numGroups];\n\n\n  function change_groupFormat () {\n    //console.log('groupFormat has changed')\n    temp_groupFromN = alchi.tableGroupFromN(groupFormat)\n    if (temp_groupFromN && temp_groupFromN[16] !== 0) {\n      console.log('groupFormat is valid')\n      groupFromN = temp_groupFromN\n      numGroups = groupFromN[16]\n      groupColor = colorTable[numGroups]\n\n\n    }\n  }\n\n  change_groupFormat() // init\n\n\n\n  //TODO add titles/tooltips/descriptors to name/group formats\n\n  let nameFormatPresets = {\n    'e/b': 'Element + Body. split in Top + Bottom',\n    // TODO swap element <> body, to body | element\n    's/m|a/g': 'Sense / Move | Age / Gender = Element | Body. split in four',\n    'smagxshape': 'Sense Move Age Gender + shape',\n    'e/bxinout': 'Element / Body = In / Out',\n    'e/bxfoto': 'Element / Body x Foto',\n    'be': 'Body | Element',\n    //'bexfoto': 'Body | Element \\\\ Foto',\n    // TODO swap element <> body, to body | element\n    'ebxorbit': 'Element | Body x orbit = Out ( In In ) Out',\n    // TODO swap element <> body, to body | element\n    'ebxshape': 'Element | Body x shape',\n    // TODO swap element <> body, to body | element\n    's/e/m|a/b/g': 'Sense / Element / Move | Age / Body / Gender. split in six',\n    'ep': 'Element + Pathos: Element',\n    'cg-jung': 'CG Jung. Element = function, pathos = \"introvert\" or \"extravert\"',\n    'zodiac': 'Zodiac signs of astrology. Element = mutable signs, Neurotic pathos = cardinal signs, Psychotic pathos = fixed signs',\n    'mbti': 'Myers Briggs Type Indicator. AB = element, CD = gender + age',\n    'moore-gillette': 'Four Archetypes (Robert Moore, Douglas Gillette)',\n    '(ms)p': 'Move + Sense + Pathos: Move + Sense',\n    'a/e/g': 'Age / Element / Gender',\n    'a/s/m/g': 'Age / Sense / Move / Gender. split in four',\n    'a/s/m/gxbody': 'Age / Sense / Move / Gender. in terms of body',\n    'e': 'Element = Move + Sense',\n    'e|b': 'Element + Body. split in Left + Right',\n    'be': 'Body + Element. body = family role',\n    '(gea)pe': 'Gender + Element + Age + Pathos: Element',\n    'epm': 'Element + Pathos: Move',\n    'eps': 'Element + Pathos: Sense',\n    'gmsa': 'Gender + Move + Sense + Age',\n    'shape': 'body shape = Age / Gender / Sense / Move = top down',\n    'ge': 'Gender + Element',\n    'ea': 'Element + Age',\n    '(ms)': 'Move + Sense = Element',\n    'ga': 'Gender + Age = Outside',\n    'gm': 'Gender + Move = Lower',\n    'sa': 'Sense + Age = Upper',\n    'x': 'no names',\n  }\n\n\n  function change_nameFormat () {\n    const temp_nameFromN = alchi.tableNameFromN(nameFormat)\n    if (temp_nameFromN) {\n      nameFromN = temp_nameFromN\n      nameParts = nameFromN[0].length\n      console.log(`nameFormat \"${nameFormat}\" is valid. nameParts: ${nameParts}. nameFromN:`, nameFromN)\n    } else {\n\n      // special case\n      if (nameFormat === 'shape') {\n        showPathos = false\n      }\n\n      return\n      // dont parse pathosFormat from invalid nameFormat\n    }\n\n    const temp_pathosFromSM = alchi.tablePathosFromSM(nameFormat)\n    //console.log('temp_nameFromN = '+temp_nameFromN)\n    if (temp_pathosFromSM) {\n      const pathosFormat = nameFormat.split('p')[1] || nameFormat\n      if (pathosFormat == 's') {\n        anim_dash_factor_key = 'ei'\n      }\n      else if (pathosFormat == 'm') {\n        anim_dash_factor_key = 'np'\n      }\n      showPathos = true\n      pathosFromSM = temp_pathosFromSM\n      console.log('nameFormat \"'+nameFormat+'\" has pathosFormat. pathosFromSM = '+pathosFromSM)\n    } else {\n      showPathos = false\n    }\n  }\n\n  change_nameFormat() // init\n\n\n\n  // TODO use CSS transition? possible with CSS variable?\n\n  let lightSteps = preval(() => {\n    const N = 8\n    return [...Array.from(Array(256/N).keys())\n      .map((idx) => [\n        '#'+(idx*N).toString(16).padStart(2, '0').repeat(3),\n        '#'+(255-idx*N).toString(16).padStart(2, '0').repeat(3),\n      ]),\n      ['#ffffff', '#000000']]\n  })\n\n  let col_rgba33 = ['255,255,255,0.33', '0,0,0,0.33']\n  //let col_rgb = ['rgba(1,1,1, 0.33)', 'rgba(0,0,0, 0.33)']\n  \n\n  function changeAnim (event) {\n\n    doAnimateDash = !doAnimateDash\n\n    if (doAnimateDash === false) {\n      // stop timer\n      animateDashOff()\n    }\n    else {\n      // start timer\n      animateDashStep()\n    }\n\n    /*\n      // event.target is one of: use, svg, button\n      let button = event.target\n      while (button.nodeName !== 'BUTTON') {\n        button = button.parentNode\n      }\n\n      const svg = button.childNodes[0]\n      const title = svg.childNodes[0]\n      const use = svg.childNodes[1]\n      const grid = document.getElementById('grid')\n\n      if (use.getAttribute('xlink:href') == '#stop') {\n        // stop animation\n        grid.classList.remove('animate')\n        title.innerHTML = 'Animation Start'\n        use.setAttribute('xlink:href', '#play')\n      }\n      else {\n        // start animation\n        grid.classList.add('animate')\n        title.innerHTML = 'Animation Stop'\n        use.setAttribute('xlink:href', '#stop')\n      }\n    */\n  }\n\n\n\n  // https://stackoverflow.com/questions/376373/pretty-printing-xml-with-javascript/49458964#49458964\n\n  function formatXML(xml, tab = '\\t', nl = '\\n') {\n    let formatted = '', indent = '';\n    const nodes = xml.slice(1, -1).split(/>\\s*</);\n    if (nodes[0][0] == '?') formatted += '<' + nodes.shift() + '>' + nl;\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (node[0] == '/') indent = indent.slice(tab.length); // decrease indent\n      formatted += indent + '<' + node + '>' + nl;\n      if (node[0] != '/' && node[node.length - 1] != '/' && node.indexOf('</') == -1) indent += tab; // increase indent\n    }\n    return formatted;\n  }\n\n\n\n  var exportOverlayHide = true;\n  \n  function exportSvg () {\n    \n    console.log('export svg');\n    \n    // get svg element\n    var svg = document.getElementById(\"content\");\n\n    // get svg source\n    var serializer = new XMLSerializer();\n    var source = serializer.serializeToString(svg);\n\n    // add name spaces\n    if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n        source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n    }\n    if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n        source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n    }\n\n    // add xml declaration\n    source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n\n    // patch svg viewBox\n    source = source.replace(\n      ' viewBox=\"0 0 2400 2400\" ',\n      ' viewBox=\"800 800 1600 1600\" '\n    );\n\n    // indent\n    source = formatXML(source, '  ');\n\n    // remove svelte classes\n    source = source.replace(/class=\"(?:(.*?) )?svelte-.*?\"/g, 'class=\"$1\"').replace(/class=\"\"/g, '');\n\n    // remove darkreader attributes\n    source = source.replace(/data-darkreader-inline-.+?=\".*?\"/g, '');\n\n    // remove darkreader styles\n    source = source.replace(/--darkreader-inline-.+?:.*?;/g, '');\n\n    //convert svg source to URI data scheme.\n    var url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n\n    //window.location = url;\n    //set url value to a element's href attribute.\n    document.getElementById(\"export-link\").href = url;\n    //you can download svg file by right click menu.\n\n    exportOverlayHide = false;\n  }\n\n\n  function changeDark () {\n    console.log('changeDark')\n    isDark = !isDark\n    colors2dyn.set(colors2 = colorTable[2][( isDark|0 )])\n\n    // for transition, set alpha to zero\n    col_rgba33 = ['0,0,0,0', '0,0,0,0']\n\n    promiseTimeout(0.5*tweenDurLong).then(() => {\n      changeStyle()\n    })\n    \n    promiseTimeout(tweenDurLong).then(() => {\n      col_rgba33 = isDark ? ['255,255,255,0.33', '0,0,0,0.33'] : ['0,0,0,0.33', '255,255,255,0.33']\n    })\n\n  }\n\n  let colors2 = colorTable[2][isDark|0] // [frontColor, backColor]\n  let colors2dyn = tweened(colors2, {\n    duration: tweenDurLong,\n    easing: tweenFunc,\n    interpolate: (from, to) => {\n      lightSteps.reverse() // in place\n      const N = lightSteps.length\n      return (t) => {\n        //console.log(t+' '+lightSteps[(t*N)|0])\n        return lightSteps[(t*N)|0]\n      }\n      //console.log(`from ${from} to ${to} t ${t}`)\n    }\n  })\n\n  let menuSize = [-1, -1]\n\n\n  function changeMenu (/*event*/) {\n\n    // event.target is one of:\n    // undefined, svg, use, button\n    //console.log(`event.target.nodeName = ${event.target.nodeName}`)\n\n    const button = document.getElementById('menuBtn')\n\n    const menu = button.parentNode.parentNode\n\n    const h_btn = button.clientHeight\n    const w_btn = button.clientWidth\n\n    console.log(`menu.clientHeight = ${menu.clientHeight}`)\n    console.log(`button.clientHeight = ${button.clientHeight}`)\n    console.log(`menuSize = ${menuSize}`)\n\n    // TODO move styles to CSS classes\n    // add css class \"collapsing\"\n\n    if (menu.classList.contains('collapsing')) {\n      return\n    }\n\n    // TODO move all this to html?\n\n    if (!menu.classList.contains('collapsed')) {\n      // TODO exact numbers?\n      // +100 to compensate padding\n      \n      menu.classList.toggle('collapsing')\n      \n      // remember menu size\n      //menuSize = [menu.clientWidth, menu.clientHeight]\n      menuSize = [menu.style.width, menu.style.height]\n      \n      // collapse menu\n      menu.style.width = 0 // start animation\n      // TODO exact numbers?\n      // +20 to compensate padding\n\n      menu.style.overflow = 'hidden' // hide scrollbars\n      \n      // hide body after collapse\n      // so we dont focus the buttons with tab key\n      promiseTimeout(tweenDurShort).then(()=>{\n        \n        menu.classList.toggle('collapsed')\n\n        menu.style.height = (h_btn + 4)+'px'\n        menu.style.padding = 0\n        \n        button.style.borderLeft = 'none'\n        button.style.borderTop = 'none'\n        button.style.margin = 0\n\n        // expand button\n        menu.style.width = (w_btn + 4)+'px' // start animation\n        \n        promiseTimeout(tweenDurShort).then(()=>{\n          menu.classList.toggle('collapsing')\n          isMenuHidden = true\n        })\n      })\n    }\n\n    else {\n\n      // collapse button\n      menu.style.width = 0 // start animation\n      menu.classList.toggle('collapsing')\n\n      promiseTimeout(tweenDurShort).then(()=>{\n\n        button.style.borderLeft = ''\n        button.style.borderTop = ''\n        button.style.margin = '4px'\n\n        // expand menu\n        //body.style.display = ''\n        // expand only part of the menu - scroll the rest\n        //expand.style.height = (0.5*content.clientHeight)+'px'\n        menu.classList.toggle('collapsing')\n        menu.classList.toggle('collapsed')\n\n        menu.style.padding = '12px'\n\n        //menu.style.height = menuSize[1]+'px'\n        menu.style.height = menuSize[1]\n\n        //menu.style.width = menuSize[0]+'px' // start animation\n        menu.style.width = menuSize[0] // start animation\n        \n        promiseTimeout(tweenDurShort).then(()=>{\n          //menu.style.overflow = 'auto' // show scrollbars\n          isMenuHidden = false\n        })\n      })\n\n    }\n\n  }\n\n\n  function childByClassPrefix(parent, _class) {\n    for (let child of Array.from(parent.childNodes)) {\n      //if (child.classList.contains(_class)) {\n      //console.log(`childByClassPrefix child.nodeName = ${child.nodeName}`)\n      //console.log(`childByClassPrefix child.className = ${child.className}`)\n      if (child.className && child.className.startsWith(_class)) {\n        return child\n      }\n    }\n    return null\n  }\n\n  // TODO scroll only the body, keep head fixed\n  //   show scrollbar below the [ + ] button\n  // TODO expand only one menu\n  //   when expanding both menus, close the old menu\n  /* FIXME clicking the button too fast will hide the menu body, and confuse +/- */\n  function changeExpand (event) {\n    const button = event.target\n    console.log(`changeExpand event.target.nodeName = ${event.target.nodeName}`)\n    const head = button.parentNode\n    const content = head.parentNode\n    const expand = content.parentNode\n    const body = childByClassPrefix(content, 'body')\n    //const body = content.childNodes[2] // 1 = white space\n\n    console.log('body display = '+body.style.display)\n\n    //TODO precise numbers\n    if (body.clientHeight > 0) {\n      // collapse\n      button.innerHTML = '+'\n      body.style.overflow = 'hidden'\n\n      // remember height\n      body.setAttribute('data-height', body.style.height)\n      \n      body.style.height = 0 // start animation\n\n      // hide body after collapse\n      // so we dont focus the buttons with tab key\n      promiseTimeout(tweenDurShort).then(()=>(\n        body.style.display = 'none'\n        //body.style.overflow = 'hidden' // remove scrollbar\n      ))\n    }\n    else {\n      // expand\n      button.innerHTML = '&ndash;'\n      body.style.display = ''\n      // expand only part of the menu - scroll the rest\n      //expand.style.height = (0.5*content.clientHeight)+'px'\n      //body.style.height = (4.4*head.clientHeight)+'px' // start animation\n      body.style.height = body.getAttribute('data-height')\n      //body.style.overflow = 'auto' // add scrollbar //TODO static/always?\n      promiseTimeout(tweenDurShort).then(()=>(\n        body.style.overflow = 'scroll-y'\n      ))\n    }\n  }\n\n  function setNamePreset({target}){\n    nameFormat = target.innerHTML\n    change_nameFormat()\n  }\n\n  function setGroupPreset({target}){\n    groupFormat = target.innerHTML\n    change_groupFormat()\n  }\n\n  let styleRuleIdx = -1\n\n  // workaround: scrollbars dont respond to CSS variables\n  function changeStyle(){\n    \n    console.log('changeStyle')\n\n    const sheet = window.document.styleSheets[0];\n    console.log('rules len = '+sheet.cssRules.length)\n    if (styleRuleIdx !== -1) {\n      sheet.deleteRule(styleRuleIdx)\n    }\n    // '%23' == urlencode( '#' )\n    // # is url fragment marker\n    // https://codepen.io/gunnarbittersmann/pen/BoovjR\n    const fgEsc = '%23'+(colors2[0].substring(1))\n    //TODO preval this string to one line\n    // scrollbar thumb background image\n    styleRuleIdx = sheet.insertRule([\n      '.scroll::-webkit-scrollbar-thumb',\n      '{background: center no-repeat url(',\n      \"'data:image/svg+xml;utf8,\",\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" ',\n      'viewBox=\"0 0 24 24\" x=\"0px\" y=\"0px\" ',\n      'height=\"24px\" width=\"24px\">',\n      '<g stroke=\"'+fgEsc+'\" stroke-width=\"1\">',\n      '<line x1=\"4\" y1=\"8\" x2=\"20\" y2=\"8\" />',\n      '<line x1=\"4\" y1=\"16\" x2=\"20\" y2=\"16\" />',\n      \"</g></svg>') !important}\",\n    ].join(''))\n  }\n\n  // TODO refactor\n  let moveStartEvent = { clientX: 0, clientY: 0 }\n  let moveEndEvent = { clientX: 0, clientY: 0 }\n  let moveEvent = { clientX: 0, clientY: 0 }\n  let rotateEventRight = { clientX: 0, clientY: 0 }\n  let rotateEventRightStart = { clientX: 0, clientY: 0 }\n  let rotateEventRightEnd = { clientX: 0, clientY: 0 }\n  let rotateEventLeft = { clientX: 0, clientY: 0 }\n  let rotateEventLeftStart = { clientX: 0, clientY: 0 }\n  let rotateEventLeftEnd = { clientX: 0, clientY: 0 }\n\n  /* the zero-cpu solution ....\n    cos ALL other solutions\n    need too much cpu/gpu work */\n  let animateDashTime = 1000\n  let animateDashTimer = null\n\n  function animateDashStep(){\n    anim_dash_offset += 5\n    animateDashTimer = setTimeout(\n      animateDashStep,\n      animateDashTime\n    )\n  }\n\n  function animateDashOff(){\n    clearTimeout(animateDashTimer)\n    animateDashTimer = null\n  }\n\n\n\n  //let transform_matrix = null\n\n  let grid_elem = null\n  let transform_translate = null\n\n  function handleWindowLoad(){\n\n    move_container = document.getElementById(\n      'transform-move')\n    console.log(`move_container = ${move_container}`)\n\n    transform_rotate = document.getElementById('transform-rotate');\n    window.transform_rotate = transform_rotate; // make global\n\n    /**/\n    // moved: add keydown handler to control-* elements\n    //let keydown_element = document.getElementById('transform-mask');\n    let keydown_element = document;\n    keydown_element.addEventListener('keydown', handleKeydown);\n    console.log('done adding keydown handler to '+keydown_element.id)\n    /**/\n\n    // init Rematrix\n\n    if (0) {\n      transform_matrix = Rematrix.fromString(\n        getComputedStyle(move_container).transform);\n    }\n\n\n\n    if (doAnimateDash) {\n      // start dash animation\n      animateDashStep()\n    }\n\n\n\n    // TODO auto-zoom to fit window?\n\n    // hide menu on start\n    // TODO avoid animation on initial hide\n    if (isMenuHidden) {\n      changeMenu()\n    }\n\n\n\n    // TODO remove? what is the right position? clientXY? pageXY?\n    const key_event_x = 'clientX', key_event_y = 'clientY'\n\n    /*\n      const key_event_x = 'screenX', key_event_y = 'screenY'\n      const key_event_x = 'pageX', key_event_y = 'pageY'\n      const key_event_x = 'offsetX', key_event_y = 'offsetY'\n      const key_event_x = 'movementX', key_event_y = 'movementY'\n    */\n\n\n\n    // custom mousemove handlers\n    if (1) {\n\n      let active_move_listeners = [\n        // [element, event, callback]\n      ];\n\n      function remove_all_listeners(event) {\n        //console.log(`remove_all_listeners ${active_move_listeners.length}`)\n        //console.dir(event)\n        active_move_listeners.forEach(\n          ([element, event, callback]) => (\n            element.removeEventListener(event, callback, false)\n          ))\n        active_move_listeners = []\n      }\n\n      function add_move_listener(element, event, callback) {\n        element.addEventListener(event, callback, false)\n        active_move_listeners.push(\n          [element, event, callback]\n        )\n      }\n\n      function remove_move_listener(element, event, callback) {\n        element.removeEventListener(event, callback, false)\n        active_move_listeners.some(\n          ([e, v, c], idx) => {\n            if (element === e && event === v) {\n              active_move_listeners.pop(idx)\n              return false // stop loop\n            }\n          }\n        )\n      }\n\n\n\n      grid_elem = document.getElementById('grid');\n\n      transform_translate = document.getElementById('transform-translate');\n      \n\n\n      // mousemove handlers\n\n      /*\n      ;['mouseleave'].forEach(e => (\n        grid_elem.addEventListener(\n          e, remove_all_listeners, false)\n      ))\n      */\n      \n      // global events\n      // touch events [except touchstart] are always global --> target == document\n      ['mouseup', 'mouseleave', 'touchend', 'touchleave', 'touchcancel'].forEach(v => {\n        //;['mouseup'].forEach(v => {\n        document.addEventListener(v, () => {\n            \n            if (!isMoving) {\n              return;\n            }\n\n            console.log(`${v} document. eventTarget = ${eventTarget && eventTarget.id}`)\n            \n            // quick + dirty\n            //if (v[0] === 't') {\n                \n            if (eventTarget !== null\n              && eventTarget !== document) {\n\n              const e2 = document.createEvent('MouseEvent')\n\n              // touchend event has no position\n              // so we use position of last touchmove event\n\n              e2.initMouseEvent(\n                'mouseup', // type\n                false, // bubbles\n                true, // cancelable\n                /*elem.ownerDocument.defaultView*/ null, // view\n                0, // detail\n                moveEvent.screenX, // screenX\n                moveEvent.screenY, // screenY\n                moveEvent.clientX, // clientX\n                moveEvent.clientY, // clientY\n                false, // ctrl\n                false, // alt\n                false, // shift\n                false, // meta\n                0, // button\n                null // relatedTarget\n              )\n\n              // touchend.target == document\n              // so we use touchstart.target\n              //console.dir(eventTarget)\n              if (eventTarget) {\n                eventTarget.dispatchEvent(e2)\n                eventTarget = null\n              }\n            }\n            //}\n\n            remove_all_listeners()\n\n            isMoving = false\n          }, false);\n      });\n\n      // throttle/debounce mousemove events\n      //   for less precision and better performance\n      //   unthrottled FPS is avg 100, max 125 FPS\n      //   needs way too much CPU power\n      //   around 60% cpu on my old laptop\n      //   and un-usable on my old android phone\n      // 125 FPS =  8 MSPF\n      // 100 FPS = 10 MSPF\n      //  60 FPS = 16 MSPF\n      //  50 FPS = 20 MSPF\n      //  40 FPS = 25 MSPF\n      //  33 FPS = 30 MSPF\n      //  30 FPS = 33 MSPF\n      //  25 FPS = 40 MSPF\n      //  15 FPS = 66 MSPF\n      //const mousemoveFrameTime = 40 // = 25 FPS, real: 18 fps\n      //const mousemoveFrameTime = 30 // = 33 FPS, real: 28 fps\n      //const mousemoveFrameTime = 35 // = 28 FPS, real: 22 fps\n\n      //const mousemoveFrameTime = 32 // = 31 FPS, real: 25 fps\n      const mousemoveFrameTime = 100; // = 10 FPS\n      // TODO expose this to control menu\n\n      // measure FPS\n      let moveCounter = 0;\n      let moveStartTime = 0;\n\n\n\n      const moveListenerMouse = (event) => {\n\n        // update position\n        moveEvent = event\n\n        //console.log(`${event.type} ${event.clientX} ${event.clientY} ${event.target.id}`)\n        //console.dir(event)\n\n        // measure FPS\n        moveCounter += 1\n\n        // disable move handler\n        //;['mousemove'].forEach(v => {\n          //event.target.removeEventListener('mousemove', moveListener, false)\n          //remove_move_listener(grid_elem, 'mousemove', moveListener)\n          //remove_move_listener(event.target, v, moveListener)\n        //})\n        remove_move_listener(document, 'mousemove', moveListenerMouse)\n\n        // wait\n        // TODO in mouseup, cancel promise\n        //   or: only restore listener when still moving\n        promiseTimeout(mousemoveFrameTime).then(() => {\n          \n          // re-enable move handler\n          //['mousemove'].forEach(v => {\n            //event.target.addEventListener('mousemove', moveListener, false)\n            //add_move_listener(event.target, 'mousemove', moveListener)\n            //add_move_listener(grid_elem, 'mousemove', moveListener)\n            //add_move_listener(event.target, v, moveListener)\n          //})\n          if (isMoving) {\n            add_move_listener(document, 'mousemove', moveListenerMouse);\n          }\n        })\n\n        // dont \"bubble\" event to parent nodes\n        //event.stopPropagation()\n\n        //event.preventDefault()\n      };\n\n      const moveListenerTouch = (event) => {\n\n        console.log('moveListenerTouch')\n\n        // update position\n        //const _event = event.touches[0]\n        moveEvent = event.touches[0]\n\n        //console.log(`${event.type} ${_event.clientX} ${_event.clientY} ${event.target.id}`)\n        //console.dir(event)\n\n        // measure FPS\n        moveCounter += 1\n\n        // disable move handler\n        //;['touchmove'].forEach(v => {\n          //event.target.removeEventListener('mousemove', moveListener, false)\n          //remove_move_listener(grid_elem, 'mousemove', moveListener)\n          //remove_move_listener(event.target, v, moveListener)\n        //})\n        remove_move_listener(document, 'touchmove', moveListenerTouch)\n\n        // wait\n        promiseTimeout(mousemoveFrameTime).then(()=>(\n          \n          // re-enable move handler\n          //['mousemove', 'touchmove'].forEach(v => {\n            //event.target.addEventListener('mousemove', moveListener, false)\n            //add_move_listener(event.target, 'mousemove', moveListener)\n            //add_move_listener(grid_elem, 'mousemove', moveListener)\n            //add_move_listener(event.target, v, moveListener)\n          //})\n          add_move_listener(document, 'touchmove', moveListenerTouch)\n        ))\n\n        // dont \"bubble\" event to parent nodes\n        //event.stopPropagation()\n\n        //event.preventDefault()\n      };\n\n      const moveListener = {\n        mousemove: moveListenerMouse,\n        touchmove: moveListenerTouch,\n      };\n\n\n      const rotateListenerRightTouch = (event) => {\n        // TODO\n      };\n\n      const rotateListenerRightMouse = (event) => {\n        moveCounter += 1\n\n        rotateEventRight = event\n\n        // TODO add rotateListener for touchmove\n        ;['mousemove', 'touchmove'].forEach(v => {\n          //event.target.removeEventListener('mousemove', rotateListenerRight, false)\n          //remove_move_listener(grid_elem, 'mousemove', rotateListenerRight)\n          remove_move_listener(document, v, rotateListenerRight)\n        })\n\n        promiseTimeout(mousemoveFrameTime).then(()=>(\n\n          ['mousemove', 'touchmove'].forEach(v => {\n            //event.target.addEventListener('mousemove', rotateListenerRight, false)\n            //add_move_listener(grid_elem, 'mousemove', rotateListenerRight)\n            add_move_listener(document, v, rotateListenerRight)\n          })\n\n        ))    \n      };\n\n      const rotateListenerRight = {\n        mousemove: rotateListenerRightMouse,\n        touchmove: rotateListenerRightTouch,\n      }\n\n\n\n      const rotateListenerLeftTouch = (event) => {\n        // TODO\n      };\n\n      const rotateListenerLeftMouse = (event) => {\n        moveCounter += 1\n\n        rotateEventLeft = event\n\n        ;['mousemove', 'touchmove'].forEach(v => {\n          //event.target.removeEventListener('mousemove', rotateListenerLeft, false)\n          //remove_move_listener(grid_elem, 'mousemove', rotateListenerLeft)\n          remove_move_listener(document, v, rotateListenerLeft)\n        })\n\n        promiseTimeout(mousemoveFrameTime).then(()=>(\n\n          ['mousemove', 'touchmove'].forEach(v => {\n            //event.target.addEventListener('mousemove', rotateListenerLeft, false)\n            //add_move_listener(grid_elem, 'mousemove', rotateListenerLeft)\n            add_move_listener(document, v, rotateListenerLeft)\n          })\n\n        ))    \n      };\n\n      const rotateListenerLeft = {\n        mousemove: rotateListenerLeftMouse,\n        touchmove: rotateListenerLeftTouch,\n      };\n\n\n      let zoomEvent = { clientX: 0, clientY: 0 };\n\n      function handleWheelBodies(event) {\n        console.dir(event);\n        \n        zoomEvent = event;\n        // TODO set zoom center from position\n        // event.clientX, event.clientY\n\n        zoomBodies(\n          (event.deltaY > 0) ? -1 : +1\n        );\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n\n      let mouseDownTime = 0;\n      let isMoving = false;\n      let eventTarget = null;\n\n      const add_listeners_by_control_id = {\n\n        'top-left': e => {\n          //\n        },\n\n        'top-center': e => {\n\n          const L = rotateListenerRight;\n\n          // TODO also use touchstart, touchmove, touchend,\n          //   touchleave, touchcancel\n          ['mousedown', 'touchstart'].forEach(v => {\n\n            const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n            // e = control-top-center\n            e.addEventListener(v, (event) => {\n\n              //console.log(`${v} ${e.id || e.nodeName+' .'+e.class}`);\n\n              if (isMoving) {\n                console.log('already moving - exit handler');\n                return;\n              }\n\n              isMoving = true;\n              doAnimateMoves = false; // disable css transitions\n\n              const _event = (v[0] === 't') ? event.touches[0] : event;\n\n              // remember target for touchmove, touchend, etc.\n              eventTarget = _event.target;\n\n              mouseDownTime = _event.timeStamp;\n\n              // measure FPS\n              moveCounter = 0;\n              moveStartTime = _event.timeStamp;\n\n              //moveStartEvent = event\n              //moveEvent = event\n              \n              rotateEventRightStart = _event;\n              rotateEventRight = _event;\n\n              add_move_listener(document, v2, L[v2]);\n            \n            }, false);\n          });\n\n          //['mouseup', 'mouseleave'].forEach(v => {\n          //['mouseup', 'mouseleave', 'touchend', 'touchleave', 'touchcancel'].forEach(v => {\n          ['mouseup'].forEach(v => {\n\n            const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n            // e = control-top-center\n            e.addEventListener(v, (event) => {\n\n              if (!isMoving) {\n                // dont \"bubble\" event to parent nodes\n                event.stopPropagation();\n\n                return;\n              }\n\n              isMoving = false;\n              eventTarget = null;\n\n              console.log(`rEL document ${v2}`);\n\n              //;['mousemove', 'touchmove'].forEach(v => {\n              //event.target.removeEventListener('mousemove', L, false)\n              //remove_move_listener(grid_elem, 'mousemove', L)\n              remove_move_listener(document, v2, L[v2]);\n              \n              //console.log(`${v} ${e.id || e.nodeName+' .'+e.class}`);\n\n              console.dir(event);\n\n              // FIXME touchend has no touches --> no positions\n              const _event = (v[0] === 'm') ? event : event.touches[0];\n\n              const dt = event.timeStamp - mouseDownTime;\n              \n              const [dx, dy] = [\n                (\n                  _event.clientX\n                   - rotateEventRightStart.clientX\n                ),\n                (\n                  _event.clientY\n                   - rotateEventRightStart.clientY\n                )\n              ];\n\n              let isClick = false;\n              let ele2 = null;\n\n              if (dt < 500 &&\n                -10 < dx && dx < 10 &&\n                -10 < dy && dy < 10\n              )\n              {\n                // click not move\n\n                // TODO use click to zoom\n                \n                console.log('click not move');\n                isClick = true;\n\n                console.log(`event.target.style.display = ${event.target.style.display}`);\n                console.dir(event);\n\n                // make transparent for click events\n                event.target.style.pointerEvents = 'none';\n\n                ele2 = document.elementFromPoint(\n                  _event.clientX, _event.clientY);\n                \n                // restore click events\n                event.target.style.pointerEvents = 'all';\n\n                // manually \"bubble\" up to parent svg\n                while (ele2 && ele2.nodeName !== 'svg') {\n                  ele2 = ele2.parentNode;\n                }\n              }\n\n              else\n              {\n                // move not click\n                rotateEventRightEnd = {\n                  clientX: (\n                    Math.round((rotateEventRightEnd.clientX\n                     - _event.clientX\n                     + rotateEventRightStart.clientX\n                    ) / 45.0)*45.0 // snap rotation\n                  )\n                };\n              }\n\n              rotateEventRightStart = { clientX: 0 };\n\n              rotateEventRight = { clientX: 0 };\n\n              // measure FPS\n              const deltaT = event.timeStamp - moveStartTime;\n              const fps = moveCounter / deltaT * 1000;\n              //console.log(`move-end ${fps.toFixed(2)} fps`);\n              // FPS test results:\n              // fps max is 125\n              // fps avg is 100 ! = much too high\n              // --> throttle down to 25 fps\n\n              // dont \"bubble\" event to parent nodes\n              event.stopPropagation();\n\n              // TODO\n              // Alcimaps.svelte:3526 Uncaught TypeError:\n              // Cannot read property 'dispatchEvent' of null\n              // at HTMLDivElement.<anonymous>\n              // (Alcimaps.svelte:3526)\n              if (isClick && v == 'mouseup') {\n                ele2.dispatchEvent(new Event('click'));\n              }\n\n            }, false);\n          });\n        }, // TODO brace?\n\n        'top-right': e => {\n          //\n        },\n\n        'center-left': e => {\n          //\n        },\n\n        'center-center': e => {\n\n          // TODO add touch gestures\n          //   two finger zoom\n          //   double tap to zoom in\n\n          /* add mousewheel listener, TODO implement zoom\n          ['wheel'].forEach(v => {\n            e.addEventListener(\n              v, handleWheelBodies, false\n            )\n          });\n          */\n\n          ['mousedown', 'touchstart'].forEach(v => {\n          //e.addEventListener('mousedown', (event)=>{\n\n            const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n            console.log(`${e} aEL ${v} + ${v2}`)\n\n            // e = control-center-center\n            e.addEventListener(v, (event) => {\n              \n              // always start moving?\n              //if (isMoving) { return }\n              \n              isMoving = true;\n              doAnimateMoves = false; // disable css transitions\n\n              console.log(`${v} ${e.id || e.nodeName+' .'+e.class}`);\n\n              // normalize properties .clientX .clientY etc\n              const _event = (v[0] === 'm') ? event : event.touches[0];\n\n              // remember target for touchmove, touchend, etc. as target for dispatchEvent\n              eventTarget = _event.target;\n\n              // measure FPS\n              moveCounter = 0;\n              moveStartTime = _event.timeStamp;\n\n              moveStartEvent = _event; // remember start\n              moveEvent = _event;\n              \n              //;['mousemove', 'touchmove'].forEach(v => {\n              //event.target.addEventListener('mousemove', moveListener, false)\n              //add_move_listener(grid_elem, 'mousemove', moveListener)\n              \n              console.log(`add_move_listener ${v2}`);\n\n              //add_move_listener(event.target, v2, moveListener[v2])\n              add_move_listener(document, v2, moveListener[v2]);\n              //})\n              \n            }, false);\n          });\n\n          // TODO add touch with document.addEventListener\n          //;['mouseup', 'mouseleave', 'touchend', 'touchleave', 'touchcancel'].forEach(v => {\n          //;['mouseup', 'mouseleave'].forEach(v => {\n          ['mouseup'].forEach(v => {\n\n            const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n            // e = control-center-center\n            e.addEventListener(v, (event) => {\n\n              if (!isMoving) {\n                return;\n              }\n\n              console.log(v+' '+(e.id || e.nodeName+' .'+e.class));\n\n              isMoving = false;\n\n              const _event = (v[0] === 'm') ? event : moveEvent;\n\n              // snap move\n              // TODO animate snapping\n\n              const moveX = Math.round((\n                moveStartEvent.clientX\n                 - _event.clientX\n              )/75);\n\n              const moveY = Math.round((\n                moveStartEvent.clientY\n                 - _event.clientY\n              )/75);\n              \n              moveStartEvent = {clientX: 0, clientY: 0};\n              moveEvent = {clientX: 0, clientY: 0};\n\n              if (moveX !== 0 || moveY !== 0) {\n                moveBodies(-moveX, -moveY, true, true);\n              }\n\n              // measure FPS\n              const deltaT = event.timeStamp - moveStartTime;\n              const fps = moveCounter / deltaT * 1000;\n              console.log(`move-end ${fps.toFixed(2)} fps`);\n\n              // FPS test results:\n              // fps max is 125\n              // fps avg is 100 ! = much too high\n              // --> throttle down to 25 fps\n\n              remove_move_listener(document, v2, moveListener[v2]);\n\n              // dont \"bubble\" event to parent nodes\n              event.stopPropagation();\n\n              eventTarget = null;\n\n            }, false);\n          });\n        },\n\n        'center-right': e => {\n          //\n        },\n\n        'bottom-left': e => {\n          //\n        },\n\n        'bottom-center': e => {\n          const L = rotateListenerLeft;\n\n          ['mousedown', 'touchstart'].forEach(v => {\n            //e.addEventListener('mousedown', (event) => {\n\n            e.addEventListener(v, (event) => {\n\n              // remember target for touchmove, touchend, etc.\n              eventTarget = event.target;\n\n              const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n              if (isMoving) { return; }\n              isMoving = true;\n              doAnimateMoves = false;\n\n              console.log(`${v} ${e.id || e.nodeName+' .'+e.class}`);\n              const _event = (v[0] === 'm') ? event : event.touches[0];\n\n              // measure FPS\n              moveCounter = 0;\n              moveStartTime = event.timeStamp;\n\n              rotateEventLeftStart = _event;\n              rotateEventLeft = _event;\n\n              //moveStartEvent = _event\n              //moveEvent = _event\n\n              //;['mousemove', 'touchmove'].forEach(v => {\n                //event.target.addEventListener('mousemove', L, false)\n                //add_move_listener(grid_elem, 'mousemove', L)\n                add_move_listener(document, v2, L[v2]);\n              //})\n\n            }, false);\n          });\n\n          //;['mouseup', 'mouseleave', 'touchend', 'touchleave', 'touchcancel'].forEach(v => {\n          //['mouseup', 'mouseleave'].forEach(v => {\n          ['mouseup'].forEach(v => {\n            //e.addEventListener('mouseup', (event)=>{\n\n            const v2 = (v[0] === 'm') ? 'mousemove' : 'touchmove';\n\n            e.addEventListener(v, (event) => {\n\n              eventTarget = null;\n\n              if (!isMoving) {\n                return;\n\n                // dont \"bubble\" event to parent nodes\n                event.stopPropagation();\n              }\n              isMoving = false;\n\n              console.log(`${v} ${e.id || e.nodeName+' .'+e.class}`);\n              //const _event = (v[0] === 'm') ? event : event.touches[0]\n\n              // measure FPS\n              const deltaT = event.timeStamp - moveStartTime;\n              const fps = moveCounter / deltaT * 1000;\n              console.log(`move-end ${fps.toFixed(2)} fps`);\n              // FPS test results:\n              // fps max is 125\n              // fps avg is 100 ! = much too high\n              // --> throttle down to 25 fps\n\n              //;['mousemove', 'touchmove'].forEach(v => {\n                //event.target.removeEventListener('mousemove', L, false)\n                //remove_move_listener(grid_elem, 'mousemove', L)\n                remove_move_listener(document, v2, L[v2]);\n              //})\n\n              // dont \"bubble\" event to parent nodes\n              event.stopPropagation();\n\n            }, false);\n          });\n        },\n\n        'bottom-right': e => {\n          //\n        },\n\n      }; // TODO brace?\n\n      [\n\n        ['top-left', 'none', 0, 0, width_in/8, height_in/8],\n        ['top-center', 'none', width_in/8, 0, width_in/8*6, height_in/8],\n        ['top-right', 'none', width_in/8*7, 0, width_in/8, height_in/8],\n\n        ['center-left', 'none', 0, height_in/8, width_in/8, height_in/8*6],\n        ['center-center', 'move', width_in/8, height_in/8, width_in/8*6, height_in/8*6],\n        ['center-right', 'none', width_in/8*7, height_in/8, width_in/8, height_in/8*6],\n\n        ['bottom-left', 'none', 0, height_in/8*7, width_in/8, height_in/8],\n        ['bottom-center', 'none', width_in/8, height_in/8*7, width_in/8*6, height_in/8],\n        ['bottom-right', 'none', width_in/8*7, height_in/8*7, width_in/8, height_in/8],\n      \n      ].forEach(([control_id, ..._]) => {\n\n        const control_element = document.getElementById('control-'+control_id)\n        //const control_element = document // TEST\n\n        add_listeners_by_control_id[\n          control_id](control_element);\n\n        // add keydown handler to every control-* element\n        control_element.addEventListener('keydown', handleKeydown);\n\n\n      });\n    }\n  }\n\n\n\n  // ASMG\n  // SENF = 0000\n  // LIPM = 1111\n\n\n\n  /* the sixteen shapes */\n\n  const bodyPath = ((width, height, wBox, hBox) => { // IIFE closure\n    \n    const dots = [\n      [[1   , 0.75], [0   , 0.25]], // age: short, long\n      [[0.75, 0.5 ], [0.25, 0.5 ]], // sense: extra, intro\n      [[0.5 , 0.75], [0.5 , 0.25]], // move: neuro, psycho\n      [[0.75, 1   ], [0.25, 0   ]], // gend: female, male\n    ]\n\n    const R = width / 2\n    const dH = height / 4\n\n    const X = wBox / 2 // x center\n    const Y = hBox / 2 - height / 2 // y origin\n\n    return Array.from(Array(16).keys()).map((num) => {\n    \n      // decimal num = binary ASMG\n      const asmg = num.toString(2)\n        .padStart(4, '0').split('')\n        .map(s => s|0) // cast string to integer\n      \n      let p1 = ['M '+X+' '+Y]\n      let p2 = ['z'] // back path\n\n      let last_r2 = 0\n      // idx = current height in path\n      for (const [idx, bit] of asmg.entries()) {\n        const [r1, r2] = dots[idx][bit]\n        \n        // continue back line\n        if (r1 !== 0) {\n          p2.push('L '+(X-r1*R)+' '+(Y+idx*dH))\n        }\n        // look behind\n        if (r1 !== last_r2) {\n          // step == add dot\n          p1.push('L '+(X+r1*R)+' '+(Y+idx*dH))\n        }\n        \n        // look ahead\n        if (idx < 3) {\n          const [next_r1, _] = dots[idx+1][asmg[idx+1]]\n          if (r2 !== next_r1) {\n            // back step\n            p2.push('L '+(X-r2*R)+' '+(Y+(idx+1)*dH))\n          }\n        }\n        if (idx === 3 && r2 !== 0) {\n          // back step\n            p2.push('L '+(X-r2*R)+' '+(Y+(idx+1)*dH))\n        }\n        \n        // continue line\n        p1.push('L '+(X+r2*R)+' '+(Y+(idx+1)*dH))\n\n        last_r2 = r2\n      }\n\n      const res = p1.concat(p2.reverse()).join(' ')\n      //const res = p1.join(' ')\n      //console.log('bodyPath['+num+'] = '+res)\n\n      return res\n    })\n  })(160/Math.sqrt(2), 160/Math.sqrt(2), 200, 200) // TODO get from global variable\n  //})(200, 200) // TODO get from global variable\n\n\n  // the four shapes\n  // used in nameFormat \"ebxshape\"\n  const pathDataShapeLarge = [\n    'M 20,20 h 160 l -40,80 l 40,80 h -160 l 40,-80 z', // 00 = 3 = air\n    'M 20,20 h 160 l -80,160 z', // 01 = 1 = fire\n    'M 20,180 h 160 l -80,-160 z', // 10 = 2 = earth\n    'M 100,20 l 40,80 l -40,80 l -40,-80 z', // 11 = 4 = water\n  ];\n  const pathDataShapeSmall= [\n    'M 80,80 h 40 l -10,20 l 10,20 h -40 l 10,-20 z', // 00 = 3 = air\n    'M 80,80 h 40 l -20,40 z', // 01 = 1 = fire\n    'M 80,120 h 40 l -20,-40 z', // 10 = 2 = earth\n    'M 100,80 l 10,20 l -10,20 l -10,-20 z', // 11 = 4 = water\n  ];\n\n\n\n  // letters of the four dimensions\n  const letter_asmg = [\n      ['S', 'L'], // age   = Short  or Long\n      ['E', 'I'], // sense = Extra  or Intro\n      ['N', 'P'], // move  = Neuro  or Psycho\n      ['F', 'M'], // gen   = Female or Male\n  ]\n\n  // init empty TODO implement user data\n  const captionText = Array.from(Array(xSize).keys()).map(x => Array.from(Array(ySize).keys()).map(y => {\n    return ''\n  }))\n\n  const addNamePrefix = nameShortLong => (\n    (\n      nameShortLong[0] === nameShortLong[1][0]\n    ) ? (\n      // skip prefix, only set first letter to monospace\n      //nameShortLong[1]\n      '<tt>'+nameShortLong[1][0]+'</tt>'+nameShortLong[1].substring(1)\n    ) : (\n      // add prefix\n      //nameShortLong[0]+' '+nameShortLong[1]\n      '<tt>'+nameShortLong[0]+'</tt>&nbsp;'+nameShortLong[1]\n    )\n  );\n\n  // array_1.equals(array_2)\n  // https://stackoverflow.com/a/14853974\n  // Warn if overriding existing method\n  if(Array.prototype.equals)\n      console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n  // attach the .equals method to Array's prototype to call it on any array\n  Array.prototype.equals = function (array) {\n      // if the other array is a falsy value, return\n      if (!array)\n          return false;\n\n      // compare lengths - can save a lot of time \n      if (this.length != array.length)\n          return false;\n\n      for (var i = 0, l=this.length; i < l; i++) {\n          // Check if we have nested arrays\n          if (this[i] instanceof Array && array[i] instanceof Array) {\n              // recurse into the nested arrays\n              if (!this[i].equals(array[i]))\n                  return false;       \n          }           \n          else if (this[i] != array[i]) { \n              // Warning - two different object instances will never be equal: {x:20} != {x:20}\n              return false;   \n          }           \n      }       \n      return true;\n  }\n  // Hide method from for-in loops\n  Object.defineProperty(Array.prototype, \"equals\", {enumerable: false});\n\n\n\n  let hashReaderActive = true\n\n  // TODO move code to right location\n\n  function getHash() {\n      return window.location.hash.substr(1)\n  }\n\n  // stolen from https://github.com/ItalyPaleAle/svelte-spa-router/blob/master/Router.svelte\n  const hashReader = readable(\n    getHash(),\n    function start(set) {\n      const update = () => set(getHash())\n      window.addEventListener('hashchange', update, false)\n      return function stop() {\n        window.removeEventListener('hashchange', update, false)\n      }\n    }\n  )\n\n  // Listen to changes in the location\n  hashReader.subscribe((value) => {\n      // stop hashWriter?\n      hashReaderActive && parseHash()\n      // start hashWriter?\n  })\n\n  // writeHash\n  // set url fragment ID via svelte reactive assignment\n  $: {\n    \n    hashReaderActive = false\n\n    window.location.hash = [\n      '#',\n      \n      nameFromN_url[origin] + arg_sep,\n      // FIXME `nameFromN_url[origin]` is undefined\n\n      nameFormat + arg_sep,\n      \n      groupFormat + arg_sep,\n      \n      (isMenuHidden|0),\n        (isDark|0),\n        (doAnimateDash|0),\n        (showOddAngles|0),\n        arg_sep,\n      \n      angle_id + arg_sep,\n\n      // TODO save flip state = flip- x y d a\n\n      locale + arg_sep,\n\n      anim_dash_factor_key\n\n    ].join('')\n    console.log('done setting url')\n\n    hashReaderActive = true\n  }\n\n\n\n  // TODO add more svg assets\n\n  /*\n  const asset_svg = preval(\n    () => (\n      require('fs')\n      .readFileSync(\n        'public/test-hands-long-or-broad.svg'\n      ).toString()\n      .replace(/^<\\?xml[^>]*>/, '')\n      .replace(/#000000/sg, 'var(--fg)')\n      .replace(/#ffffff/sg, 'var(--bg)')\n    )\n  );\n  */\n\n\n\n  // TODO make fotoData editable\n\n  // keep inlined images at end of script\n  // for faster page loads\n\n  let fotoData = preval(function(options) {\n\n    // index 0 = foto url, index 1 = foto title\n    let fotoData = Array.from(Array(16))\n    .map(x => ['data:image/jpeg,', 'empty foto']);\n\n    // body + element = asmg\n    const C3 = 0b0000;\n    const A3 = 0b0001;\n    const C1 = 0b0010;\n    const A1 = 0b0011;\n    const C2 = 0b0100;\n    const A2 = 0b0101;\n    const C4 = 0b0110;\n    const A4 = 0b0111;\n    const B3 = 0b1000;\n    const D3 = 0b1001;\n    const B1 = 0b1010;\n    const D1 = 0b1011;\n    const B2 = 0b1100;\n    const D2 = 0b1101;\n    const B4 = 0b1110;\n    const D4 = 0b1111;\n\n    // futurama\n    fotoData[D1] = ['/d1-bender.webp', 'Bender']; // D1 = fire father\n    fotoData[D3] = ['/d3-fry.webp', 'Fry']; // D3 = air father\n\n    // south park\n    fotoData[A1] = ['/a1-kenny.webp', 'Kenny']; // A1 = fire son\n    fotoData[A2] = ['/a2-stan.webp', 'Stan']; // A2 = earth son\n    //fotoData[A3] = ['/a3-cartman.webp', 'Cartman']; // A3 = air son\n    fotoData[A4] = ['/a4-kyle.webp', 'Kyle']; // A4 = water son\n    fotoData[C3] = ['/c3-heidi-turner.webp', 'Heidi Turner']; // C3 = air daughter\n    fotoData[B2] = ['/b2-sharon-marsh.webp', 'Sharon Marsh']; // B2 = earth mother\n\n    // simpsons\n    fotoData[C4] = ['/c4-lisa.webp', 'Lisa']; // C4 = water daughter\n    fotoData[D2] = ['/d2-homer.webp', 'Homer']; // D2 = earth father\n    fotoData[B1] = ['/b1-marge.webp', 'Marge']; // B1 = fire mother\n    fotoData[A3] = ['/a3-bart.webp', 'Bart']; // A3 = air son\n\n    // american dad\n    fotoData[B3] = ['/b3-francine.webp', 'Francine']; // B3 = air mother\n\n    // family guy\n    //fotoData[D3] = ['/d3-peter.webp', 'Peter Griffin']; // D3 = air father\n    // i have replaced peter with fry,\n    // because the \"morbidly obese\" peter\n    // is a bad role model for type 3,\n    // and people will find it easier to identify with fry.\n    // same for cartman -> bart\n    fotoData[B4] = ['/b4-lois.webp', 'Lois Griffin']; // B4 = water mother\n    fotoData[C2] = ['/c2-meg-griffin.webp', 'Meg Griffin']; // C2 = earth daughter\n\n    // disenchantment\n    fotoData[C1] = ['/c1-bean.webp', 'Bean']; // C1 = fire daughter\n    fotoData[D4] = ['/d4-odval.webp', 'Odval']; // D4 = water father\n\n\n\n    // inline images to javascript\n    // TODO move to end of script for faster page load\n\n    const fs = require('fs');\n    const mime = require('mime-types');\n\n    return fotoData.map(([file, name]) => {\n\n      // options.baseDir is defined in rollup.config.js\n      const file_abs = options.baseDir + '/src/images' + file;\n\n      if (!fs.existsSync(file_abs)) {\n        console.log('error: no such file: '+file_abs);\n        console.log('baseDir: '+options.baseDir);\n        return [file, name];\n      }\n\n      const file_type = mime.lookup(file_abs)\n        || 'application/octet-stream';\n\n      const base64data = fs.readFileSync(\n        file_abs, {encoding: 'base64'}\n      );\n\n      const data_uri = 'data:'+file_type+';base64,'+base64data;\n\n      //console.log('good: inlining file: '+file_abs+' as '+data_uri.substring(0,100)+' ....');\n\n      return [data_uri, name];\n\n    });\n\n  });\n\n  window.sourceCode = preval(\n    ({baseDir}) => {\n      const sourceFileĹist = [\n        'src/AlchiMaps.svelte',\n        'src/main.js',\n        'src/alchi.js',\n        'src/colorTable.cjs',\n        'rollup.config.js',\n        'package.json',\n        'README.md',\n        'LICENSE',\n        'public/alchi-maps.html',\n        'public/index.html',\n      ];\n      const fs = require('fs');\n      return sourceFileĹist.reduce(\n        (acc, sourceFile) => {\n          acc[sourceFile] = fs.readFileSync(\n            baseDir+'/'+sourceFile, {\n            encoding: 'utf-8',\n          });\n          return acc;\n        },\n        {}\n      );\n    }\n  );\n\n</script>\n\n<!--\n  on:keydown={handleKeydown}\n-->\n<svelte:window\n  on:load={handleWindowLoad}\n/>\n\n<!-- set css variables -->\n<!-- TODO instead of $colors2dyn, use CSS transition for colors -->\n<main style=\"\n    --fg: {$colors2dyn[0]};\n\n    --bg: {$colors2dyn[1]};\n    --bg-alpha33: rgba({col_rgba33[1]});\n  \"><!--<div class=\"scroll\">--><div>\n\n  <!-- define svg symbols -->\n  <svg style=\"display: none\">\n\n    <symbol id=\"element-and-pathos\" viewBox=\"0 0 400 300\">\n      <!--\n      <circle cx=\"50\" cy=\"100\" r=\"40\" style=\"stroke: var(--fg)\" />\n      <rect x=\"50\" y=\"150\" width=\"20\" height=\"20\" style=\"stroke: var(--fg)\" />\n      -->\n\n      <!-- svg path arc commands:\n      A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n      a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\n      -->\n\n      <!--\n      <g style=\"stroke: var(--fg); fill: none\" >\n        {#each Array.from(Array(10).keys()) as idx}\n          <line x1=\"{idx*50}\" x2=\"{idx*50}\" y1=\"0\" y2=\"300\" />\n        {/each}\n        {#each Array.from(Array(10).keys()) as idx}\n          <line x1=\"0\" x2=\"400\" y1=\"{idx*50}\" y2=\"{idx*50}\" />\n        {/each}\n      </g>\n      -->\n\n      <path d=\"\n        M 10 150 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -20 20\n        a 20 20 0 0 0 -20 20\n        a 20 20 0 0 0 -20 -20\n        a 20 20 0 0 1 -20 -20\n        z\n      \" style=\"\n        stroke: var(--fg); fill: red\"/>\n\n\n      <path d=\"\n        M 10 50 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -40 0\n        a 20 20 0 0 1 -40 0\n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 10 250 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 0 1 20 20 \n        a 20 20 0 0 1 -20 20 \n        a 20 20 0 0 0 -20 20 \n        a 20 20 0 0 0 -20 -20 \n        a 20 20 0 0 1 -20 -20 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 110 150 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 1 1 -20 20 \n        a 20 20 0 0 1 -40 0 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: green\"/>\n\n      <path d=\"\n        M 110 50 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -40 0\n        a 20 20 0 0 1 -40 0\n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 110 250 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 0 1 20 20 \n        a 20 20 0 0 1 -20 20 \n        a 20 20 0 0 0 -20 20 \n        a 20 20 0 0 0 -20 -20 \n        a 20 20 0 0 1 -20 -20 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 210 150 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -40 0\n        a 20 20 0 0 1 -40 0\n        z\n      \" style=\"\n        stroke: var(--fg); fill: yellow\"/>\n\n      <path d=\"\n        M 210 50 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 1 1 -20 20 \n        a 20 20 0 0 1 -40 0 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 210 250 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -20 20\n        a 20 20 0 0 0 -20 20\n        a 20 20 0 0 0 -20 -20\n        a 20 20 0 0 1 -20 -20\n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n\n      <path d=\"\n        M 310 150 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 0 1 20 20 \n        a 20 20 0 0 1 -20 20 \n        a 20 20 0 0 0 -20 20 \n        a 20 20 0 0 0 -20 -20 \n        a 20 20 0 0 1 -20 -20 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: blue\"/>\n\n      <path d=\"\n        M 310 50 \n        a 20 20 0 0 1 20 -20 \n        a 20 20 0 0 0 20 -20 \n        a 20 20 0 0 0 20 20 \n        a 20 20 0 1 1 -20 20 \n        a 20 20 0 0 1 -40 0 \n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n      <path d=\"\n        M 310 250 \n        a 20 20 0 0 1 40 0 \n        a 20 20 0 0 1 40 0\n        a 20 20 0 0 1 -20 20\n        a 20 20 0 0 0 -20 20\n        a 20 20 0 0 0 -20 -20\n        a 20 20 0 0 1 -20 -20\n        z\n      \" style=\"\n        stroke: var(--fg); fill: none\"/>\n\n    </symbol>\n\n    <g id=\"pallas-sign-collection\">\n\n      <symbol id=\"pallas-sign-rotate7\" viewBox=\"0 0 16 16\">\n        <!--\n          <rect fill=\"#000000\" x=\"0\" y=\"0\"\n            width=\"16\" height=\"16\" style=\"fill: var(--bg)\" />\n        -->\n        <g stroke-width=\"1.4\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <!-- square -->\n          <rect x=\"2\" y=\"2\" width=\"6\" height=\"6\" />\n          <!-- cross -->\n          <line x1=\"8\" y1=\"8\" x2=\"14\" y2=\"14\" />\n          <line x1=\"8\" y1=\"14\" x2=\"14\" y2=\"8\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate5\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1.4\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <rect x=\"2\" y=\"8\" width=\"6\" height=\"6\" />\n          <line x1=\"14\" y1=\"8\" x2=\"8\" y2=\"2\" />\n          <line x1=\"14\" y1=\"2\" x2=\"8\" y2=\"8\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate3\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1.4\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <rect x=\"8\" y=\"8\" width=\"6\" height=\"6\" />\n          <line x1=\"8\" y1=\"8\" x2=\"2\" y2=\"2\" />\n          <line x1=\"8\" y1=\"2\" x2=\"2\" y2=\"8\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate1\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1.4\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <rect x=\"8\" y=\"2\" width=\"6\" height=\"6\" />\n          <line x1=\"8\" y1=\"14\" x2=\"2\" y2=\"8\" />\n          <line x1=\"8\" y1=\"8\" x2=\"2\" y2=\"14\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate0\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <path d=\"M 8 8 l 3 -3 l -3 -3 l -3 3 z\" />\n          <line x1=\"8\" y1=\"8\" x2=\"8\" y2=\"14\" />\n          <line x1=\"5\" y1=\"11\" x2=\"11\" y2=\"11\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate2\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <path d=\"M 11 11 l 3 -3 l -3 -3 l -3 3 z\" />\n          <line x1=\"8\" y1=\"8\" x2=\"2\" y2=\"8\" />\n          <line x1=\"5\" y1=\"5\" x2=\"5\" y2=\"11\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate4\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <path d=\"M 8 14 l 3 -3 l -3 -3 l -3 3 z\" />\n          <line x1=\"8\" y1=\"8\" x2=\"8\" y2=\"2\" />\n          <line x1=\"5\" y1=\"5\" x2=\"11\" y2=\"5\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"pallas-sign-rotate6\" viewBox=\"0 0 16 16\">\n        <g stroke-width=\"1\" fill=\"none\" style=\"stroke: var(--fg)\">\n          <path d=\"M 5 11 l 3 -3 l -3 -3 l -3 3 z\" />\n          <line x1=\"8\" y1=\"8\" x2=\"14\" y2=\"8\" />\n          <line x1=\"11\" y1=\"11\" x2=\"11\" y2=\"5\" />\n        </g>\n      </symbol>\n    </g>\n\n    <g id=\"arrow-collection\">\n      <symbol id=\"circle-arrow-left\" viewbox=\"0 -10 100 110\">\n        <path d=\"m 20 80 A 40 40 0 1 0 20 20\"\n          fill=\"none\" stroke-width=\"10\"\n          style=\"stroke: var(--fg)\" />\n        <path d=\"M 10 0 v 40 h 40\"\n          style=\"fill: var(--fg)\" />\n      </symbol>\n      \n      <symbol id=\"line-arrow-left\" viewbox=\"0 0 100 100\">\n        <line x1=\"25\" x2=\"90\" y1=\"50\" y2=\"50\"\n          style=\"stroke: var(--fg)\"\n          stroke-width=\"10\"\n        />\n        <path d=\"M 40 20 L 10 50 L 40 80\"\n          style=\"fill: var(--fg)\"\n        />\n      </symbol>\n      \n      <symbol id=\"line-arrow-horiz\" viewbox=\"0 0 100 100\">\n        <line x1=\"25\" x2=\"75\" y1=\"50\" y2=\"50\"\n          style=\"stroke: var(--fg)\"\n          stroke-width=\"10\"\n        />\n        <path d=\"M 30 25 L 10 50 L 30 75\"\n          style=\"fill: var(--fg)\"\n        />\n        <path d=\"M 70 25 L 90 50 L 70 75\"\n          style=\"fill: var(--fg)\"\n        />\n      </symbol>\n    </g>\n\n    <g id=\"symbol-collection\">\n      <symbol id=\"light-sun\" viewbox=\"0 0 100 100\">\n        <g style=\"stroke: var(--fg)\" stroke-width=\"8\">\n          <line x1=\"5\" y1=\"50\" x2=\"95\" y2=\"50\" />\n          <line y1=\"5\" x1=\"50\" y2=\"95\" x2=\"50\" />\n          <line x1=\"18.2\" y1=\"18.2\" x2=\"81.8\" y2=\"81.8\" />\n          <line x1=\"18.2\" y1=\"81.8\" x2=\"81.8\" y2=\"18.2\" />\n          <circle cx=\"50\" cy=\"50\" r=\"20\" style=\"fill: var(--bg)\"/>\n        </g>\n      </symbol>\n\n      <symbol id=\"menu\" viewbox=\"0 0 100 100\">\n        <g style=\"stroke: var(--fg)\" stroke-width=\"8\">\n          <line x1=\"15\" x2=\"85\" y1=\"25\" y2=\"25\" />\n          <line x1=\"15\" x2=\"85\" y1=\"50\" y2=\"50\" />\n          <line x1=\"15\" x2=\"85\" y1=\"75\" y2=\"75\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"stop\" viewbox=\"0 0 100 100\">\n        <g fill=\"none\" stroke=\"var(--fg)\" stroke-width=\"8\">\n          <rect x=\"20\" y=\"20\" width=\"60\" height=\"60\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"play\" viewbox=\"0 0 100 100\">\n        <g fill=\"none\" stroke=\"var(--fg)\" stroke-width=\"8\">\n          <path d=\"M 20,20 L 80,50 L 20,80 z\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"odd-hide\" viewbox=\"0 0 100 100\">\n        <g fill=\"none\" stroke=\"var(--fg)\" stroke-width=\"8\">\n          <!--<path d=\"M 10 50 L 50 10 L 90 50 L 50 90 z\" />-->\n          <path d=\"\n            M 20 40 L 40 20\n            M 60 20 L 80 40\n            M 80 60 L 60 80\n            M 40 80 L 20 60\n          \" />\n        </g>\n      </symbol>\n\n      <symbol id=\"odd-show\" viewbox=\"0 0 100 100\">\n        <g fill=\"none\" stroke=\"var(--fg)\" stroke-width=\"8\">\n          <path d=\"M 20 50 L 50 20 L 80 50 L 50 80 z\" />\n        </g>\n      </symbol>\n\n      <symbol id=\"export\" viewbox=\"0 0 100 100\">\n        <g fill=\"none\" stroke=\"var(--fg)\" stroke-width=\"8\">\n          <path d=\"M 50 20 V 80 M 20 50 L 50 80 L 80 50 M 20 90 H 80\" />\n        </g>\n      </symbol>\n    </g>\n\n  </svg>\n\n\n  <!-- control menu -->\n  <!-- TODO add buttons to zoom ? -->\n  <!-- empty comments to avoid white space. TODO better? -->\n\n  <!-- handle collapse/expand in html\n    class:collapsed=\"{isMenuHidden}\"\n  -->\n\n  <div class=\"control scroll\" id=\"control0\">\n\n    <div class=\"nohide\"><!--\n   --><button\n          id=\"menuBtn\"\n          on:click=\"{changeMenu}\" class=\"square nohide\"\n        ><svg>\n          <title>Menu [ M ]</title>\n            <use xlink:href=\"#menu\" />\n        </svg><!--\n   --></button><!--\n   --><button\n          on:click=\"{changeDark}\" class=\"square\"\n        ><svg>\n          <title>Light / Dark [ L ]</title>\n          <use xlink:href=\"#light-sun\" />\n        </svg><!--\n   --></button><!--\n   --><button\n          on:click=\"{changeAnim}\" class=\"square\"\n        ><svg>\n          <title>Animation {doAnimateDash ? 'Stop' : 'Start'}</title>\n          <use xlink:href=\"#{doAnimateDash ? 'stop' : 'play'}\" />\n        </svg><!--\n   --></button><!--\n   - TODO restore -><button\n        on:click={changeExpand} class=\"square\"\n      >&ndash;</button><!- -\n --></div><!--\n\n --><div class=\"collapse\"><!--\n   --><div class=\"content\"><!--\n\n     --><div class=\"head\" style=\"margin-bottom: 16px\"><!--\n          -->\n\n          <button\n              on:click=\"{()=>{showOddAngles = !showOddAngles}}\" class=\"square\"\n            ><svg>\n              <title>{showOddAngles ? 'Hide' : 'Show'} odd angles</title>\n              <use xlink:href=\"#{showOddAngles ? 'odd-hide' : 'odd-show'}\" />\n            </svg>\n          </button><!--\n\n       --><button\n              on:click=\"{exportSvg}\" class=\"square\"\n            ><svg>\n              <title>Export SVG Image</title>\n              <use xlink:href=\"#export\" />\n            </svg>\n          </button><!--\n\n       --><div class=\"square\" /><!--\n\n       --><button\n            on:click={changeExpand}\n            class=\"square\"\n            title=\"show/hide transforms\"\n          >&ndash;</button><!--\n     \n     --></div><!--\n\n     --><div class=\"body\"><!--\n\n       --><div><!--\n         --><button\n                on:click=\"{moveUp}\" class=\"square\"\n              ><svg style=\"transform: rotate(90deg)\">\n                <title>Move Up [ E ] [ Up ]</title>\n                <use xlink:href=\"#line-arrow-left\" />\n              </svg><!--\n         --></button><!--\n         --><button\n              on:click=\"{moveLeft}\" class=\"square\">\n              <svg>\n                <title>Move Left [ S ] [ Left ]</title>\n                <use xlink:href=\"#line-arrow-left\" />\n              </svg><!--\n         --></button><!--\n         --><button\n                on:click=\"{moveDown}\" class=\"square\"\n              ><svg style=\"transform: rotate(270deg)\">\n                <title>Move Down [ D ] [ Down ]</title>\n                <use xlink:href=\"#line-arrow-left\" />\n              </svg><!--\n         --></button><!--\n         --><button\n                on:click=\"{moveRight}\" class=\"square\"\n              ><svg style=\"transform: rotate(180deg)\">\n                <title>Move Right [ F ] [ Right ]</title>\n                <use xlink:href=\"#line-arrow-left\" />\n              </svg><!--\n         --></button><!--\n       --></div><!--\n\n       --><div class=\"last-row\"><!--\n         --><button\n                on:click=\"{rotateRight}\" class=\"square\"\n              ><svg style=\"transform: scale(-1, 1)\">\n                <title>Rotate Right [ R ] [ Shift + Up ]</title>\n                <use xlink:href=\"#circle-arrow-left\" />\n              </svg><!--\n         --></button><!--\n         --><button\n                on:click=\"{rotateLeft}\" class=\"square\"\n              ><svg>\n                <title>Rotate Left [ W ] [ Shift + Left ]</title>\n                <use xlink:href=\"#circle-arrow-left\" />\n              </svg><!--\n         --></button><!--\n         --><button\n                on:click=\"{flipY}\" class=\"square\"\n              ><svg style=\"transform: rotate(90deg)\">\n                <title>Flip Vertical [ G ] [ Shift + Down ]</title>\n                <use xlink:href=\"#line-arrow-horiz\" />\n              </svg><!--\n         --></button><!--\n         --><button\n              on:click=\"{flipX}\" class=\"square\">\n              <svg>\n                <title>Flip Horizontal [ A ] [ Shift + Right ]</title>\n                <use xlink:href=\"#line-arrow-horiz\" />\n              </svg><!--\n         --></button><!--\n       --></div><!--\n      \n     --></div><!--\n   --></div><!--\n\n    --></div><!--\n\n    - -><div class=\"expand uppercase\">\n    --><div class=\"expand\">\n      <!-- todo avoid repeat, use a loop, or better: use components -->\n      <div class=\"content\">\n        <div class=\"head\">\n          <input\n            id=\"inf\" title=\"Name Format = Shape\"\n            type=\"text\"\n            bind:value=\"{nameFormat}\"\n            on:keyup=\"{change_nameFormat}\"\n          /><button\n            on:click={changeExpand}\n          >+</button>\n        </div>\n        <div class=\"body scroll\" data-height=\"10em\">\n          {#each Object.entries(nameFormatPresets) as [n, t]}\n            <button on:click={setNamePreset} title={t}>{n}</button>\n          {/each}\n        </div>\n      </div>\n    </div><!--\n\n\n\n    -->{#if false}\n\n      <!-- groupFormat selector -->\n\n      <div class=\"expand uppercase\">\n        <!--\n        TODO why no bottom-border on second text input ?\n        bottom-border is missing in expanded menu\n        but not in the first menu .... what?\n        -->\n        <div class=\"content\">\n          <div class=\"head\">\n            <input\n              id=\"igf\" title=\"Group Format = Color\"\n              type=\"text\"\n              bind:value=\"{groupFormat}\"\n              on:keyup=\"{change_groupFormat}\"\n            /><button\n              on:click={changeExpand}\n            >+</button>\n          </div>\n          <div class=\"body scroll\" data-height=\"10em\">\n            {#each Object.entries(groupFormatPresets) as [n, t]}\n              <button on:click={setGroupPreset} title={t}>{n}</button>\n            {/each}\n          </div>\n        </div>\n      </div>\n\n    {/if}<!--\n\n    --><div class=\"expand\">\n      <!-- todo avoid repeat, use a loop, or better: use components -->\n      <div class=\"content\">\n        <div class=\"head\">\n          <input\n            readonly\n            title=\"Local Language\"\n            bind:value=\"{localeName[locale]}\"\n          /><button\n            on:click={changeExpand}\n          >+</button>\n        </div>\n        <div class=\"body scroll\" data-height=\"10em\">\n          {#each Object.keys(localeName) as l}\n            <button\n              on:click={()=>setLocale(l)}\n              title=\"{l} = {localeName[l]}\"\n            >{localeName[l]}</button>\n          {/each}\n        </div>\n      </div>\n    </div><!--\n\n    --><div class=\"numbtn first-row\">\n      {#each Object.keys(anim_dash_factor_presets) as n}\n        <button on:click={()=>{anim_dash_factor_key = n}}>{n}</button>\n      {/each}\n    </div>\n\n  </div><!-- close #control0 -->\n\n<!--\n  keydown comes before keyup\n  keyup = value has changed\n  keydown = value has \"maybe\" changed\n-->\n\n<!-- #wrapper for alcimaps TODO rename -->\n<!--\n  TODO svelte: attribute \"on:keydown\"\n    only working for <svelte:window> tag?\n    on:keydown={handleKeydown}\n-->\n<div\n  id=\"wrapper\"\n  class:animate_dash=\"{doAnimateDash}\"\n  class:animate_moves=\"{doAnimateMoves}\"\n  style=\"\n\n    /* set css variables */\n\n    --fg: {$colors2dyn[0]};\n    --bg: {$colors2dyn[1]};\n\n    --angle: {angle[0]}deg;\n    --angleBack: {angle[1]}deg;\n  \"\n>\n\n\n\n<!-- TODO move controls out of move-container -->\n\n<!--\n  tabindex=\"-1\"\n  allow to handle keydown events on a div\n  https://stackoverflow.com/questions/51267273\n-->\n\n<div id=\"transform-mask\"\n  tabindex=\"-1\"\n  style=\"\n    width: {width}px;\n    height: {height}px;\n\n    overflow: hidden;\n    margin: auto; /* center */\n  \"\n>\n\n<div id=\"transform-move\"\n  style=\"\n    will-change: transform;\n    \n    transform:\n      translate(\n        {moveEvent.clientX}px,\n        {moveEvent.clientY}px\n      )\n      ;\n  \"\n>\n\n<div id=\"transform-down\"\n  style=\"\n    /*will-change: transform; no need for accel */\n    \n    transform:\n      translate(\n        {-1*moveStartEvent.clientX}px,\n        {-1*moveStartEvent.clientY}px\n      )\n      ;\n\n  \"\n>\n\n<div id=\"transform-rotate\"\n  style=\"\n    will-change: transform;\n\n    /* TODO verify */\n    /*transform-origin: {0.5*width}px {1.5*height}px;*/\n    transform-origin: {0.5*width}px {1.5*height}px;\n    \n    transform: rotate( var(--angle) );\n  \"\n>\n\n<div id=\"transform-translate\"\n  style=\"\n    will-change: transform;\n\n    /* center bias */\n    margin-left: {-1*width}px;\n    margin-top: {-1*height}px;\n\n  \"\n>\n\n<!--\n    viewbox=\"\n      {-gridPadding}\n      {-gridPadding}\n      {3*width_in +2*gridPadding}\n      {3*height_in+2*gridPadding}\n    \"\n-->\n\n  <!-- #content -->\n  <svg id=\"content\"\n\n    width=\"{3*width}px\"\n    height=\"{3*height}px\"\n\n    viewbox=\"{svg_viewbox.join(' ')}\"\n\n    style=\"\n\n/* TODO revoke transforms? */\n\n      /* TODO variable */\n      /*transform-origin: {1.5*width}px {1.5*height}px;*/\n      /*\n        transform-origin:\n          {1.5*width }px\n          {1.5*height}px\n        */\n        /*\n        {1.5*width -translate_x}px\n        {1.5*height-translate_y}px\n        {1.5*width -translate_origin_x}px\n        {1.5*height-translate_origin_y}px\n        */\n        /*\n          ;\n      */\n\n      /* translate_x */\n\n    \"\n  >\n    <defs>\n\n      <!--\n        x=\"{$patternPos[0]}\"\n        y=\"{$patternPos[1]}\"\n      -->\n\n      <!-- background lines of \"same class\" -->\n      <pattern id=\"same_class_lines\"\n        width=\"800\" height=\"800\"\n        patternUnits=\"userSpaceOnUse\"\n        >\n        <g style=\"stroke: var(--fg)\" stroke-width=\"8\" fill=\"none\">\n\n          <!-- diff class cross -->\n          <line x1=\"500\" y1=\"500\" x2=\"300\" y2=\"300\" />\n          <line x1=\"500\" y1=\"300\" x2=\"300\" y2=\"500\" />\n\n          <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"100\" />\n          <line x1=\"800\" y1=\"800\" x2=\"700\" y2=\"700\" />\n          <line x1=\"0\" y1=\"800\" x2=\"100\" y2=\"700\" />\n          <line x1=\"800\" y1=\"0\" x2=\"700\" y2=\"100\" />\n\n          <line x1=\"400\" y1=\"0\" x2=\"300\" y2=\"100\" />\n          <line x1=\"400\" y1=\"0\" x2=\"500\" y2=\"100\" />\n\n          <line x1=\"400\" y1=\"800\" x2=\"300\" y2=\"700\" />\n          <line x1=\"400\" y1=\"800\" x2=\"500\" y2=\"700\" />\n\n          <line x1=\"0\" y1=\"400\" x2=\"100\" y2=\"300\" />\n          <line x1=\"0\" y1=\"400\" x2=\"100\" y2=\"500\" />\n\n          <line x1=\"800\" y1=\"400\" x2=\"700\" y2=\"300\" />\n          <line x1=\"800\" y1=\"400\" x2=\"700\" y2=\"500\" />\n\n          <!-- same class square 1 -->\n          <rect x=\"100\" y=\"100\" width=\"200\" height=\"200\" \n            class=\"anim_dash1\"\n            style=\"stroke-dashoffset: {anim_dash_factor[0]*anim_dash_offset}\"\n          />\n\n          <!-- same class square 2 -->\n          <rect x=\"500\" y=\"100\" width=\"200\" height=\"200\" \n            class=\"anim_dash2\"\n            style=\"stroke-dashoffset: {anim_dash_factor[1]*anim_dash_offset}\"\n          />\n\n          <!-- same class square 3 -->\n          <rect x=\"100\" y=\"500\" width=\"200\" height=\"200\" \n            class=\"anim_dash1\"\n            style=\"stroke-dashoffset: {anim_dash_factor[2]*anim_dash_offset}\"\n          />\n\n          <!-- same class square 4 -->\n          <rect x=\"500\" y=\"500\" width=\"200\" height=\"200\" \n            class=\"anim_dash2\"\n            style=\"stroke-dashoffset: {anim_dash_factor[3]*anim_dash_offset}\"\n          />\n\n        </g>\n      </pattern>\n    </defs>\n\n    <rect id=\"bg-pattern\"\n      x=\"0\" y=\"0\"\n      width=\"{3*width_in}\" height=\"{3*height_in}\"\n      fill=\"url(#same_class_lines)\"\n      style=\"\n        /*\n          transition: transform .5s linear;\n        */\n      \"\n      transform-origin=\"center\"\n    />\n\n    <!-- center marker -->\n    <!-- - ->\n    <rect\n      x=\"{1.25*width_in}\" y=\"{1.25*height_in}\"\n      width=\"{0.5*width_in}\" height=\"{0.5*height_in}\"\n      stroke=\"green\"\n      stroke-width=\"4\"\n      fill=\"none\"\n      />\n    <!- - -->\n\n<!-- have both pattern and bodies in one <svg>\n\n  </svg>\n</div>\n\n<div\n  id=\"panzoom-wrapper\"\n  style=\"\n    /* overlay over background div */\n    margin-top: -{height}px;\n  \"\n>\n<svg id=\"panzoom\"\n\n  width=\"{width}px\"\n  height=\"{height}px\"\n\n  viewbox=\"\n    0\n    0\n    {width_in}\n    {height_in}\n  \"\n>\n-->\n\n<!--\n<g id=\"panzoom-viewport\">\n-->\n\n  <!-- grid of bodies -->\n  <g\n    id=\"grid_wrap\"\n    style=\"\n\n      padding: 2px; /* TODO remove? */\n\n      height: {height}px;\n      width: {width}px;\n      overflow: hidden;\n      /*margin: auto; /* center */\n\n      /* debug\n        border: solid 1px green;\n      */\n      \n      /* move to center */\n      /** /\n      transform:\n        translateX({+1*width}px)\n        translateY({+1*height}px)\n        ;\n      /**/\n      transform:\n        /* move to center */\n        translateX({width_in}px)\n        translateY({height_in}px)\n        ;\n\n    \"\n  >\n\n\n<!--\n    <rect\n      id=\"bg-pattern\"\n      x=\"0\" y=\"0\"\n      width=\"{3*width_in}\" height=\"{3*height_in}\"\n      fill=\"url(#same_class_lines)\"\n      style=\"\n        /*\n          transition: transform .5s linear;\n        */\n      \"\n      transform-origin=\"center\"\n    />\n\n      \"\n\ncannot rotate <g> around center?\n\n-->\n\n<!--\n    <svg id=\"grid\"\n      width=\"{width_in}\" height=\"{height_in}\"\n      class:animate=\"{doAnimateDash}\"\n      viewbox=\"\n        0\n        0\n        {width_in}\n        {height_in}\n      \"\n      style=\"\n\n        position: relative;\n        transform:\n          /*\n          translateX( var(--translateGridX) )\n          translateY( var(--translateGridY) )\n          */\n          translateX({pos[0][1]-gridPadding})\n          translateY({pos[1][1]-gridPadding})\n\n          /* FIXME make this work again */\n          /* broken with panzoomrotate wrapper */\n          rotate( var(--angle) )\n\n\n\n        ;\n        transform-origin: center;\n    \">\n\n-->\n\n      <!--\n          transform:\n          \n          /* center */\n          /** /\n          translateX({+1*width}px)\n          translateY({+1*height}px)\n          /**/\n\n\n          translateX({pos[0][1]-gridPadding}px)\n          translateY({pos[1][1]-gridPadding}px)\n\n\n\n          /* TODO remove this scale factor\n            synchronize coordinate systems */\n\n          translateX({-2.66*moveEndEvent.clientX}px)\n          translateY({-2.66*moveEndEvent.clientY}px)\n\n          translateX({-2.66*moveStartEvent.clientX}px)\n          translateY({-2.66*moveStartEvent.clientY}px)\n\n          translateX({2.66*moveEvent.clientX}px)\n          translateY({2.66*moveEvent.clientY}px)\n\n\n\n          rotate3d(0,0,+1, {-1*rotateEventRightEnd.clientX}deg)\n          rotate3d(0,0,-1, {-1*rotateEventLeftEnd.clientX}deg)\n          \n          rotate3d(0,0,+1, {-1*rotateEventRightStart.clientX}deg)\n          rotate3d(0,0,-1, {-1*rotateEventLeftStart.clientX}deg)\n\n          rotate3d(0,0,+1, {rotateEventRight.clientX}deg)\n          rotate3d(0,0,-1, {rotateEventLeft.clientX}deg)\n\n          /*\n          scaleX({scaleFactor[0]})\n          scaleY({scaleFactor[1]})\n          */\n\n          rotate3d(1,0,0, {gridRotate3D[0]}deg)\n\n          rotate( var(--angle) )\n        ;\n        transform-origin: center;\n      -->\n\n    <g id=\"grid\"\n      style=\"\n\n        /*position: relative;*/\n\n\n      \"\n    >\n\n      <defs>\n\n        <clipPath id=\"clip_circle\">\n          <circle cx=\"100\" cy=\"100\" r=\"80\" />\n        </clipPath>\n\n        <!--\n          multiply is a nice and useful one, \n          but there is also: \n          screen, overlay, darken, lighten, \n          color-dodge, color-burn, hard-light, \n          soft-light, difference, exclusion, \n          hue, saturation, color, and luminosity. \n          And also normal which reset it.\n        -->\n\n        <!-- filters to colorize images -->\n        {#each colorTable[16] as [fg, bg]}\n          <filter id=\"spotlight-{fg.substring(1)}\">\n            <feFlood result=\"floodFill\"\n              x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n              flood-color=\"{fg}\" flood-opacity=\"1\"\n            />\n            <!--\n              <feBlend mode=\"multiply\" in=\"SourceGraphic\" in2=\"floodFill\" />\n              <feBlend mode=\"color-burn\" in=\"SourceGraphic\" in2=\"floodFill\" />\n              <feBlend mode=\"hard-light\" in=\"SourceGraphic\" in2=\"floodFill\" />\n              <feBlend mode=\"luminosity\" in=\"SourceGraphic\" in2=\"floodFill\" />\n            -->\n            <feBlend mode=\"luminosity\" in=\"SourceGraphic\" in2=\"floodFill\" />\n          </filter>\n        {/each}\n\n\n\n        <!-- TODO pattern offset relative to view? -->\n        <!--\n          x=\"300\" y=\"300\"\n          x=\"{flipIn[0] * ($patternPos[0] + 100)}\"\n          y=\"{flipIn[1] * ($patternPos[1] + 100)}\"\n\n          x=\"{flipIn[0] * ($patternPos[0])}\"\n          y=\"{flipIn[1] * ($patternPos[1])}\"\n\n          x=\"{$patternPos[0]}\"\n          y=\"{$patternPos[1]}\"\n\n\n\n        -->\n\n\n        <marker id=\"arrowhead\" orient=\"auto\"\n          markerWidth=\"2\" markerHeight=\"4\"\n          refX=\"0.1\" refY=\"2\">\n          <!-- triangle pointing right (+x) -->\n          <path d=\"M0,0 V4 L2,2 Z\" fill=\"black\" />\n        </marker>\n\n\n\n        <radialGradient id=\"circle_double_stroke\">\n          <stop id=\"a\" offset=\"99%\" style=\"stop-color: var(--bg)\"/>\n          <stop id=\"b\" offset=\"90%\" style=\"stop-color: var(--fg)\"/>\n        </radialGradient>\n\n\n\n        <!-- define custom symbols for zodiac signs\n          cos android shows utf8 zodiac signs\n          only in orange color -->\n\n        <symbol id=\"gemini\" class=\"zodiac mutable air\" viewbox=\"0 0 100 100\">\n          <path d=\"M 32,20 V 80 M 68,20 V 80 M 5 10 A 150 150 0 0 0 95 10 M 5 90 A 150 150 0 0 1 95 90\" />\n        </symbol>\n\n        <symbol id=\"taurus\" class=\"zodiac fixed earth\" viewbox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"60\" r=\"30\" />\n          <path d=\"M 10 10 A 50 50 0 0 0 90 10\" />\n        </symbol>\n\n        <symbol id=\"aries\" class=\"zodiac cardinal fire\" viewbox=\"0 0 100 100\">\n          <path d=\"M 5,40 C 45,-50 50,95 50,95 50,90 55,-50 95,40\" />\n        </symbol>\n\n        <symbol id=\"cancer\" class=\"zodiac cardinal water\" viewbox=\"0 0 100 100\">\n          <circle cx=\"20\" cy=\"50\" r=\"15\" />\n          <circle cx=\"80\" cy=\"50\" r=\"15\" />\n          <path d=\"M 5,50 C 5,20 50,5 80,10 M 95,50 C 95,80 50,95 20,90\" />\n        </symbol>\n\n        <symbol id=\"pisces\" class=\"zodiac mutable water\" viewbox=\"0 0 100 100\">\n          <path d=\"M 5 5 A 50 50 0 0 1 5 95 M 95 5 A 50 50 0 0 0 95 95 M 15,50 H 85\" />\n        </symbol>\n\n        <symbol id=\"aquarius\" class=\"zodiac fixed air\" viewbox=\"0 0 100 100\">\n          <path d=\"M 10,35 L 30,15 50,35 70,15 90,35 M 10,85 L 30,65 50,85 70,65 90,85\" />\n        </symbol>\n\n        <symbol id=\"sagittarius\" class=\"zodiac mutable fire\" viewbox=\"0 0 100 100\">\n          <path d=\"M 10,90 L 90,10 M 50,10 L 90,10 90,50 M 10,40 L 60,90\" />\n        </symbol>\n\n        <symbol id=\"libra\" class=\"zodiac cardinal air\" viewbox=\"0 0 100 100\">\n          <line x1=\"0\" x2=\"100\" y1=\"75\" y2=\"75\" />\n          <path d=\"M 0,50 H 30 A 23 23 0 1 1 70,50 H 100\" />\n        </symbol>\n\n        <symbol id=\"leo\" class=\"zodiac fixed fire\" viewbox=\"0 0 100 100\">\n          <circle cx=\"27\" cy=\"60\" r=\"20\" />\n          <path d=\"M 45,51 C 10,-10 130,0 80,60 C 57,90 90,90 100,90\" />\n        </symbol>\n\n        <symbol id=\"scorpius\" class=\"zodiac fixed water\" viewbox=\"0 0 100 100\">\n          <path d=\"M -10,30 A 10 10 0 0 1 15,30 V 75 M 15,30 A 10 10 0 0 1 40,30 V 75 M 40,30 A 10 10 0 0 1 65,30 V 30 C 65,70 80,85 90,90 M 95,50 V 95 H 50\" />\n        </symbol>\n\n        <symbol id=\"virgo\" class=\"zodiac mutable earth\" viewbox=\"0 0 100 100\">\n          <path d=\"M -10,30 A 10 10 0 0 1 15,30 V 75 M 15,30 A 10 10 0 0 1 40,30 V 75 M 40,30 A 10 10 0 0 1 65,30 V 30 C 65,70 80,85 95,90 M 55,95 L 95,55\" />\n        </symbol>\n\n        <symbol id=\"capricorn\" class=\"zodiac cardinal earth\" viewbox=\"0 0 100 100\">\n          <path d=\"M -20,30 A 10 10 0 0 1 20,30 V 65 M 20,30 A 10 10 0 0 1 55,30 V 70 A 18 18 0 1 0 62,56 L 25,95\" />\n        </symbol>\n\n      </defs>\n\n\n\n      <!-- background circle for doingRotate == true -->\n      <circle cx=\"{width_in/2}\" cy=\"{height_in/2}\"\n        r=\"{height_in/2*Math.sqrt(2)}\"\n        stroke=\"var(--fg)\" stroke-width=\"2\"\n        fill=\"none\"\n        visibility=\"{doingRotate ? 'visible' : 'hidden'}\"\n        style=\"\n          /**/\n            transform:\n              translateX({-1*scale_in*translate_x}px)\n              translateY({-1*scale_in*translate_y}px)\n            ;\n          /**/\n        \"\n      />\n\n\n\n      <!-- TODO switch numBodies 11 or 16 -->\n      <!-- (x, y) dont move the pattern, only translate does -->\n\n      <!-- center pattern at center body -->\n\n      <!--\n            transform: rotate3d({patternRotate3D[0]}, {patternRotate3D[1]}, {patternRotate3D[2]}, {patternRotate3D[3]}deg);\n\n            rotateY({patternRotate[0]}deg)\n            rotate3d(1,1,0,{patternRotate[1]}deg)\n            rotateX({patternRotate[2]}deg)\n            rotate3d(1,-1,0,{patternRotate[3]}deg)\n            rotate3d(-1,1,0,{patternRotate[4]}deg)\n            rotate3d(-1,-1,0,{patternRotate[5]}deg)\n\n      -->\n\n      <!-- TODO why are all bodies offset by 4 pixels? -->\n\n      <!--\n        <svg>\n          <rect\n            x=\"0\" y=\"0\"\n            width=\"800\" height=\"800\"\n            fill=\"url(#same_class_lines)\"\n            style=\"\n              transition: transform .5s linear;\n            \"\n            transform-origin=\"400 400\"\n          />\n        </svg>\n      -->\n\n      <!--\n        transform=\"scale({$patternScale[0]}, {$patternScale[1]})\"\n        transform=\"scale({$patternScale[0]}, {$patternScale[1]})\"\n        clip-path=\"url(#clip_scl)\"\n      -->\n\n      {#if console.log(`render grid`)}<!-- noop -->\n      {/if}\n\n      {#each yRange.map((y) => [y, y%4, (y%4)*4])\n        as [y, y4, yIdx]\n      }\n        {#each xRange.map((x) => {\n\n            const x4 = x%4\n            const idx = yIdx+x4\n            const num = matrix[idx]\n            const grp = groupFromN ? groupFromN[num] : 0\n\n            // pathos = next plus one\n            const num_p1 = matrix[yIdx+((x+2)%4)]\n            const num_p2 = matrix[((y+2)%4)*4+x4]\n\n            const sm = (num & 0b0110) >> 1\n            const sm_p1 = (num_p1 & 0b0110) >> 1\n            const sm_p2 = (num_p2 & 0b0110) >> 1\n\n            const ag = ((num & 0b1000) >> 2) | (num & 0b0001)\n            \n            const a = num >> 3 & 1\n            const s = num >> 2 & 1\n            const m = num >> 1 & 1\n            const g = num      & 1\n\n            //console.log(`a, s, m, g = ${a} ${s} ${m} ${g}`)\n\n            //const [nump1, nump2] = alchi.N_pathosFromN[num]\n\n            //console.log('idx '+idx+' --> pathos '+(yIdx+((x+2)%4))+' '+(((y+2)%4)*4+x4))\n\n            //console.log(`x ${x} y ${y} x4 ${x4} y4 ${y4} idx ${idx} num ${num}`)\n\n            // TODO use object instead of array\n            //   object is easier to maintain\n\n            return [y, x, y*200, x*200, y%4, x4, idx, num, num_p1, num_p2, sm, ag, a, s, m, g, sm_p1, sm_p2]\n          })\n          as [y, x, yPos, xPos, y4, x4, idx, num, num_p1, num_p2, sm, ag, a, s, m, g, sm_p1, sm_p2]\n        }\n\n          {#if bodiesMask === 1 || bodiesMask[x][y] === 1}\n            <!-- workaround for chrome, to transform nested svg -->\n            <g\n              class=\"body_wrapper\"\n              style=\"\n                transform:\n                  translateX({bodyPosStatic[x][y][0]}px)\n                  translateY({bodyPosStatic[x][y][1]}px)\n\n                  rotate3d(0,1,0, {gridRotate3DBodies[0]}deg)\n                ;\n                transform-origin: 100px 100px;\n              \"\n            >\n\n              <!-- get visible position -->\n              <!--\n              posInFromOut[x][y] === [2, 2]\n              class=\"body{(x==2&&y==2)?' center':''}\"\n              -->\n\n\n              <!--\n                class=\"body{isCenter(x, y) ? ' center':''}\"\n              -->\n\n\n\n              <!-- TODO is this efficient?\n                handle \"centerBody\" state\n                  {centerBody.equals([x, y]) ? ' center':''}\n                ideally we only need two operations:\n                  1. unfocus last centerBody\n                  2. focus new centerBody\n                \"focus\" means: add CSS class \"center\"\n              -->\n\n\n\n\n<!--\n                on:click=\"{(event)=>handleClickBody(event, x, y, num, idx)}\"\n                on:dblclick=\"{(event)=>handleDoubleClickBody(event, x, y, num, idx)}\"\n-->\n\n              <svg\n                class=\"body\"\n                class:center=\"{centerBody.equals([x, y])}\"\n                x=\"0\" y=\"0\"\n                width=\"200\" height=\"200\"\n                on:click=\"{(event)=>handleClickBody(event, x, y, num, idx)}\"\n              >\n\n                {#if showPathos}\n\n                  {#each ([\n                    [0, sm_p1, num_p1],\n                    [1, sm_p1, num_p1],\n                    [2, sm_p2, num_p2],\n                    [3, sm_p2, num_p2]\n                  ]) as [id_p, sm_p, num_p]}\n\n                    <circle\n                      r=\"30\" cx=\"{pathosPos[id_p][0]}\" cy=\"{pathosPos[id_p][1]}\"\n                      fill=\"{groupColor[groupFromN[num_p]][0]}\"\n                      stroke=\"{groupColor[groupFromN[num_p]][1]}\"\n                      stroke-width=\"{numGroups === 2 ? 1 : 0}\"\n                    ><title>.... plays {pathosFromSM[sm][sm_p][0][1]}</title></circle>\n\n\n                    {#if nameFormat === 'zodiac'}\n\n                      <!-- TODO handle \"name is image filename\"\n                        = south park, simpsons, etc.\n                      -->\n\n                      <!-- name is symbol id -->\n                      <use \n                        xlink:href=\"#{pathosFromSM[sm][sm_p][0][0]}\"\n                        stroke=\"{groupColor[groupFromN[num_p]][1]}\"\n                        x=\"{pathosPos[id_p][0]-20}\" y=\"{pathosPos[id_p][1]-20}\"\n                        width=\"40\" height=\"40\"\n                        style=\"\n                          transform-origin: {pathosPos[id_p][0]}px {pathosPos[id_p][1]}px;\n                          transform: rotate( var(--angleBack) );\n                          transition: transform .5s cubic-bezier(0.445, 0.050, 0.550, 0.950);\n                        \"\n                      ><title>.... plays {pathosFromSM[sm][sm_p][0][1]}</title></use>\n\n                    {:else}\n\n                      <text\n                        x=\"{pathosPos[id_p][0]}\" y=\"{pathosPos[id_p][1]}\"\n                        width=\"100\" height=\"100\"\n                        style=\"\n                          font-size: 40px;\n                          transform-origin: {pathosPos[id_p][0]}px {pathosPos[id_p][1]}px;\n                          transform: rotate( var(--angleBack) );\n                          transition: transform .5s cubic-bezier(0.445, 0.050, 0.550, 0.950);\n                        \"\n                        fill=\"{groupColor[groupFromN[num_p]][1]}\"\n                        alignment-baseline=\"mathematical\"\n                        text-anchor=\"middle\"\n                      ><title>.... plays {pathosFromSM[sm][sm_p][0][1]}</title><tspan\n                        dominant-baseline=\"central\"\n                      >{pathosFromSM[sm][sm_p][0][0]}</tspan></text>\n                    <!--\n                      >{pathosFromSM[sm][sm_p][0][0]}</tspan></text>\n                                               | -->\n                      <!--                     | -->\n                      <!-- TODO why idx 0 ? ---+ -->\n\n                      <!-- TODO translate \".... plays ${pathos}\" -->\n\n                    {/if}\n                  \n                  {/each}\n\n                  <!-- center color -->\n                  <circle\n                    r=\"36\" cx=\"100\" cy=\"100\"\n                    fill=\"{groupColor[groupFromN[num]][0]}\"\n                    stroke=\"{groupColor[groupFromN[num]][1]}\"\n                    stroke-width=\"{numGroups===2 ? 1 : 0}\"\n                  ><title>{nameFromN[num][0][1]}</title></circle>\n\n                {:else}\n                \n                  <!-- TODO remove groupFormat -->\n\n                  {#if groupFormat !== '+'}\n\n                    <!-- big circle for showPathos == false -->\n\n                    <g\n                      class=\"rotateBack\"\n                      style=\"\n                        transform: rotate( var(--angleBack) );\n                        transform-origin: 100px 100px;\n\n                        \n                        /* TODO activate only for 'click to move'\n                        transition: transform .5s cubic-bezier(0.445, 0.050, 0.550, 0.950);\n                        */\n                      \"\n                    >\n\n\n\n                      {#if nameParts === 1}\n\n                        <circle\n                          r=\"75\" cx=\"100\" cy=\"100\"\n                          fill=\"{groupColor[groupFromN[num]][0]}\"\n                          stroke=\"{groupColor[groupFromN[num]][1]}\"\n                          stroke-width=\"{numGroups===2 ? 1 : 0}\"\n                        ><title>{nameFromN[num][1]}</title></circle>\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'e/b'}\n\n                        <!-- top half = sense + move = element, soul, inside --->\n                        <!-- height 82, cos height 80 leaves a small gap -->\n                        <path d=\"M 20 102 v -62 a 20 20 0 0 1 20 -20 h 120 a 20 20 0 0 1 20 20 v 62 z\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n                        <!-- bottom half = age + gender = body, surface, outside --->\n                        <path d=\"M 20 100 v 60 a 20 20 0 0 0 20 20 h 120 a 20 20 0 0 0 20 -20 v -60 z\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && (nameFormat == 'e/bxinout' || nameFormat == 'moore-gillette')}\n\n                        <!-- outside = age + gender = body, surface, outside --->\n                        <path d=\"M 20 100 v 60 a 20 20 0 0 0 20 20 h 120 a 20 20 0 0 0 20 -20 v -120 a 20 20 0 0 0 -20 -20 h -120 a 20 20 0 0 0 -20 20 z\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                        <!-- inside -->\n                        <!-- top half = sense + move = element, soul, inside --->\n                        <!-- height 82, cos height 80 leaves a small gap -->\n                        <path d=\"M 30 70 v -30 a 10 10 0 0 1 10 -10 h 120 a 10 10 0 0 1 10 10 v 50 a 10 10 0 0 1 -10 10 h -120 a 10 10 0 0 1 -10 -10 z\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                          stroke=\"{valColor.sm[sm][1]}\"\n                          stroke-width=\"{sm === ag ? 2 : 0}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'be'}\n\n                        <!-- left = body --->\n                        <!-- width 80 + 1 to fill gap -->\n                        <rect x=\"20\" y=\"20\" width=\"81\" height=\"160\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n                        \n                        <!-- right = element --->\n                        <rect x=\"100\" y=\"20\" width=\"80\" height=\"160\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'e/bxfoto'}\n\n                        <!-- left = foto -->\n                        <!-- width +10 to overpaint right stroke -->\n                        <rect x=\"21\" y=\"21\" width=\"129\" height=\"158\"\n                          stroke=\"var(--fg)\"\n                          stroke-width=\"2\"\n                        />\n                        <!-- outer frame = body -->\n                        <!-- stroke-width +2 to fill gap -->\n                        <!--\n                          <rect x=\"23\" y=\"23\" width=\"115\" height=\"154\"\n                            stroke=\"{valColor.ag[ag][0]}\"\n                            stroke-width=\"6\"\n                          />\n                        -->\n                        <!-- inner frame = element -->\n                        <!--\n                          <rect x=\"26\" y=\"26\" width=\"108\" height=\"148\"\n                            stroke=\"{valColor.sm[sm][0]}\"\n                            stroke-width=\"4\"\n                          />\n                        -->\n\n                        <!-- top = element --->\n                        <rect x=\"140\" y=\"20\" width=\"40\" height=\"81\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                        <!-- bottom = body --->\n                        <!-- width 80 + 1 to fill gap -->\n                        <rect x=\"140\" y=\"100\" width=\"40\" height=\"80\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'bexfoto'}\n\n                        <!-- top = foto -->\n                        <!-- outer frame = body -->\n                        <!-- stroke-width +2 to fill gap -->\n                        <rect x=\"23\" y=\"23\" width=\"154\" height=\"115\"\n                          stroke=\"{valColor.ag[ag][0]}\"\n                          stroke-width=\"6\"\n                        />\n                        <!-- inner frame = element -->\n                        <rect x=\"26\" y=\"26\" width=\"148\" height=\"108\"\n                          stroke=\"{valColor.sm[sm][0]}\"\n                          stroke-width=\"4\"\n                        />\n\n                        <!-- left = body --->\n                        <!-- width 80 + 1 to fill gap -->\n                        <rect x=\"20\" y=\"140\" width=\"81\" height=\"40\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n                        \n                        <!-- right = element --->\n                        <rect x=\"100\" y=\"140\" width=\"80\" height=\"40\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'ebxorbit'}\n\n                        <!-- outside = age + gender = body, surface, outside --->\n                        <circle cx=\"100\" cy=\"100\" r=\"80\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                        <!-- radius 55 / 80 = circle with half area -->\n\n                        <!-- inside -->\n                        <!-- top half = sense + move = element, soul, inside --->\n                        <!-- height 82, cos height 80 leaves a small gap -->\n                        <!--<circle cx=\"100\" cy=\"100\" r=\"55\"-->\n                        <circle cx=\"100\" cy=\"100\" r=\"40\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                          stroke=\"{valColor.sm[sm][1]}\"\n                          stroke-width=\"{sm === ag ? 2 : 0}\"\n                        />\n\n\n\n                      {:else if nameParts === 2 && nameFormat == 'ebxshape'}\n\n                        <!-- outside = age + gender = body, surface, outside --->\n                        <path d=\"{pathDataShapeLarge[ag]}\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                        <!-- inside = sense + move = element, soul, inside --->\n                        <path d=\"{pathDataShapeSmall[sm]}\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                          stroke=\"{valColor.sm[sm][1]}\"\n                          stroke-width=\"{sm === ag ? 2 : 0}\"\n                        />\n\n                      <!--{:else if nameParts === 2 && nameFormat == '[pol]/b'}-->\n                      {:else if nameParts === 2 && nameFormat.match(/[^/]+\\/[^/]+/)}\n\n                        <!-- top half = sense + move = element, soul, inside --->\n                        <!-- height 82, cos height 80 leaves a small gap -->\n                        <path d=\"M 20 102 v -62 a 20 20 0 0 1 20 -20 h 120 a 20 20 0 0 1 20 20 v 62 z\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n                        \n                        <!-- bottom half = age + gender = body, surface, outside --->\n                        <path d=\"M 20 100 v 60 a 20 20 0 0 0 20 20 h 120 a 20 20 0 0 0 20 -20 v -60 z\"\n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                      {:else if nameParts === 2 && nameFormat == 'e|b'}\n\n                        <!-- left half = element, inside, soul, emotions, inner values, spirit -->\n                        <path d=\"\n                          M 102 20 \n                          h -62 \n                          a 20 20 0 0 0 -20 20 \n                          v 120 \n                          a 20 20 0 0 0 20 20 \n                          h 62 z\n                          \" \n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n                        <!-- right half = body, surface, outside, material -->\n                        <path d=\"\n                          M 100 20 \n                          h 60\n                          a 20 20 0 0 1 20 20 \n                          v 120 \n                          a 20 20 0 0 1 -20 20 \n                          h -60 z\n                          \" \n                          fill=\"{valColor.ag[ag][0]}\"\n                        />\n\n                      {:else if nameParts === 3 && nameFormat == 'a/e/g'}\n\n                        <!-- top third = age. height 55 + overlap 2 - corner 20 = height 37 -->\n                        <path d=\"M 20 77 v -37 a 20 20 0 0 1 20 -20 h 120 a 20 20 0 0 1 20 20 v 37 z\"\n                          fill=\"{valColor.a[a][0]}\"\n                        />\n\n                        <!-- center third = element = sense+move. height 50 +2 = 52 -->\n                        <path d=\"M 20 75 h 160 v 52 h -160 z\"\n                          fill=\"{valColor.sm[sm][0]}\"\n                        />\n\n                        <!-- bottom third = gender --->\n                        <path d=\"M 20 125 v 35 a 20 20 0 0 0 20 20 h 120 a 20 20 0 0 0 20 -20 v -35 z\"\n                          fill=\"{valColor.g[g][0]}\"\n                        />\n\n                      {:else if nameParts === 4 && (nameFormat === 'a/s/m/g' || nameFormat === 'a/s/m/gxbody')}\n\n                        <!-- top half = sense + move = element, soul, inside --->\n                        <!-- height 22, cos height 20 leaves a small gap -->\n                        <!--\n                        <path d=\"M 20 62 v -22 a 20 20 0 0 1 20 -20 h 120 a 20 20 0 0 1 20 20 v 22 z\"\n                        -->\n                        <path d=\"M 20 62 v -32 a 10 10 0 0 1 10 -10 h 140 a 10 10 0 0 1 10 10 v 32 z\"\n                          fill=\"{valColor.a[a][0]}\"\n                        />\n\n                        <rect x=\"20\" y=\"60\" width=\"160\" height=\"42\"\n                          fill=\"{valColor.s[s][0]}\"\n                        />\n\n                        <rect x=\"20\" y=\"100\" width=\"160\" height=\"42\"\n                          fill=\"{valColor.m[m][0]}\"\n                        />\n\n                        <!-- bottom half = age + gender = body, surface, outside --->\n                        <!--\n                        <path d=\"M 20 140 v 20 a 20 20 0 0 0 20 20 h 120 a 20 20 0 0 0 20 -20 v -20 z\"\n                        -->\n                        <path d=\"M 20 140 v 30 a 10 10 0 0 0 10 10 h 140 a 10 10 0 0 0 10 -10 v -30 z\"\n                          fill=\"{valColor.g[g][0]}\"\n                        />\n\n                      {:else if nameParts === 4 && nameFormat == 'smagxshape'}\n\n                        <!-- +2 pixels to avoid gaps between colors -->\n\n                        <!-- left top -->\n                        <path d=\"M20 102v-62a20 20 0 0 1 20 -20h62v82z\"\n                          fill=\"{valColor.s[s][0]}\"\n                        />\n\n                        <!-- left bottom -->\n                        <path d=\"M20 100v60a20 20 0 0 0 20 20h62v-80z\"\n                          fill=\"{valColor.m[m][0]}\"\n                        />\n\n                        <!-- right top -->\n                        <path d=\"M100 102v-82h60a20 20 0 0 1 20 20v62z\"\n                          fill=\"{valColor.a[a][0]}\"\n                        />\n\n                        <!-- right bottom -->\n                        <path\n                          d=\"M100 100v80h60a20 20 0 0 0 20 -20v-60z\"\n                          fill=\"{valColor.g[g][0]}\"\n                        />\n\n                        {#if s === 1}\n                          <!-- introvert sense = top left -->\n                          <!--\n                            bezier curve:\n                            d=\"M25 100 c 75,0 75,0 75,-75\"\n                          -->\n                          <path\n                            d=\"M20 100 h 60 a 20 20 0 0 0 20 -20 v -60\"\n                            stroke=\"{valColor.s[s][1]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {:else}\n                          <!-- extravert sense = top left -->\n                          <!-- TODO use foreground color for extravert stroke -->\n                          <path\n                            d=\"M 20 102 v -62 a 20 20 0 0 1 20 -20 h 62\"\n                            stroke=\"{colors2[0]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {/if}\n\n                        {#if m === 1}\n                          <!-- introvert move = bottom left -->\n                          <!--\n                            bezier curve:\n                            d=\"M25 100 c 75,0 75,0 75,75\"\n                          -->\n                          <path\n                            d=\"M 20 100 h 60 a 20 20 0 0 1 20 20 v 60\"\n                            stroke=\"{valColor.m[m][1]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {:else}\n                          <!-- extravert move = bottom left -->\n                          <path\n                            d=\"M 20 98 v 62 a 20 20 0 0 0 20 20 h 62\"\n                            stroke=\"{colors2[0]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {/if}\n\n                        {#if a === 1}\n                          <!-- introvert age = top right -->\n                          <!--\n                            bezier curve:\n                            d=\"M170 100 c -70,0 -70,0 -70,-70\"\n                          -->\n                          <path\n                            d=\"M 100,20 v 60 a 20 20 0 0 0 20 20 h 60\"\n                            stroke=\"{valColor.a[a][1]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {:else}\n                          <!-- extravert age = top right -->\n                          <path\n                            d=\"M 98 20 h 62 a 20 20 0 0 1 20 20 v 62\"\n                            stroke=\"{colors2[0]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {/if}\n\n                        {#if g === 1}\n                          <!-- introvert gender = bottom right -->\n                          <path d=\"M 100 180 v -60 a 20 20 0 0 1 20 -20 h 60\"\n                            stroke=\"{valColor.g[g][1]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {:else}\n                          <!-- extravert gender = bottom right -->\n                          <path\n                            d=\"M 98 180 h 62 a 20 20 0 0 0 20 -20 v -62\"\n                            stroke=\"{colors2[0]}\"\n                            stroke-width=\"4\"\n                            fill=\"none\"\n                          />\n                        {/if}\n\n                        <!-- centers last, to overpaint other colors -->\n\n                        <!-- left center -->\n                        <!--\n                        <rect x=\"20\" y=\"90\" width=\"82\" height=\"20\"\n                          fill=\"{valColor.sm[sm][0]}\">\n                          <title>{nameFromSM[sm]}</title></rect>\n                        -->\n\n                        <!-- right center -->\n                        <!--\n                        <rect x=\"100\" y=\"90\" width=\"80\" height=\"20\"\n                          fill=\"{valColor.ag[ag][0]}\">\n                          <title>{nameFromAG[ag]}</title></rect>\n                        -->\n\n                      {:else if nameParts === 4 && nameFormat == 's/m|a/g'}\n\n                        <!-- +2 pixels to avoid gaps between colors -->\n\n                        <!-- left top -->\n                        <path d=\"M20 102v-62a20 20 0 0 1 20 -20h62v82z\"\n                          fill=\"{valColor.s[s][0]}\"\n                        />\n\n                        <!-- left bottom -->\n                        <path d=\"M20 100v60a20 20 0 0 0 20 20h62v-80z\"\n                          fill=\"{valColor.m[m][0]}\"\n                        />\n\n                        <!-- right top -->\n                        <path d=\"M100 102v-82h60a20 20 0 0 1 20 20v62z\"\n                          fill=\"{valColor.a[a][0]}\"\n                        />\n\n                        <!-- right bottom -->\n                        <path\n                          d=\"M100 100v80h60a20 20 0 0 0 20 -20v-60z\"\n                          fill=\"{valColor.g[g][0]}\"\n                        />\n\n                        <!-- centers last, to overpaint other colors -->\n\n                        <!-- left center -->\n                        <rect x=\"20\" y=\"90\" width=\"82\" height=\"20\"\n                          fill=\"{valColor.sm[sm][0]}\">\n                          <title>{nameFromSM[sm]}</title></rect>\n\n                        <!-- right center -->\n                        <rect x=\"100\" y=\"90\" width=\"80\" height=\"20\"\n                          fill=\"{valColor.ag[ag][0]}\">\n                          <title>{nameFromAG[ag]}</title></rect>\n\n\n                      {:else if nameParts === 6 && nameFormat === 's/e/m|a/b/g'}\n\n                        <!-- TODO generalize -->\n\n                        <!-- left top -->\n                        <path d=\"M20 102v-62a20 20 0 0 1 20 -20h62v82z\"\n                          fill=\"{valColor.s[s][0]}\"\n                        />\n\n                        <!-- left bottom -->\n                        <path d=\"M20 100v60a20 20 0 0 0 20 20h62v-80z\"\n                          fill=\"{valColor.m[m][0]}\"\n                        />\n\n                        <!-- right top -->\n                        <path d=\"M100 102v-82h60a20 20 0 0 1 20 20v62z\"\n                          fill=\"{valColor.a[a][0]}\"\n                        />\n\n                        <!-- right bottom -->\n                        <path\n                          d=\"M100 100v80h60a20 20 0 0 0 20 -20v-60z\"\n                          fill=\"{valColor.g[g][0]}\"\n                        />\n\n                        <!-- centers last, to overpaint other colors -->\n\n                        <!-- left center -->\n                        <rect x=\"20\" y=\"75\" width=\"82\" height=\"50\"\n                          fill=\"{valColor.sm[sm][0]}\">\n                          <title>{nameFromSM[sm]}</title></rect>\n\n                        <!-- right center -->\n                        <rect x=\"100\" y=\"75\" width=\"80\" height=\"50\"\n                          fill=\"{valColor.ag[ag][0]}\">\n                          <title>{nameFromAG[ag]}</title></rect>\n\n\n\n                      {/if}\n\n                    </g>\n\n\n                  {/if}\n\n                {/if}\n\n                  <!-- TODO this is working. use bitmap image as background + colorize image\n                    <image\n                      href=\"m1-bender.jpg\"\n                      x=\"20\" y=\"20\"\n                      height=\"160\" width=\"160\"\n                      opacity=\"0.75\"\n                      clip-path=\"url(#clip_circle)\"\n                      style=\"filter:url(#spotlight-{groupColor[groupFromN[num]][0].substring(1)})\"/>\n                    />\n                  -->\n\n                \n                <!-- text container with rotateBack -->\n                <g style=\"\n                  transform-origin: center;\n                  transform: rotate(var(--angleBack));\n                \">\n\n                  {#if nameFormat !== 'x'}\n\n                    {#if nameFormat === 'shape'}\n\n                      <g style=\"\n                        transform: scale({captionText[x][y] ? 0.6 : 1});\n                        transform-origin: top;\n                      \">\n                        <path d=\"{bodyPath[num]}\"\n                          fill=\"none\"\n                          stroke=\"{groupColor[groupFromN[num]][1]}\"\n                          stroke-width=\"4\"\n                        />\n                      </g>\n\n                    {:else if nameFormat === 'zodiac'}\n\n                      <!-- name is symbol id -->\n\n                      <use \n                        xlink:href=\"#{nameFromN[num][0][0]}\"\n                        stroke=\"{groupColor[groupFromN[num]][1]}\"\n                        x=\"75\" y=\"75\"\n                        width=\"50\" height=\"50\"\n                      ><title>{nameFromN[num][0][1]}</title></use>\n\n                    {:else if nameParts === 1 || (nameParts === 2 && showPathos === true)}<!--\n\n                   --><text\n                        style=\"\n                          font-size: {showPathos ? 48 : 38}px;\n                          font-family: sans-serif;\n                        \"\n                        x=\"100\" y=\"100\"\n                        width=\"200\" height=\"200\"\n                        text-anchor=\"middle\"\n                        alignment-baseline=\"mathematical\"\n                      ><tspan\n                        y=\"50%\" x=\"50%\" dominant-baseline=\"central\"\n                        fill=\"{groupColor[groupFromN[num]][1]}\"\n                      ><!--\n                     --><title>{nameFromN[num][0][1]}</title><!--\n                     -->{nameFromN[num][0][0]}<!--\n                   --></tspan></text><!--\n                 \n                 -->{:else if nameParts === 2 && nameFormat === 'e/b'}<!--\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 80px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][1]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                          \"\n                          >{nameFromN[num][1][1]}</div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n                      <!--\n                 -->{:else if nameParts === 2 && (nameFormat == 'e/bxinout' || nameFormat == 'moore-gillette')}<!--\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              margin-top: 10px;\n                              height: 70px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][1]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 70px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                        \"\n                          >{nameFromN[num][1][1]}</div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n\n\n                    {:else if nameParts === 2 && nameFormat === 'be'}\n\n                      <foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 54px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                            >{nameFromN[num][1][0]}</div>\n\n                        </div>\n\n                      </foreignObject>\n\n\n\n                    {:else if nameParts === 2 && nameFormat === 'e/bxfoto'}\n\n                      <foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 27px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: row;\n                          \"\n                        >\n                          \n                          <div\n                            class=\"foto-container-high\"\n                            style=\"\n                              height: 160px; width: 122px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                            \"\n                            on:click=\"{() => editFoto(num)}\"\n                            \n                          ><img class=\"foto\" src=\"{fotoData[num][0]}\" alt=\"foto of {nameFromN[num][0][1]} {nameFromN[num][1][1]}\" title=\"{fotoData[num][1]}\" /></div>\n\n                          <div\n                            style=\"\n                              height: 160px; width: 38px;\n                              display: flex;\n                              flex-wrap: wrap;\n                              flex-direction: column;\n                            \"\n                          >\n\n                            <div\n                              style=\"\n                                height: 80px; width: 38px;\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                                color: {valColor.ag[ag][1]};\n                              \"\n                              title=\"{nameFromN[num][1][1]}\"\n                              >{nameFromN[num][1][0]}</div>\n\n                            <div\n                              style=\"\n                                height: 80px; width: 40px;\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                                color: {valColor.sm[sm][1]};\n                              \"\n                              title=\"{nameFromN[num][0][1]}\"\n                            >{nameFromN[num][0][0]}</div>\n\n                          </div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n\n\n                    {:else if nameParts === 2 && nameFormat === 'bexfoto'}\n\n                      <foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 27px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          \n                          <div\n                            class=\"foto-container-broad\"\n                            style=\"\n                              height: 120px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                            \"\n                            on:click=\"{() => editFoto(num)}\"\n                            \n                          ><img class=\"foto\" src=\"{fotoData[num][0]}\" alt=\"foto of {nameFromN[num][1][1]} {nameFromN[num][0][1]}\" title=\"{fotoData[num][1]}\" /></div>\n\n                          <div\n                            style=\"\n                              height: 40px; width: 160px;\n                              display: flex;\n                              flex-wrap: wrap;\n                              flex-direction: row;\n                            \"\n                          >\n\n                            <div\n                              style=\"\n                                height: 40px; width: 80px;\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                                color: {valColor.ag[ag][1]};\n                              \"\n                              title=\"{nameFromN[num][0][1]}\"\n                            >{nameFromN[num][0][0]}</div>\n                            \n                            <div\n                              style=\"\n                                height: 40px; width: 80px;\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                                color: {valColor.sm[sm][1]};\n                              \"\n                              title=\"{nameFromN[num][1][1]}\"\n                              >{nameFromN[num][1][0]}</div>\n\n                          </div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n\n\n                    {:else if nameParts === 2 && nameFormat === 'ebxorbit'}\n\n                      <foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-direction: row;\n                          \"\n                        >\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 40px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                            \"\n                          >{nameFromN[num][1][0]}</div>\n\n                          <div\n                            style=\"\n                              height: 160px; width: 40px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 40px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 40px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                            \"\n                          >{nameFromN[num][1][0]}</div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n                      <!--\n\n                 - ->{:else if nameParts === 2 && nameFormat === '[pol]/b'}<!- -\n                 -->{:else if nameParts === 2 && nameFormat.match(/[^/]+\\/[^/]+/)}<!--\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 80px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][1]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 160px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                          \"\n                          >{nameFromN[num][1][1]}</div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n                      <!--\n\n                 -->{:else if nameParts === 2 && nameFormat === 'e|b'}<!--\n\n                      TODO generalize \"flex\" layout generation\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 160px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                          >{nameFromN[num][0][1]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 160px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                          \"\n                          >{nameFromN[num][1][1]}</div>\n                        \n                        </div>\n\n                      </foreignObject>\n\n                      <!--\n\n                 -->{:else if nameParts === 3 && nameFormat === 'a/e/g'}<!--\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 55px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.a[a][1]};\n                              overflow: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{nameFromN[num][0][1]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 50px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                              overflow-x: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n\n                              white-space: pre;\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                            >{nameFromN[num][1][0]+' '+nameFromN[num][1][1]}</div>\n\n                            <!--\n                              bug: svelte ignores whitespace between template vars, in svg context\n                              >{nameFromN[num][1][0]} {nameFromN[num][1][1]}</div>\n\n                              workaround:\n                              title=\"{nameFromN[num][1][1]}\"\n                              ><span>{nameFromN[num][1][0]}</span><span style=\"margin-left: 0.33em /* force white-space */\">{nameFromN[num][1][1]}</span></div>\n                            -->\n\n                          <div\n                            style=\"\n                              height: 55px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.g[g][1]};\n                              overflow-x: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][2][1]}\"\n                          >{nameFromN[num][2][1]}</div>\n\n                        </div>\n                        \n                      </foreignObject><!--\n\n                 -->{:else if nameParts === 4 && (nameFormat === 'a/s/m/g' || nameFormat === 'a/s/m/gxbody')}<!--\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 40px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.a[a][1]};\n                              overflow: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{@html addNamePrefix(nameFromN[num][0])}</div>\n                          <div\n                            style=\"\n                              height: 40px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.s[s][1]};\n                              overflow: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                            >{@html addNamePrefix(nameFromN[num][1])}</div>\n                          \n                          <div\n                            style=\"\n                              height: 40px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.m[m][1]};\n                              overflow: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][2][1]}\"\n                          >{@html addNamePrefix(nameFromN[num][2])}</div>\n\n                          \n                          <div\n                            style=\"\n                              height: 40px; width: 160px;\n                              display: flex;\n                              justify-content: left;\n                              align-items: center;\n                              color: {valColor.g[g][1]};\n                              overflow: hidden;\n                              word-break: keep-all;\n                              padding: 0 4px;\n                            \"\n                            title=\"{nameFromN[num][3][1]}\"\n                          >{@html addNamePrefix(nameFromN[num][3])}</div>\n\n                        </div>\n                        \n                      </foreignObject><!--\n\n                 -->{:else if nameParts === 4 && nameFormat === 'smagxshape'}<!--\n\n                      TODO generalize\n                        also allow 's-a-m-g' = top sense+age + left sense+move [inner values, emotions]\n                          then the combined values are horizontal not vertical\n                        no!\n                          use the \"normal format\" by default:\n                            top sense+age + left sense+move\n                            use notation 's/e/m|a/b/g' for\n                              s a\n                              e b\n                              m g\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.s[s][1]};\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.m[m][1]};\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                            >{nameFromN[num][1][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.a[a][1]};\n                            \"\n                            title=\"{nameFromN[num][2][1]}\"\n                          >{nameFromN[num][2][0]}</div>\n\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.g[g][1]};\n                            \"\n                            title=\"{nameFromN[num][3][1]}\"\n                          >{nameFromN[num][3][0]}</div>\n\n                        </div>\n                        \n                      </foreignObject><!--\n\n                 -->{:else if nameParts === 4 && nameFormat === 's/m|a/g'}<!--\n\n                      TODO generalize\n                        also allow 's-a-m-g' = top sense+age + left sense+move [inner values, emotions]\n                          then the combined values are horizontal not vertical\n                        no!\n                          use the \"normal format\" by default:\n                            top sense+age + left sense+move\n                            use notation 's/e/m|a/b/g' for\n                              s a\n                              e b\n                              m g\n\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.s[s][1]};\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.m[m][1]};\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                            >{nameFromN[num][1][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.a[a][1]};\n                            \"\n                            title=\"{nameFromN[num][2][1]}\"\n                          >{nameFromN[num][2][0]}</div>\n\n                          \n                          <div\n                            style=\"\n                              height: 80px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.g[g][1]};\n                            \"\n                            title=\"{nameFromN[num][3][1]}\"\n                          >{nameFromN[num][3][0]}</div>\n\n                        </div>\n                        \n                      </foreignObject><!--\n\n                 -->{:else if nameParts === 6 && nameFormat === 's/e/m|a/b/g'}<!--\n\n                      only nameFormat 's/e/m|a/b/g'\n                        s a\n                        e b\n                        m g\n\n                   --><foreignObject\n                        x=\"20\" y=\"20\"\n                        width=\"160\" height=\"160\"\n                      >\n\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            line-height: 1em;\n                            font-family: sans-serif;\n\n                            font-size: 36px;\n\n                            padding: 0; margin: 0;\n\n                            word-break: break-all;\n                            width: 160px; height: 160px;\n\n                            text-align: center;\n                            display: flex;\n                            flex-wrap: wrap;\n                            flex-direction: column;\n                          \"\n                        >\n                          <div\n                            style=\"\n                              height: 55px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.s[s][1]};\n                            \"\n                            title=\"{nameFromN[num][0][1]}\"\n                          >{nameFromN[num][0][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 50px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.sm[sm][1]};\n                            \"\n                            title=\"{nameFromN[num][1][1]}\"\n                          >{nameFromN[num][1][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 55px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.m[m][1]};\n                            \"\n                            title=\"{nameFromN[num][2][1]}\"\n                            >{nameFromN[num][2][0]}</div>\n                          \n                          <div\n                            style=\"\n                              height: 55px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.a[a][1]};\n                            \"\n                            title=\"{nameFromN[num][3][1]}\"\n                          >{nameFromN[num][3][0]}</div>\n\n                          \n                          <div\n                            style=\"\n                              height: 50px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.ag[ag][1]};\n                            \"\n                            title=\"{nameFromN[num][4][1]}\"\n                          >{nameFromN[num][4][0]}</div>\n\n                          <div\n                            style=\"\n                              height: 55px; width: 80px;\n                              display: flex;\n                              justify-content: center;\n                              align-items: center;\n                              color: {valColor.g[g][1]};\n                            \"\n                            title=\"{nameFromN[num][5][1]}\"\n                          >{nameFromN[num][5][0]}</div>\n\n                        </div>\n                        \n                      </foreignObject><!--\n\n                 -->{/if}\n\n                    {#if captionText[x][y]}\n\n                      <!-- TODO cosmetic: fit text to circle -->\n\n                      <foreignObject\n                        x=\"20\" y=\"80\"\n                        width=\"160\" height=\"160\"\n                      >\n                        <div\n                          xmlns=\"http://www.w3.org/1999/xhtml\"\n                          style=\"\n                            font-size: 48px;\n                            color: {groupColor[groupFromN[num]][1]};\n                          \"\n                        >{captionText[x][y]}</div>\n                      </foreignObject>\n                    {/if}\n                  {/if}\n                </g>\n              </svg>\n            </g>\n          {/if}\n        {/each}\n      {/each}\n    </g><!-- close #grid -->\n  </g><!-- close #grid_wrap -->\n\n</svg><!-- close #content -->\n\n</div><!-- close #transform-translate -->\n</div><!-- close #transform-rotate -->\n</div><!-- close #transform-down -->\n</div><!-- close #transform-move -->\n\n<div id=\"control-wrapper\"\n\n  style=\"\n    width: {width}px; height: {height}px;\n    margin-top: {-2*height -4.5}px;/* TODO why -4? */\n    \n    line-height: 0; /* remove vertical spacing */\n\n    transform: translateZ(1px);\n  \"\n>\n\n{#if true}\n\n  {#each [\n\n    // frame width = 1/4\n    ['top-left', 'none', 0, 0, width/4, height/4],\n    ['top-center', 'none', width/4, 0, width/4*2, height/4],\n    ['top-right', 'none', width/4*3, 0, width/4, height/4],\n\n    ['center-left', 'none', 0, height/4, width/4, height/4*2],\n    ['center-center', 'move', width/4, height/4, width/4*2, height/4*2],\n    ['center-right', 'none', width/4*3, height/4, width/4, height/4*2],\n\n    ['bottom-left', 'none', 0, height/4*3, width/4, height/4],\n    ['bottom-center', 'none', width/4, height/4*3, width/4*2, height/4],\n    ['bottom-right', 'none', width/4*3, height/4*3, width/4, height/4],\n\n  ] as [name, touchAction, x, y, w, h]}\n\n    <!-- control targets -->\n    <div\n      id=\"control-{name}\"\n      class=\"control-target\"\n      style=\"\n        display: inline-block;\n\n        background: transparent;\n        touch-action: none;\n\n        width: {w -2}px;\n        height: {h -2}px;\n        \n        padding: 0; margin: 0;\n        font-size: 0;\n        line-height: 0;\n      \"\n    ></div>\n\n  {/each}\n\n{/if}\n</div><!-- close #control-wrapper -->\n\n</div><!-- close #transform-mask -->\n</div><!-- close #wrapper -->\n\n<div\n  class=\"overlay-box\"\n  class:hidden=\"{exportOverlayHide}\"\n>\n  <div class=\"title\">export SVG image</div>\n  <div class=\"close\" on:click=\"{()=>{exportOverlayHide=true;}}\">✕</div>\n  <div class=\"content\">\n    <!-- svelte will complain: <a href=\"javascript: null\" id=\"export-link\">right click and save link</a>-->\n    <a href=\"empty.html\" id=\"export-link\">right click and save link</a>\n  </div>\n</div>\n\n</main>\n\n\n\n<style>\n\n  .overlay-box.hidden {\n    display: none;\n  }\n  .overlay-box {\n    z-index: +2;\n    padding: 0.25em;\n    /*transform: translateZ(+2px);*/\n    position: absolute;\n    top: 50%; left: 50%;\n    width: 12em; height: 6em;\n    margin: -3em 0 0 -6em;\n    border: solid 1px var(--fg);\n    background: var(--bg);\n  }\n  .overlay-box .title {\n    width: 10.5em; height: 1em;\n    line-height: 0.9em;\n    border-bottom: solid 1px var(--fg);\n    float: left;\n    padding: 0.25em;\n    margin: -0.25em 0 0.25em -0.25em;\n  }\n  .overlay-box .close {\n    cursor: pointer;\n    width: 1em; height: 1em;\n    padding: 0.25em;\n    line-height: 0.9em;\n    border: solid 1px var(--fg);\n    margin-left: -1px;\n    margin: -0.25em -0.25em 0.25em -1px;\n    border-top: none;\n    border-right: none;\n    float: right;\n  }\n  .overlay-box .content {\n    clear: both;\n    height: 4em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  a {\n    color: var(--fg);\n    border-bottom: dotted 1px var(--fg);\n  }\n  a:hover {\n    text-decoration: none;\n    border-bottom: solid 1px var(--fg);\n  }\n\n\n\n\n\n  /* TODO unused?\n  tr.empty, tr.empty td {\n    height: 0;\n    padding: 0;\n    margin: 0;\n  }\n  */\n\n\n  /* css variables. init here + change later in javascript */\n  \n  :root {\n    --bg: #000000;\n    --fg: #ffffff;\n    --bg-alpha33: rgba(0,0,0, 0.33);\n    --angle: 0deg;\n    --angleBack: 0deg;\n  }\n\n\n\n  :global(html, body) {\n    margin: 0;\n    padding: 0;\n  }\n\n  main {\n    background-color: var(--bg);\n    color: var(--fg);\n\n    min-height: 100%;\n  }\n\n  /*\n  p {\n    margin-bottom: 2em;\n  }\n  */\n\n  main /* , p, tt */ {\n    font-size: 16px;\n  }\n\n  .uppercase, .uppercase * {\n    text-transform: uppercase;\n  }\n\n\n\n  :global(.animate_dash .anim_dash1),\n  :global(.animate_dash .anim_dash2) {\n    stroke-dasharray: 30, 10;\n  }\n\n  /* this needs way too much CPU power [70% cpu]\n    cos of buggy svg implementations\n    workaround:\n    use javascript with a low frame-rate\n\n    .animate .anim_dash1,\n    .animate .anim_dash2 {\n      animation: anim_dash2 4s linear infinite;\n    }\n    @keyframes anim_dash1 {\n      100% { stroke-dashoffset: -80 }\n    }\n    @keyframes anim_dash2 {\n      100% { stroke-dashoffset:  80 }\n    }\n  */\n\n  /* expand = collapsed by default */\n  .expand {\n    /* get compositor layer for GPU animation */\n    /* will-change: transform; */\n    margin-bottom: 10px;\n  }\n\n  .expand .body{\n    /*transition: height .5s ease-in-out;*/\n    transition: height .5s cubic-bezier(0.445, 0.050, 0.550, 0.950 );\n    /* = penner equation for easeInOutSine */\n    height: 0; /* start value */\n    overflow: auto; /* add scrollbar */\n  }\n\n  /* collapse = expanded by default */\n  .collapse .body{\n    /*transition: height .5s ease-in-out;*/\n    transition: height .5s cubic-bezier(0.445, 0.050, 0.550, 0.950 );\n    /* = penner equation for easeInOutSine */\n    /* height: 0; /* start value */\n    /* overflow: auto; /* add scrollbar */\n  }\n\n  /* TODO rename to body-translate */\n  :global(.animate_moves g.body_wrapper),\n\n  /* TODO rename to body-rotate */\n  :global(.animate_moves g.rotateBack),\n  :global(.animate_moves svg.body > g),\n\n  /* TODO rename to group-translate, group-rotate */\n  :global(.animate_moves #transform-translate),\n  :global(.animate_moves #transform-rotate)\n  {\n    /*transition: transform .5s cubic-bezier(0.445, 0.050, 0.550, 0.950 );*/\n    transition: transform .5s linear;\n  }\n\n\n\n  /* scrollbars */\n\n  .scroll::-webkit-scrollbar {\n      width: 20px;\n      height: 20px;\n  }\n\n  .body.scroll::-webkit-scrollbar-track,\n  .body.scroll::-webkit-scrollbar-thumb{\n    border-left: none; /* avoid double borders */\n  }\n\n  .scroll::-webkit-scrollbar-track {\n    /* -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); */\n    border: solid 1px var(--fg);\n    background: var(--bg);\n  }\n\n  .scroll::-webkit-scrollbar-thumb {\n    outline: 1px solid slategrey;\n    border: solid 1px var(--fg);\n    background: center no-repeat url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" x=\"0px\" y=\"0px\" height=\"24px\" width=\"24px\"><g style=\"stroke: %23ffffff\" stroke-width=\"1\"><line x1=\"4\" y1=\"8\" x2=\"20\" y2=\"8\" /><line x1=\"4\" y1=\"16\" x2=\"20\" y2=\"16\" /></g></svg>')\n  }\n\n\n\n  /* expand + collapse */\n\n  .expand .head {\n    padding: 0;\n  }\n\n  .expand .head * {\n    margin: 0;\n  }\n\n  .expand .head button {\n    width: 20px;\n    border-left: none !important;\n    padding: 2px;\n  }\n\n  .expand .head input {\n    width: 120px;\n    padding: 2px 4px;\n  }\n\n  .expand .body button {\n    margin: 0;\n    width: 120px;\n    padding: 2px 4px;\n    text-align: left;\n    vertical-align: center;\n    border-top: none;\n    display: block;\n  }\n\n  /* TODO unused?\n  .expand--expanded, .expand--collapsed {\n    animation-name: a_expand;\n    animation-duration: 0.5s;\n    animation-timing-function: linear;\n  }\n  */\n\n\n\n  /* control menu */\n\n  #control0 {\n    /*\n    position: fixed;\n    */\n    position: absolute;\n    top: 0%; left: 0%;\n    \n    /* TODO android workaround for position:fixed\n      with javascript scroll+zoom handler? */\n\n  }\n\n  .control {\n    /*\n    position: fixed;\n    */\n    z-index: +1;\n\n    /* TODO FIXME scroll broken after expand */\n\n    background-color: var(--bg-alpha33);\n\n    white-space: nowrap;\n\n    width: 160px;\n    overflow-x: hidden;\n\n    /* scroll vertical */\n    max-height: 100%;\n    overflow-y: auto;\n\n    padding: 2px;\n\n    /* TODO show control menu always next to grid, use css \"flex\" layout? */\n    \n    /* TODO set height to auto? max-height: 100%, overflow auto */\n\n    transform-origin: top left;\n\n    transition:\n      width .5s cubic-bezier(0.445, 0.050, 0.550, 0.950 )\n    ;\n    /* = penner equation for easeInOutSine */\n\n  }\n\n/* TODO unused?\n  .control.collapsed > *:not(.nohide) {\n    display: none;\n  }\n*/\n\n  .control.collapsed > .nohide button:not(.nohide) {\n    display: none;\n  }\n\n  /* FIXME buttons without svg look odd */\n  .control button.square {\n    padding: 2px; margin: 2px;\n    width: 30px; height: 30px;\n    overflow: hidden;\n  }\n\n  .control button.square > svg {\n    width: 20px; height: 20px;\n    margin: 0;\n  }\n\n  .control div.square {\n    margin: 2px;\n    width: 30px; height: 22px;\n    display: inline-block;\n  }\n\n  .control button, .control input {\n    background-color: var(--bg);\n    border: solid 1px  var(--fg);\n    color: var(--fg);\n  }\n\n  .control {\n    font-size: 16px;\n    text-align: left;\n  }\n\n  main > div {\n    text-align: center;\n    margin: 0;\n    top: 0; left: 0;\n    overflow: auto;\n  }\n\n  svg.body.center circle {\n    stroke-width: 12px;\n    stroke: url(#circle_double_stroke);\n  }\n\n  .control .first-row {\n    margin-top: 16px\n  }\n\n  .control .last-row {\n    margin-bottom: 16px\n  }\n\n  symbol.zodiac {\n    fill: none;\n    stroke-width: 12;\n  }\n\n  div#description {\n    /** / text-align: left; /**/\n    margin: 1em;\n  }\n\n  .foto-container-broad .foto {\n    /* size depends on scale factor html vs svg [TODO verify] */\n    max-height: 105px;\n    max-width: 145px;\n  }\n\n  .foto-container-high .foto {\n    /* size depends on scale factor html vs svg [TODO verify] */\n    height: 157px;\n    width: 119px;\n  }\n\n</style>\n","import AlchiMaps from './AlchiMaps.svelte'\n\nconst app = new AlchiMaps({\n  target: document.body,\n\t//props: {\n\t//\tname: 0b0011\n\t//}\n})\n\nexport default app\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","xlink_attr","setAttributeNS","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","globals","globalThis","global","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_mount","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","local","customElement","m","new_on_destroy","map","filter","mount_component","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","index","indexOf","splice","sineInOut","t","Math","cos","PI","is_date","obj","prototype","toString","call","get_interpolator","type","isArray","Error","arr","bi","getTime","delta","keys","interpolators","result","tweened","defaults","target_value","opts","previous_task","started","delay","duration","easing","linear","interpolate","abort","promise","fulfill","[object Object]","loop","elapsed","ac_bits_asmg_11","letter_asmg","element_outside","group_color","entries","reduce","acc","numGroups","colors","col","padStart","2","4","8","16","idxFromDim","A","S","M","G","g","getDimBit","asmg","dim","letterFromASMG","undefined","zodiacMutableFromSM","zodiacCardinalFromSM","zodiacFixedFromSM","nameByLocaleData","en","B","C","D","1","3","F","L","P","N","E","I","moore_gillette","mbti","J","T","INTP","INFJ","INTJ","INFP","ESFJ","ESFP","ESTJ","ESTP","ENFP","ENFJ","ENTJ","ENTP","ISTJ","ISTP","ISFJ","ISFP","pol","body","hormones","glands","sheldonMorph","flowProfile","deloitteBC","sevenChakras","simpsons","southPark","americanDad","keirseyTemperament","keirseyTemperamentOld","jungianFunction","ph360me","bodyWeight","ayurvedaDoshas","eigenColor","dressColor","harryPotter","islamSufiJalalAlDinMuhammadRumi","satanicBibleByAntonSzandorLaVey","paracelsus","attachmentStyle","islamNafs","dictionnaireInfernal","psychiatry","racesByLinnee","humorsByGalenCMSP","humorsByHippocratesAndKantSMCP","characterStylesByErnstKretschmer","EduardSprangerAndValueAttitudes","mistakenGoalsByAlfredAdler","worldViewsByErichAdickes","characterByPlatoOfAthens","livingCreaturesByEzekielTheProphet","PersonalityStyleByTonyAlessandra","conflictManagementByJayHall","interactionStylesByLindaVBerens","personalityProfileByHartman","brainDominanceByHerrmann","managerialGridByBlakeMouton","socialStyleByDavidMerrill","orientationToLifeByStuartAtkinsLIFO","sourceOfHappinessByAristotelesOfStagira","temperamentByIrenaeusOfSmyrna","totemSpiritsByParacelsusOfHohenheim","bigFive","nexusLearningStylesByGordonBull","alfredAdler","discByWilliamMarston","erichFromm","cpi260","interactionStylesByLindaBerens","loveStylesByHelenFisher","christianDemonology","de","nl","el","el_r","da","ru","ru_r","cz","tr","ar","ar_r","cn","cn_r","ayur","hi","hi_r","localName","fallback","ka","split","parent","loc","locale","slice","lastKey","console","log","nameFormatSpecialChars","tableNameFromN","nameFormat","join","repeats","concat","la","pa","braceRoundLevel","braceSquareLevel","braceRoundStr","braceSquareStr","li","val","includes","num","partFormat","short","long","asmgShortLong","contains","specialShortLong","idx","res","warn","needle","this","setLocale","Number","mod","n","substring","equals","match","sm","ag","sqrt","translate_origin_x","translate_origin_y","clientX","clientY","y","factor","groupFormat","tmp","parseInt","acc2","val2","idxFromVal","self","values","toUpperCase","p_sm","x_pos","p_pos","pathosFormat","replace","nameFromN","showOddAngles","localeName","anim_dash_factor_key","x4","yIdx","matrix","groupFromN","num_p1","num_p2","editFoto","handleClickBody","exportOverlayHide","destroy_component","$destroy","$$props","$$set"],"mappings":"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"}